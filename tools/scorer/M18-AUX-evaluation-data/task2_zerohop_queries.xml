<?xml version="1.0" encoding="UTF-8"?>
<zerohop_queries>
  <zerohop_query id="AIDA_TA2_ZH_2019_0001">
    <reference_kbid> LDC2019E43:690791|LDC2019E43:80000032 </reference_kbid>
    <sparql>
 	<![CDATA[
              PREFIX ldcOnt: <https://tac.nist.gov/tracks/SM-KBP/2019/ontologies/LDCOntology#>
              PREFIX rdf:   <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
              PREFIX aida:  <https://tac.nist.gov/tracks/SM-KBP/2019/ontologies/InterchangeOntology#>
              PREFIX cfn:   <https://verdi.nextcentury.com/custom-function/>
              PREFIX xsd:   <http://www.w3.org/2001/XMLSchema#>
              
              # Query: AIDA_TA2_ZH_2019_0001
              # Query description: Find all informative mentions of entities linked to "LDC2019E43:690791|LDC2019E43:80000032"
              # NIST default aggregate confidence of ?cluster is a function of
              #      ?link_cv      # confidenceValue of asserting that ?cluster is the same as reference KB node ?link_target
              #      ?j_cv         # confidenceValue of informativeJustification
              
              # ?j_cv is used to rank informative mentions within a cluster for purposes of pooling and AP scoring.
              
              # In M18, we use the ?j_cv (confidence in the justification, e.g., confidence of _:b02) and interpret that confidence
              # as the confidence of linking the justification to the cluster; _:b02 is used *only* to represent an informative
              # mention for some cluster, even though that cluster is not referenced in _:b02. Ideally (in future), there would be
              # an aida:InformativeJustificationAssertion construct (paralleling the structure of an aida:LinkAssertion) that
              # associates a confidence to each aida:informativeJustification, and could represent the confidence of linking an
              # InformativeJustification to a cluster.
              
              # _:b12 a                        aida:TextJustification ;
              #      aida:confidence          [ a                     aida:Confidence ;
              #                                 aida:confidenceValue  "1.0"^^<http://www.w3.org/2001/XMLSchema#double> ;
              #                                 aida:system           ldc:testSystem
              #                               ] ;
              #      aida:endOffsetInclusive  "286"^^<http://www.w3.org/2001/XMLSchema#int> ;
              #      aida:privateData         [ a                 aida:PrivateData ;
              #                                 aida:jsonContent  "{\"mention\":\"M000721\"}" ;
              #                                 aida:system       ldc:testSystem
              #                               ] ;
              #      aida:source              "DE005" ;
              #      aida:sourceDocument      "D0100" ;
              #      aida:startOffset         "260"^^<http://www.w3.org/2001/XMLSchema#int> ;
              #      aida:system              ldc:testSystem .
              #
              # _:b11 a              aida:LinkAssertion ;
              #      aida:confidence [ a                     aida:Confidence ;
              #                        aida:confidenceValue  "0.498"^^xsd:double ;
              #                        aida:system           ldc:testSystem
              #                      ] ;
              #      aida:linkTarget "ldc:E0137" ;
              #      aida:system     ldc:testSystem .
              #
              # _:c12 a               aida:InformativeJustificationAssertion ;
              #       aida:confidence [ a                     aida:Confidence ;
              #                         aida:confidenceValue  "0.498"^^xsd:double ;
              #                         aida:system           ldc:testSystem
              #                       ] ;
              #      aida:informativeJustification _:b12 ;
              #      aida:system     ldc:testSystem .
              #
              # ldc:cluster-E0137     a                             aida:SameAsCluster ;
              #                       aida:informativeJustification _:c12 ;
              #                       aida:link                     _:b11 ;
              #                       aida:system                   ldc:testSystem .
              
              
              SELECT DISTINCT
                     ?docid             # sourceDocument
                     ?query_link_target # link target as part of the query
                     ?link_target       # link target in the KB matching ?query_link_target
                     ?cluster           # the ?cluster linked to ?link_target
                     ?infj_span         # informativeJustification span taken from the ?cluster
                     ?j_cv              # confidenceValue of informativeJustification
                     ?link_target       # query reference KB node linked to a ?cluster
                     ?link_cv           # confidenceValue of asserting that ?cluster is the same as reference KB node ?link_target
              
              WHERE {
                  BIND ("LDC2019E43:690791|LDC2019E43:80000032" AS ?query_link_target)
              
                  # Find ?cluster linked to "LDC2019E43:690791|LDC2019E43:80000032"
                  # Find the ?link_cv: confidenceValue of linking to external KB entity
                  ?cluster              a                             aida:SameAsCluster .
                  ?cluster              aida:informativeJustification ?inf_justification .
                  ?cluster              aida:link                     ?ref_kb_link .
                  ?ref_kb_link          a                             aida:LinkAssertion .
                  ?ref_kb_link          aida:linkTarget               ?link_target .
                  ?ref_kb_link          aida:confidence               ?link_confidence .
                  ?link_confidence      aida:confidenceValue          ?link_cv .
                  
                  FILTER(cfn:memberOf(str(?link_target), str(?query_link_target))) .
              
                  # Find mention spans for ?inf_justification
                  ?inf_justification    aida:source          ?doceid .
                  ?inf_justification    aida:sourceDocument  ?docid .
                  ?inf_justification    aida:confidence      ?j_confidence .
                  ?j_confidence         aida:confidenceValue ?j_cv .
              
                  OPTIONAL {
                         ?inf_justification a                           aida:TextJustification .
                         ?inf_justification aida:startOffset            ?so .
                         ?inf_justification aida:endOffsetInclusive     ?eo
                  }
                  OPTIONAL {
                         ?inf_justification a                           aida:ImageJustification .
                         ?inf_justification aida:boundingBox            ?bb1  .
                         ?bb1               aida:boundingBoxUpperLeftX  ?ulx1 .
                         ?bb1               aida:boundingBoxUpperLeftY  ?uly1 .
                         ?bb1               aida:boundingBoxLowerRightX ?lrx1 .
                         ?bb1               aida:boundingBoxLowerRightY ?lry1
                  }
                  OPTIONAL {
                         ?inf_justification a                           aida:KeyFrameVideoJustification .
                         ?inf_justification aida:keyFrame               ?kfid .
                         ?inf_justification aida:boundingBox            ?bb2  .
                         ?bb2               aida:boundingBoxUpperLeftX  ?ulx2 .
                         ?bb2               aida:boundingBoxUpperLeftY  ?uly2 .
                         ?bb2               aida:boundingBoxLowerRightX ?lrx2 .
                         ?bb2               aida:boundingBoxLowerRightY ?lry2
                  }
                  OPTIONAL {
                         ?inf_justification a                           aida:ShotVideoJustification .
                         ?inf_justification aida:shot                   ?sid
                  }
                  OPTIONAL {
                         ?inf_justification a                           aida:AudioJustification .
                         ?inf_justification aida:startTimestamp         ?st .
                         ?inf_justification aida:endTimestamp           ?et
                  }
              
                  BIND( IF( BOUND(?sid), ?sid, "__NULL__") AS ?_sid) .
                  BIND( IF( BOUND(?kfid), ?kfid, "__NULL__") AS ?_kfid) .
                  BIND( IF( BOUND(?so), ?so, "__NULL__") AS ?_so) .
                  BIND( IF( BOUND(?eo), ?eo, "__NULL__") AS ?_eo) .
                  BIND( IF( BOUND(?st), ?st, "__NULL__") AS ?_st) .
                  BIND( IF( BOUND(?et), ?et, "__NULL__") AS ?_et) .
                  BIND( COALESCE(?ulx1, ?ulx2, "__NULL__") AS ?_ulx) .
                  BIND( COALESCE(?uly1, ?uly2, "__NULL__") AS ?_uly) .
                  BIND( COALESCE(?lrx1, ?lrx2, "__NULL__") AS ?_lrx) .
                  BIND( COALESCE(?lry1, ?lry2, "__NULL__") AS ?_lry) .
              
                  BIND( cfn:getSpan(str(?docid), str(?doceid), str(?_sid), str(?_kfid), str(?_so), str(?_eo), str(?_ulx), str(?_uly), str(?_lrx), str(?_lry), str(?_st), str(?_et) ) AS ?infj_span ) .
              }
	]]>
     </sparql>
  </zerohop_query>
  <zerohop_query id="AIDA_TA2_ZH_2019_0002">
    <reference_kbid> LDC2019E43:80000068 </reference_kbid>
    <sparql>
 	<![CDATA[
              PREFIX ldcOnt: <https://tac.nist.gov/tracks/SM-KBP/2019/ontologies/LDCOntology#>
              PREFIX rdf:   <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
              PREFIX aida:  <https://tac.nist.gov/tracks/SM-KBP/2019/ontologies/InterchangeOntology#>
              PREFIX cfn:   <https://verdi.nextcentury.com/custom-function/>
              PREFIX xsd:   <http://www.w3.org/2001/XMLSchema#>
              
              # Query: AIDA_TA2_ZH_2019_0002
              # Query description: Find all informative mentions of entities linked to "LDC2019E43:80000068"
              # NIST default aggregate confidence of ?cluster is a function of
              #      ?link_cv      # confidenceValue of asserting that ?cluster is the same as reference KB node ?link_target
              #      ?j_cv         # confidenceValue of informativeJustification
              
              # ?j_cv is used to rank informative mentions within a cluster for purposes of pooling and AP scoring.
              
              # In M18, we use the ?j_cv (confidence in the justification, e.g., confidence of _:b02) and interpret that confidence
              # as the confidence of linking the justification to the cluster; _:b02 is used *only* to represent an informative
              # mention for some cluster, even though that cluster is not referenced in _:b02. Ideally (in future), there would be
              # an aida:InformativeJustificationAssertion construct (paralleling the structure of an aida:LinkAssertion) that
              # associates a confidence to each aida:informativeJustification, and could represent the confidence of linking an
              # InformativeJustification to a cluster.
              
              # _:b12 a                        aida:TextJustification ;
              #      aida:confidence          [ a                     aida:Confidence ;
              #                                 aida:confidenceValue  "1.0"^^<http://www.w3.org/2001/XMLSchema#double> ;
              #                                 aida:system           ldc:testSystem
              #                               ] ;
              #      aida:endOffsetInclusive  "286"^^<http://www.w3.org/2001/XMLSchema#int> ;
              #      aida:privateData         [ a                 aida:PrivateData ;
              #                                 aida:jsonContent  "{\"mention\":\"M000721\"}" ;
              #                                 aida:system       ldc:testSystem
              #                               ] ;
              #      aida:source              "DE005" ;
              #      aida:sourceDocument      "D0100" ;
              #      aida:startOffset         "260"^^<http://www.w3.org/2001/XMLSchema#int> ;
              #      aida:system              ldc:testSystem .
              #
              # _:b11 a              aida:LinkAssertion ;
              #      aida:confidence [ a                     aida:Confidence ;
              #                        aida:confidenceValue  "0.498"^^xsd:double ;
              #                        aida:system           ldc:testSystem
              #                      ] ;
              #      aida:linkTarget "ldc:E0137" ;
              #      aida:system     ldc:testSystem .
              #
              # _:c12 a               aida:InformativeJustificationAssertion ;
              #       aida:confidence [ a                     aida:Confidence ;
              #                         aida:confidenceValue  "0.498"^^xsd:double ;
              #                         aida:system           ldc:testSystem
              #                       ] ;
              #      aida:informativeJustification _:b12 ;
              #      aida:system     ldc:testSystem .
              #
              # ldc:cluster-E0137     a                             aida:SameAsCluster ;
              #                       aida:informativeJustification _:c12 ;
              #                       aida:link                     _:b11 ;
              #                       aida:system                   ldc:testSystem .
              
              
              SELECT DISTINCT
                     ?docid             # sourceDocument
                     ?query_link_target # link target as part of the query
                     ?link_target       # link target in the KB matching ?query_link_target
                     ?cluster           # the ?cluster linked to ?link_target
                     ?infj_span         # informativeJustification span taken from the ?cluster
                     ?j_cv              # confidenceValue of informativeJustification
                     ?link_target       # query reference KB node linked to a ?cluster
                     ?link_cv           # confidenceValue of asserting that ?cluster is the same as reference KB node ?link_target
              
              WHERE {
                  BIND ("LDC2019E43:80000068" AS ?query_link_target)
              
                  # Find ?cluster linked to "LDC2019E43:80000068"
                  # Find the ?link_cv: confidenceValue of linking to external KB entity
                  ?cluster              a                             aida:SameAsCluster .
                  ?cluster              aida:informativeJustification ?inf_justification .
                  ?cluster              aida:link                     ?ref_kb_link .
                  ?ref_kb_link          a                             aida:LinkAssertion .
                  ?ref_kb_link          aida:linkTarget               ?link_target .
                  ?ref_kb_link          aida:confidence               ?link_confidence .
                  ?link_confidence      aida:confidenceValue          ?link_cv .
                  
                  FILTER(cfn:memberOf(str(?link_target), str(?query_link_target))) .
              
                  # Find mention spans for ?inf_justification
                  ?inf_justification    aida:source          ?doceid .
                  ?inf_justification    aida:sourceDocument  ?docid .
                  ?inf_justification    aida:confidence      ?j_confidence .
                  ?j_confidence         aida:confidenceValue ?j_cv .
              
                  OPTIONAL {
                         ?inf_justification a                           aida:TextJustification .
                         ?inf_justification aida:startOffset            ?so .
                         ?inf_justification aida:endOffsetInclusive     ?eo
                  }
                  OPTIONAL {
                         ?inf_justification a                           aida:ImageJustification .
                         ?inf_justification aida:boundingBox            ?bb1  .
                         ?bb1               aida:boundingBoxUpperLeftX  ?ulx1 .
                         ?bb1               aida:boundingBoxUpperLeftY  ?uly1 .
                         ?bb1               aida:boundingBoxLowerRightX ?lrx1 .
                         ?bb1               aida:boundingBoxLowerRightY ?lry1
                  }
                  OPTIONAL {
                         ?inf_justification a                           aida:KeyFrameVideoJustification .
                         ?inf_justification aida:keyFrame               ?kfid .
                         ?inf_justification aida:boundingBox            ?bb2  .
                         ?bb2               aida:boundingBoxUpperLeftX  ?ulx2 .
                         ?bb2               aida:boundingBoxUpperLeftY  ?uly2 .
                         ?bb2               aida:boundingBoxLowerRightX ?lrx2 .
                         ?bb2               aida:boundingBoxLowerRightY ?lry2
                  }
                  OPTIONAL {
                         ?inf_justification a                           aida:ShotVideoJustification .
                         ?inf_justification aida:shot                   ?sid
                  }
                  OPTIONAL {
                         ?inf_justification a                           aida:AudioJustification .
                         ?inf_justification aida:startTimestamp         ?st .
                         ?inf_justification aida:endTimestamp           ?et
                  }
              
                  BIND( IF( BOUND(?sid), ?sid, "__NULL__") AS ?_sid) .
                  BIND( IF( BOUND(?kfid), ?kfid, "__NULL__") AS ?_kfid) .
                  BIND( IF( BOUND(?so), ?so, "__NULL__") AS ?_so) .
                  BIND( IF( BOUND(?eo), ?eo, "__NULL__") AS ?_eo) .
                  BIND( IF( BOUND(?st), ?st, "__NULL__") AS ?_st) .
                  BIND( IF( BOUND(?et), ?et, "__NULL__") AS ?_et) .
                  BIND( COALESCE(?ulx1, ?ulx2, "__NULL__") AS ?_ulx) .
                  BIND( COALESCE(?uly1, ?uly2, "__NULL__") AS ?_uly) .
                  BIND( COALESCE(?lrx1, ?lrx2, "__NULL__") AS ?_lrx) .
                  BIND( COALESCE(?lry1, ?lry2, "__NULL__") AS ?_lry) .
              
                  BIND( cfn:getSpan(str(?docid), str(?doceid), str(?_sid), str(?_kfid), str(?_so), str(?_eo), str(?_ulx), str(?_uly), str(?_lrx), str(?_lry), str(?_st), str(?_et) ) AS ?infj_span ) .
              }
	]]>
     </sparql>
  </zerohop_query>
  <zerohop_query id="AIDA_TA2_ZH_2019_0003">
    <reference_kbid> LDC2019E43:80000306 </reference_kbid>
    <sparql>
 	<![CDATA[
              PREFIX ldcOnt: <https://tac.nist.gov/tracks/SM-KBP/2019/ontologies/LDCOntology#>
              PREFIX rdf:   <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
              PREFIX aida:  <https://tac.nist.gov/tracks/SM-KBP/2019/ontologies/InterchangeOntology#>
              PREFIX cfn:   <https://verdi.nextcentury.com/custom-function/>
              PREFIX xsd:   <http://www.w3.org/2001/XMLSchema#>
              
              # Query: AIDA_TA2_ZH_2019_0003
              # Query description: Find all informative mentions of entities linked to "LDC2019E43:80000306"
              # NIST default aggregate confidence of ?cluster is a function of
              #      ?link_cv      # confidenceValue of asserting that ?cluster is the same as reference KB node ?link_target
              #      ?j_cv         # confidenceValue of informativeJustification
              
              # ?j_cv is used to rank informative mentions within a cluster for purposes of pooling and AP scoring.
              
              # In M18, we use the ?j_cv (confidence in the justification, e.g., confidence of _:b02) and interpret that confidence
              # as the confidence of linking the justification to the cluster; _:b02 is used *only* to represent an informative
              # mention for some cluster, even though that cluster is not referenced in _:b02. Ideally (in future), there would be
              # an aida:InformativeJustificationAssertion construct (paralleling the structure of an aida:LinkAssertion) that
              # associates a confidence to each aida:informativeJustification, and could represent the confidence of linking an
              # InformativeJustification to a cluster.
              
              # _:b12 a                        aida:TextJustification ;
              #      aida:confidence          [ a                     aida:Confidence ;
              #                                 aida:confidenceValue  "1.0"^^<http://www.w3.org/2001/XMLSchema#double> ;
              #                                 aida:system           ldc:testSystem
              #                               ] ;
              #      aida:endOffsetInclusive  "286"^^<http://www.w3.org/2001/XMLSchema#int> ;
              #      aida:privateData         [ a                 aida:PrivateData ;
              #                                 aida:jsonContent  "{\"mention\":\"M000721\"}" ;
              #                                 aida:system       ldc:testSystem
              #                               ] ;
              #      aida:source              "DE005" ;
              #      aida:sourceDocument      "D0100" ;
              #      aida:startOffset         "260"^^<http://www.w3.org/2001/XMLSchema#int> ;
              #      aida:system              ldc:testSystem .
              #
              # _:b11 a              aida:LinkAssertion ;
              #      aida:confidence [ a                     aida:Confidence ;
              #                        aida:confidenceValue  "0.498"^^xsd:double ;
              #                        aida:system           ldc:testSystem
              #                      ] ;
              #      aida:linkTarget "ldc:E0137" ;
              #      aida:system     ldc:testSystem .
              #
              # _:c12 a               aida:InformativeJustificationAssertion ;
              #       aida:confidence [ a                     aida:Confidence ;
              #                         aida:confidenceValue  "0.498"^^xsd:double ;
              #                         aida:system           ldc:testSystem
              #                       ] ;
              #      aida:informativeJustification _:b12 ;
              #      aida:system     ldc:testSystem .
              #
              # ldc:cluster-E0137     a                             aida:SameAsCluster ;
              #                       aida:informativeJustification _:c12 ;
              #                       aida:link                     _:b11 ;
              #                       aida:system                   ldc:testSystem .
              
              
              SELECT DISTINCT
                     ?docid             # sourceDocument
                     ?query_link_target # link target as part of the query
                     ?link_target       # link target in the KB matching ?query_link_target
                     ?cluster           # the ?cluster linked to ?link_target
                     ?infj_span         # informativeJustification span taken from the ?cluster
                     ?j_cv              # confidenceValue of informativeJustification
                     ?link_target       # query reference KB node linked to a ?cluster
                     ?link_cv           # confidenceValue of asserting that ?cluster is the same as reference KB node ?link_target
              
              WHERE {
                  BIND ("LDC2019E43:80000306" AS ?query_link_target)
              
                  # Find ?cluster linked to "LDC2019E43:80000306"
                  # Find the ?link_cv: confidenceValue of linking to external KB entity
                  ?cluster              a                             aida:SameAsCluster .
                  ?cluster              aida:informativeJustification ?inf_justification .
                  ?cluster              aida:link                     ?ref_kb_link .
                  ?ref_kb_link          a                             aida:LinkAssertion .
                  ?ref_kb_link          aida:linkTarget               ?link_target .
                  ?ref_kb_link          aida:confidence               ?link_confidence .
                  ?link_confidence      aida:confidenceValue          ?link_cv .
                  
                  FILTER(cfn:memberOf(str(?link_target), str(?query_link_target))) .
              
                  # Find mention spans for ?inf_justification
                  ?inf_justification    aida:source          ?doceid .
                  ?inf_justification    aida:sourceDocument  ?docid .
                  ?inf_justification    aida:confidence      ?j_confidence .
                  ?j_confidence         aida:confidenceValue ?j_cv .
              
                  OPTIONAL {
                         ?inf_justification a                           aida:TextJustification .
                         ?inf_justification aida:startOffset            ?so .
                         ?inf_justification aida:endOffsetInclusive     ?eo
                  }
                  OPTIONAL {
                         ?inf_justification a                           aida:ImageJustification .
                         ?inf_justification aida:boundingBox            ?bb1  .
                         ?bb1               aida:boundingBoxUpperLeftX  ?ulx1 .
                         ?bb1               aida:boundingBoxUpperLeftY  ?uly1 .
                         ?bb1               aida:boundingBoxLowerRightX ?lrx1 .
                         ?bb1               aida:boundingBoxLowerRightY ?lry1
                  }
                  OPTIONAL {
                         ?inf_justification a                           aida:KeyFrameVideoJustification .
                         ?inf_justification aida:keyFrame               ?kfid .
                         ?inf_justification aida:boundingBox            ?bb2  .
                         ?bb2               aida:boundingBoxUpperLeftX  ?ulx2 .
                         ?bb2               aida:boundingBoxUpperLeftY  ?uly2 .
                         ?bb2               aida:boundingBoxLowerRightX ?lrx2 .
                         ?bb2               aida:boundingBoxLowerRightY ?lry2
                  }
                  OPTIONAL {
                         ?inf_justification a                           aida:ShotVideoJustification .
                         ?inf_justification aida:shot                   ?sid
                  }
                  OPTIONAL {
                         ?inf_justification a                           aida:AudioJustification .
                         ?inf_justification aida:startTimestamp         ?st .
                         ?inf_justification aida:endTimestamp           ?et
                  }
              
                  BIND( IF( BOUND(?sid), ?sid, "__NULL__") AS ?_sid) .
                  BIND( IF( BOUND(?kfid), ?kfid, "__NULL__") AS ?_kfid) .
                  BIND( IF( BOUND(?so), ?so, "__NULL__") AS ?_so) .
                  BIND( IF( BOUND(?eo), ?eo, "__NULL__") AS ?_eo) .
                  BIND( IF( BOUND(?st), ?st, "__NULL__") AS ?_st) .
                  BIND( IF( BOUND(?et), ?et, "__NULL__") AS ?_et) .
                  BIND( COALESCE(?ulx1, ?ulx2, "__NULL__") AS ?_ulx) .
                  BIND( COALESCE(?uly1, ?uly2, "__NULL__") AS ?_uly) .
                  BIND( COALESCE(?lrx1, ?lrx2, "__NULL__") AS ?_lrx) .
                  BIND( COALESCE(?lry1, ?lry2, "__NULL__") AS ?_lry) .
              
                  BIND( cfn:getSpan(str(?docid), str(?doceid), str(?_sid), str(?_kfid), str(?_so), str(?_eo), str(?_ulx), str(?_uly), str(?_lrx), str(?_lry), str(?_st), str(?_et) ) AS ?infj_span ) .
              }
	]]>
     </sparql>
  </zerohop_query>
  <zerohop_query id="AIDA_TA2_ZH_2019_0004">
    <reference_kbid> LDC2019E43:80000117 </reference_kbid>
    <sparql>
 	<![CDATA[
              PREFIX ldcOnt: <https://tac.nist.gov/tracks/SM-KBP/2019/ontologies/LDCOntology#>
              PREFIX rdf:   <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
              PREFIX aida:  <https://tac.nist.gov/tracks/SM-KBP/2019/ontologies/InterchangeOntology#>
              PREFIX cfn:   <https://verdi.nextcentury.com/custom-function/>
              PREFIX xsd:   <http://www.w3.org/2001/XMLSchema#>
              
              # Query: AIDA_TA2_ZH_2019_0004
              # Query description: Find all informative mentions of entities linked to "LDC2019E43:80000117"
              # NIST default aggregate confidence of ?cluster is a function of
              #      ?link_cv      # confidenceValue of asserting that ?cluster is the same as reference KB node ?link_target
              #      ?j_cv         # confidenceValue of informativeJustification
              
              # ?j_cv is used to rank informative mentions within a cluster for purposes of pooling and AP scoring.
              
              # In M18, we use the ?j_cv (confidence in the justification, e.g., confidence of _:b02) and interpret that confidence
              # as the confidence of linking the justification to the cluster; _:b02 is used *only* to represent an informative
              # mention for some cluster, even though that cluster is not referenced in _:b02. Ideally (in future), there would be
              # an aida:InformativeJustificationAssertion construct (paralleling the structure of an aida:LinkAssertion) that
              # associates a confidence to each aida:informativeJustification, and could represent the confidence of linking an
              # InformativeJustification to a cluster.
              
              # _:b12 a                        aida:TextJustification ;
              #      aida:confidence          [ a                     aida:Confidence ;
              #                                 aida:confidenceValue  "1.0"^^<http://www.w3.org/2001/XMLSchema#double> ;
              #                                 aida:system           ldc:testSystem
              #                               ] ;
              #      aida:endOffsetInclusive  "286"^^<http://www.w3.org/2001/XMLSchema#int> ;
              #      aida:privateData         [ a                 aida:PrivateData ;
              #                                 aida:jsonContent  "{\"mention\":\"M000721\"}" ;
              #                                 aida:system       ldc:testSystem
              #                               ] ;
              #      aida:source              "DE005" ;
              #      aida:sourceDocument      "D0100" ;
              #      aida:startOffset         "260"^^<http://www.w3.org/2001/XMLSchema#int> ;
              #      aida:system              ldc:testSystem .
              #
              # _:b11 a              aida:LinkAssertion ;
              #      aida:confidence [ a                     aida:Confidence ;
              #                        aida:confidenceValue  "0.498"^^xsd:double ;
              #                        aida:system           ldc:testSystem
              #                      ] ;
              #      aida:linkTarget "ldc:E0137" ;
              #      aida:system     ldc:testSystem .
              #
              # _:c12 a               aida:InformativeJustificationAssertion ;
              #       aida:confidence [ a                     aida:Confidence ;
              #                         aida:confidenceValue  "0.498"^^xsd:double ;
              #                         aida:system           ldc:testSystem
              #                       ] ;
              #      aida:informativeJustification _:b12 ;
              #      aida:system     ldc:testSystem .
              #
              # ldc:cluster-E0137     a                             aida:SameAsCluster ;
              #                       aida:informativeJustification _:c12 ;
              #                       aida:link                     _:b11 ;
              #                       aida:system                   ldc:testSystem .
              
              
              SELECT DISTINCT
                     ?docid             # sourceDocument
                     ?query_link_target # link target as part of the query
                     ?link_target       # link target in the KB matching ?query_link_target
                     ?cluster           # the ?cluster linked to ?link_target
                     ?infj_span         # informativeJustification span taken from the ?cluster
                     ?j_cv              # confidenceValue of informativeJustification
                     ?link_target       # query reference KB node linked to a ?cluster
                     ?link_cv           # confidenceValue of asserting that ?cluster is the same as reference KB node ?link_target
              
              WHERE {
                  BIND ("LDC2019E43:80000117" AS ?query_link_target)
              
                  # Find ?cluster linked to "LDC2019E43:80000117"
                  # Find the ?link_cv: confidenceValue of linking to external KB entity
                  ?cluster              a                             aida:SameAsCluster .
                  ?cluster              aida:informativeJustification ?inf_justification .
                  ?cluster              aida:link                     ?ref_kb_link .
                  ?ref_kb_link          a                             aida:LinkAssertion .
                  ?ref_kb_link          aida:linkTarget               ?link_target .
                  ?ref_kb_link          aida:confidence               ?link_confidence .
                  ?link_confidence      aida:confidenceValue          ?link_cv .
                  
                  FILTER(cfn:memberOf(str(?link_target), str(?query_link_target))) .
              
                  # Find mention spans for ?inf_justification
                  ?inf_justification    aida:source          ?doceid .
                  ?inf_justification    aida:sourceDocument  ?docid .
                  ?inf_justification    aida:confidence      ?j_confidence .
                  ?j_confidence         aida:confidenceValue ?j_cv .
              
                  OPTIONAL {
                         ?inf_justification a                           aida:TextJustification .
                         ?inf_justification aida:startOffset            ?so .
                         ?inf_justification aida:endOffsetInclusive     ?eo
                  }
                  OPTIONAL {
                         ?inf_justification a                           aida:ImageJustification .
                         ?inf_justification aida:boundingBox            ?bb1  .
                         ?bb1               aida:boundingBoxUpperLeftX  ?ulx1 .
                         ?bb1               aida:boundingBoxUpperLeftY  ?uly1 .
                         ?bb1               aida:boundingBoxLowerRightX ?lrx1 .
                         ?bb1               aida:boundingBoxLowerRightY ?lry1
                  }
                  OPTIONAL {
                         ?inf_justification a                           aida:KeyFrameVideoJustification .
                         ?inf_justification aida:keyFrame               ?kfid .
                         ?inf_justification aida:boundingBox            ?bb2  .
                         ?bb2               aida:boundingBoxUpperLeftX  ?ulx2 .
                         ?bb2               aida:boundingBoxUpperLeftY  ?uly2 .
                         ?bb2               aida:boundingBoxLowerRightX ?lrx2 .
                         ?bb2               aida:boundingBoxLowerRightY ?lry2
                  }
                  OPTIONAL {
                         ?inf_justification a                           aida:ShotVideoJustification .
                         ?inf_justification aida:shot                   ?sid
                  }
                  OPTIONAL {
                         ?inf_justification a                           aida:AudioJustification .
                         ?inf_justification aida:startTimestamp         ?st .
                         ?inf_justification aida:endTimestamp           ?et
                  }
              
                  BIND( IF( BOUND(?sid), ?sid, "__NULL__") AS ?_sid) .
                  BIND( IF( BOUND(?kfid), ?kfid, "__NULL__") AS ?_kfid) .
                  BIND( IF( BOUND(?so), ?so, "__NULL__") AS ?_so) .
                  BIND( IF( BOUND(?eo), ?eo, "__NULL__") AS ?_eo) .
                  BIND( IF( BOUND(?st), ?st, "__NULL__") AS ?_st) .
                  BIND( IF( BOUND(?et), ?et, "__NULL__") AS ?_et) .
                  BIND( COALESCE(?ulx1, ?ulx2, "__NULL__") AS ?_ulx) .
                  BIND( COALESCE(?uly1, ?uly2, "__NULL__") AS ?_uly) .
                  BIND( COALESCE(?lrx1, ?lrx2, "__NULL__") AS ?_lrx) .
                  BIND( COALESCE(?lry1, ?lry2, "__NULL__") AS ?_lry) .
              
                  BIND( cfn:getSpan(str(?docid), str(?doceid), str(?_sid), str(?_kfid), str(?_so), str(?_eo), str(?_ulx), str(?_uly), str(?_lrx), str(?_lry), str(?_st), str(?_et) ) AS ?infj_span ) .
              }
	]]>
     </sparql>
  </zerohop_query>
  <zerohop_query id="AIDA_TA2_ZH_2019_0005">
    <reference_kbid> LDC2019E43:703448|LDC2019E43:80000027 </reference_kbid>
    <sparql>
 	<![CDATA[
              PREFIX ldcOnt: <https://tac.nist.gov/tracks/SM-KBP/2019/ontologies/LDCOntology#>
              PREFIX rdf:   <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
              PREFIX aida:  <https://tac.nist.gov/tracks/SM-KBP/2019/ontologies/InterchangeOntology#>
              PREFIX cfn:   <https://verdi.nextcentury.com/custom-function/>
              PREFIX xsd:   <http://www.w3.org/2001/XMLSchema#>
              
              # Query: AIDA_TA2_ZH_2019_0005
              # Query description: Find all informative mentions of entities linked to "LDC2019E43:703448|LDC2019E43:80000027"
              # NIST default aggregate confidence of ?cluster is a function of
              #      ?link_cv      # confidenceValue of asserting that ?cluster is the same as reference KB node ?link_target
              #      ?j_cv         # confidenceValue of informativeJustification
              
              # ?j_cv is used to rank informative mentions within a cluster for purposes of pooling and AP scoring.
              
              # In M18, we use the ?j_cv (confidence in the justification, e.g., confidence of _:b02) and interpret that confidence
              # as the confidence of linking the justification to the cluster; _:b02 is used *only* to represent an informative
              # mention for some cluster, even though that cluster is not referenced in _:b02. Ideally (in future), there would be
              # an aida:InformativeJustificationAssertion construct (paralleling the structure of an aida:LinkAssertion) that
              # associates a confidence to each aida:informativeJustification, and could represent the confidence of linking an
              # InformativeJustification to a cluster.
              
              # _:b12 a                        aida:TextJustification ;
              #      aida:confidence          [ a                     aida:Confidence ;
              #                                 aida:confidenceValue  "1.0"^^<http://www.w3.org/2001/XMLSchema#double> ;
              #                                 aida:system           ldc:testSystem
              #                               ] ;
              #      aida:endOffsetInclusive  "286"^^<http://www.w3.org/2001/XMLSchema#int> ;
              #      aida:privateData         [ a                 aida:PrivateData ;
              #                                 aida:jsonContent  "{\"mention\":\"M000721\"}" ;
              #                                 aida:system       ldc:testSystem
              #                               ] ;
              #      aida:source              "DE005" ;
              #      aida:sourceDocument      "D0100" ;
              #      aida:startOffset         "260"^^<http://www.w3.org/2001/XMLSchema#int> ;
              #      aida:system              ldc:testSystem .
              #
              # _:b11 a              aida:LinkAssertion ;
              #      aida:confidence [ a                     aida:Confidence ;
              #                        aida:confidenceValue  "0.498"^^xsd:double ;
              #                        aida:system           ldc:testSystem
              #                      ] ;
              #      aida:linkTarget "ldc:E0137" ;
              #      aida:system     ldc:testSystem .
              #
              # _:c12 a               aida:InformativeJustificationAssertion ;
              #       aida:confidence [ a                     aida:Confidence ;
              #                         aida:confidenceValue  "0.498"^^xsd:double ;
              #                         aida:system           ldc:testSystem
              #                       ] ;
              #      aida:informativeJustification _:b12 ;
              #      aida:system     ldc:testSystem .
              #
              # ldc:cluster-E0137     a                             aida:SameAsCluster ;
              #                       aida:informativeJustification _:c12 ;
              #                       aida:link                     _:b11 ;
              #                       aida:system                   ldc:testSystem .
              
              
              SELECT DISTINCT
                     ?docid             # sourceDocument
                     ?query_link_target # link target as part of the query
                     ?link_target       # link target in the KB matching ?query_link_target
                     ?cluster           # the ?cluster linked to ?link_target
                     ?infj_span         # informativeJustification span taken from the ?cluster
                     ?j_cv              # confidenceValue of informativeJustification
                     ?link_target       # query reference KB node linked to a ?cluster
                     ?link_cv           # confidenceValue of asserting that ?cluster is the same as reference KB node ?link_target
              
              WHERE {
                  BIND ("LDC2019E43:703448|LDC2019E43:80000027" AS ?query_link_target)
              
                  # Find ?cluster linked to "LDC2019E43:703448|LDC2019E43:80000027"
                  # Find the ?link_cv: confidenceValue of linking to external KB entity
                  ?cluster              a                             aida:SameAsCluster .
                  ?cluster              aida:informativeJustification ?inf_justification .
                  ?cluster              aida:link                     ?ref_kb_link .
                  ?ref_kb_link          a                             aida:LinkAssertion .
                  ?ref_kb_link          aida:linkTarget               ?link_target .
                  ?ref_kb_link          aida:confidence               ?link_confidence .
                  ?link_confidence      aida:confidenceValue          ?link_cv .
                  
                  FILTER(cfn:memberOf(str(?link_target), str(?query_link_target))) .
              
                  # Find mention spans for ?inf_justification
                  ?inf_justification    aida:source          ?doceid .
                  ?inf_justification    aida:sourceDocument  ?docid .
                  ?inf_justification    aida:confidence      ?j_confidence .
                  ?j_confidence         aida:confidenceValue ?j_cv .
              
                  OPTIONAL {
                         ?inf_justification a                           aida:TextJustification .
                         ?inf_justification aida:startOffset            ?so .
                         ?inf_justification aida:endOffsetInclusive     ?eo
                  }
                  OPTIONAL {
                         ?inf_justification a                           aida:ImageJustification .
                         ?inf_justification aida:boundingBox            ?bb1  .
                         ?bb1               aida:boundingBoxUpperLeftX  ?ulx1 .
                         ?bb1               aida:boundingBoxUpperLeftY  ?uly1 .
                         ?bb1               aida:boundingBoxLowerRightX ?lrx1 .
                         ?bb1               aida:boundingBoxLowerRightY ?lry1
                  }
                  OPTIONAL {
                         ?inf_justification a                           aida:KeyFrameVideoJustification .
                         ?inf_justification aida:keyFrame               ?kfid .
                         ?inf_justification aida:boundingBox            ?bb2  .
                         ?bb2               aida:boundingBoxUpperLeftX  ?ulx2 .
                         ?bb2               aida:boundingBoxUpperLeftY  ?uly2 .
                         ?bb2               aida:boundingBoxLowerRightX ?lrx2 .
                         ?bb2               aida:boundingBoxLowerRightY ?lry2
                  }
                  OPTIONAL {
                         ?inf_justification a                           aida:ShotVideoJustification .
                         ?inf_justification aida:shot                   ?sid
                  }
                  OPTIONAL {
                         ?inf_justification a                           aida:AudioJustification .
                         ?inf_justification aida:startTimestamp         ?st .
                         ?inf_justification aida:endTimestamp           ?et
                  }
              
                  BIND( IF( BOUND(?sid), ?sid, "__NULL__") AS ?_sid) .
                  BIND( IF( BOUND(?kfid), ?kfid, "__NULL__") AS ?_kfid) .
                  BIND( IF( BOUND(?so), ?so, "__NULL__") AS ?_so) .
                  BIND( IF( BOUND(?eo), ?eo, "__NULL__") AS ?_eo) .
                  BIND( IF( BOUND(?st), ?st, "__NULL__") AS ?_st) .
                  BIND( IF( BOUND(?et), ?et, "__NULL__") AS ?_et) .
                  BIND( COALESCE(?ulx1, ?ulx2, "__NULL__") AS ?_ulx) .
                  BIND( COALESCE(?uly1, ?uly2, "__NULL__") AS ?_uly) .
                  BIND( COALESCE(?lrx1, ?lrx2, "__NULL__") AS ?_lrx) .
                  BIND( COALESCE(?lry1, ?lry2, "__NULL__") AS ?_lry) .
              
                  BIND( cfn:getSpan(str(?docid), str(?doceid), str(?_sid), str(?_kfid), str(?_so), str(?_eo), str(?_ulx), str(?_uly), str(?_lrx), str(?_lry), str(?_st), str(?_et) ) AS ?infj_span ) .
              }
	]]>
     </sparql>
  </zerohop_query>
  <zerohop_query id="AIDA_TA2_ZH_2019_0006">
    <reference_kbid> LDC2019E43:80000303 </reference_kbid>
    <sparql>
 	<![CDATA[
              PREFIX ldcOnt: <https://tac.nist.gov/tracks/SM-KBP/2019/ontologies/LDCOntology#>
              PREFIX rdf:   <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
              PREFIX aida:  <https://tac.nist.gov/tracks/SM-KBP/2019/ontologies/InterchangeOntology#>
              PREFIX cfn:   <https://verdi.nextcentury.com/custom-function/>
              PREFIX xsd:   <http://www.w3.org/2001/XMLSchema#>
              
              # Query: AIDA_TA2_ZH_2019_0006
              # Query description: Find all informative mentions of entities linked to "LDC2019E43:80000303"
              # NIST default aggregate confidence of ?cluster is a function of
              #      ?link_cv      # confidenceValue of asserting that ?cluster is the same as reference KB node ?link_target
              #      ?j_cv         # confidenceValue of informativeJustification
              
              # ?j_cv is used to rank informative mentions within a cluster for purposes of pooling and AP scoring.
              
              # In M18, we use the ?j_cv (confidence in the justification, e.g., confidence of _:b02) and interpret that confidence
              # as the confidence of linking the justification to the cluster; _:b02 is used *only* to represent an informative
              # mention for some cluster, even though that cluster is not referenced in _:b02. Ideally (in future), there would be
              # an aida:InformativeJustificationAssertion construct (paralleling the structure of an aida:LinkAssertion) that
              # associates a confidence to each aida:informativeJustification, and could represent the confidence of linking an
              # InformativeJustification to a cluster.
              
              # _:b12 a                        aida:TextJustification ;
              #      aida:confidence          [ a                     aida:Confidence ;
              #                                 aida:confidenceValue  "1.0"^^<http://www.w3.org/2001/XMLSchema#double> ;
              #                                 aida:system           ldc:testSystem
              #                               ] ;
              #      aida:endOffsetInclusive  "286"^^<http://www.w3.org/2001/XMLSchema#int> ;
              #      aida:privateData         [ a                 aida:PrivateData ;
              #                                 aida:jsonContent  "{\"mention\":\"M000721\"}" ;
              #                                 aida:system       ldc:testSystem
              #                               ] ;
              #      aida:source              "DE005" ;
              #      aida:sourceDocument      "D0100" ;
              #      aida:startOffset         "260"^^<http://www.w3.org/2001/XMLSchema#int> ;
              #      aida:system              ldc:testSystem .
              #
              # _:b11 a              aida:LinkAssertion ;
              #      aida:confidence [ a                     aida:Confidence ;
              #                        aida:confidenceValue  "0.498"^^xsd:double ;
              #                        aida:system           ldc:testSystem
              #                      ] ;
              #      aida:linkTarget "ldc:E0137" ;
              #      aida:system     ldc:testSystem .
              #
              # _:c12 a               aida:InformativeJustificationAssertion ;
              #       aida:confidence [ a                     aida:Confidence ;
              #                         aida:confidenceValue  "0.498"^^xsd:double ;
              #                         aida:system           ldc:testSystem
              #                       ] ;
              #      aida:informativeJustification _:b12 ;
              #      aida:system     ldc:testSystem .
              #
              # ldc:cluster-E0137     a                             aida:SameAsCluster ;
              #                       aida:informativeJustification _:c12 ;
              #                       aida:link                     _:b11 ;
              #                       aida:system                   ldc:testSystem .
              
              
              SELECT DISTINCT
                     ?docid             # sourceDocument
                     ?query_link_target # link target as part of the query
                     ?link_target       # link target in the KB matching ?query_link_target
                     ?cluster           # the ?cluster linked to ?link_target
                     ?infj_span         # informativeJustification span taken from the ?cluster
                     ?j_cv              # confidenceValue of informativeJustification
                     ?link_target       # query reference KB node linked to a ?cluster
                     ?link_cv           # confidenceValue of asserting that ?cluster is the same as reference KB node ?link_target
              
              WHERE {
                  BIND ("LDC2019E43:80000303" AS ?query_link_target)
              
                  # Find ?cluster linked to "LDC2019E43:80000303"
                  # Find the ?link_cv: confidenceValue of linking to external KB entity
                  ?cluster              a                             aida:SameAsCluster .
                  ?cluster              aida:informativeJustification ?inf_justification .
                  ?cluster              aida:link                     ?ref_kb_link .
                  ?ref_kb_link          a                             aida:LinkAssertion .
                  ?ref_kb_link          aida:linkTarget               ?link_target .
                  ?ref_kb_link          aida:confidence               ?link_confidence .
                  ?link_confidence      aida:confidenceValue          ?link_cv .
                  
                  FILTER(cfn:memberOf(str(?link_target), str(?query_link_target))) .
              
                  # Find mention spans for ?inf_justification
                  ?inf_justification    aida:source          ?doceid .
                  ?inf_justification    aida:sourceDocument  ?docid .
                  ?inf_justification    aida:confidence      ?j_confidence .
                  ?j_confidence         aida:confidenceValue ?j_cv .
              
                  OPTIONAL {
                         ?inf_justification a                           aida:TextJustification .
                         ?inf_justification aida:startOffset            ?so .
                         ?inf_justification aida:endOffsetInclusive     ?eo
                  }
                  OPTIONAL {
                         ?inf_justification a                           aida:ImageJustification .
                         ?inf_justification aida:boundingBox            ?bb1  .
                         ?bb1               aida:boundingBoxUpperLeftX  ?ulx1 .
                         ?bb1               aida:boundingBoxUpperLeftY  ?uly1 .
                         ?bb1               aida:boundingBoxLowerRightX ?lrx1 .
                         ?bb1               aida:boundingBoxLowerRightY ?lry1
                  }
                  OPTIONAL {
                         ?inf_justification a                           aida:KeyFrameVideoJustification .
                         ?inf_justification aida:keyFrame               ?kfid .
                         ?inf_justification aida:boundingBox            ?bb2  .
                         ?bb2               aida:boundingBoxUpperLeftX  ?ulx2 .
                         ?bb2               aida:boundingBoxUpperLeftY  ?uly2 .
                         ?bb2               aida:boundingBoxLowerRightX ?lrx2 .
                         ?bb2               aida:boundingBoxLowerRightY ?lry2
                  }
                  OPTIONAL {
                         ?inf_justification a                           aida:ShotVideoJustification .
                         ?inf_justification aida:shot                   ?sid
                  }
                  OPTIONAL {
                         ?inf_justification a                           aida:AudioJustification .
                         ?inf_justification aida:startTimestamp         ?st .
                         ?inf_justification aida:endTimestamp           ?et
                  }
              
                  BIND( IF( BOUND(?sid), ?sid, "__NULL__") AS ?_sid) .
                  BIND( IF( BOUND(?kfid), ?kfid, "__NULL__") AS ?_kfid) .
                  BIND( IF( BOUND(?so), ?so, "__NULL__") AS ?_so) .
                  BIND( IF( BOUND(?eo), ?eo, "__NULL__") AS ?_eo) .
                  BIND( IF( BOUND(?st), ?st, "__NULL__") AS ?_st) .
                  BIND( IF( BOUND(?et), ?et, "__NULL__") AS ?_et) .
                  BIND( COALESCE(?ulx1, ?ulx2, "__NULL__") AS ?_ulx) .
                  BIND( COALESCE(?uly1, ?uly2, "__NULL__") AS ?_uly) .
                  BIND( COALESCE(?lrx1, ?lrx2, "__NULL__") AS ?_lrx) .
                  BIND( COALESCE(?lry1, ?lry2, "__NULL__") AS ?_lry) .
              
                  BIND( cfn:getSpan(str(?docid), str(?doceid), str(?_sid), str(?_kfid), str(?_so), str(?_eo), str(?_ulx), str(?_uly), str(?_lrx), str(?_lry), str(?_st), str(?_et) ) AS ?infj_span ) .
              }
	]]>
     </sparql>
  </zerohop_query>
  <zerohop_query id="AIDA_TA2_ZH_2019_0007">
    <reference_kbid> LDC2019E43:80000113 </reference_kbid>
    <sparql>
 	<![CDATA[
              PREFIX ldcOnt: <https://tac.nist.gov/tracks/SM-KBP/2019/ontologies/LDCOntology#>
              PREFIX rdf:   <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
              PREFIX aida:  <https://tac.nist.gov/tracks/SM-KBP/2019/ontologies/InterchangeOntology#>
              PREFIX cfn:   <https://verdi.nextcentury.com/custom-function/>
              PREFIX xsd:   <http://www.w3.org/2001/XMLSchema#>
              
              # Query: AIDA_TA2_ZH_2019_0007
              # Query description: Find all informative mentions of entities linked to "LDC2019E43:80000113"
              # NIST default aggregate confidence of ?cluster is a function of
              #      ?link_cv      # confidenceValue of asserting that ?cluster is the same as reference KB node ?link_target
              #      ?j_cv         # confidenceValue of informativeJustification
              
              # ?j_cv is used to rank informative mentions within a cluster for purposes of pooling and AP scoring.
              
              # In M18, we use the ?j_cv (confidence in the justification, e.g., confidence of _:b02) and interpret that confidence
              # as the confidence of linking the justification to the cluster; _:b02 is used *only* to represent an informative
              # mention for some cluster, even though that cluster is not referenced in _:b02. Ideally (in future), there would be
              # an aida:InformativeJustificationAssertion construct (paralleling the structure of an aida:LinkAssertion) that
              # associates a confidence to each aida:informativeJustification, and could represent the confidence of linking an
              # InformativeJustification to a cluster.
              
              # _:b12 a                        aida:TextJustification ;
              #      aida:confidence          [ a                     aida:Confidence ;
              #                                 aida:confidenceValue  "1.0"^^<http://www.w3.org/2001/XMLSchema#double> ;
              #                                 aida:system           ldc:testSystem
              #                               ] ;
              #      aida:endOffsetInclusive  "286"^^<http://www.w3.org/2001/XMLSchema#int> ;
              #      aida:privateData         [ a                 aida:PrivateData ;
              #                                 aida:jsonContent  "{\"mention\":\"M000721\"}" ;
              #                                 aida:system       ldc:testSystem
              #                               ] ;
              #      aida:source              "DE005" ;
              #      aida:sourceDocument      "D0100" ;
              #      aida:startOffset         "260"^^<http://www.w3.org/2001/XMLSchema#int> ;
              #      aida:system              ldc:testSystem .
              #
              # _:b11 a              aida:LinkAssertion ;
              #      aida:confidence [ a                     aida:Confidence ;
              #                        aida:confidenceValue  "0.498"^^xsd:double ;
              #                        aida:system           ldc:testSystem
              #                      ] ;
              #      aida:linkTarget "ldc:E0137" ;
              #      aida:system     ldc:testSystem .
              #
              # _:c12 a               aida:InformativeJustificationAssertion ;
              #       aida:confidence [ a                     aida:Confidence ;
              #                         aida:confidenceValue  "0.498"^^xsd:double ;
              #                         aida:system           ldc:testSystem
              #                       ] ;
              #      aida:informativeJustification _:b12 ;
              #      aida:system     ldc:testSystem .
              #
              # ldc:cluster-E0137     a                             aida:SameAsCluster ;
              #                       aida:informativeJustification _:c12 ;
              #                       aida:link                     _:b11 ;
              #                       aida:system                   ldc:testSystem .
              
              
              SELECT DISTINCT
                     ?docid             # sourceDocument
                     ?query_link_target # link target as part of the query
                     ?link_target       # link target in the KB matching ?query_link_target
                     ?cluster           # the ?cluster linked to ?link_target
                     ?infj_span         # informativeJustification span taken from the ?cluster
                     ?j_cv              # confidenceValue of informativeJustification
                     ?link_target       # query reference KB node linked to a ?cluster
                     ?link_cv           # confidenceValue of asserting that ?cluster is the same as reference KB node ?link_target
              
              WHERE {
                  BIND ("LDC2019E43:80000113" AS ?query_link_target)
              
                  # Find ?cluster linked to "LDC2019E43:80000113"
                  # Find the ?link_cv: confidenceValue of linking to external KB entity
                  ?cluster              a                             aida:SameAsCluster .
                  ?cluster              aida:informativeJustification ?inf_justification .
                  ?cluster              aida:link                     ?ref_kb_link .
                  ?ref_kb_link          a                             aida:LinkAssertion .
                  ?ref_kb_link          aida:linkTarget               ?link_target .
                  ?ref_kb_link          aida:confidence               ?link_confidence .
                  ?link_confidence      aida:confidenceValue          ?link_cv .
                  
                  FILTER(cfn:memberOf(str(?link_target), str(?query_link_target))) .
              
                  # Find mention spans for ?inf_justification
                  ?inf_justification    aida:source          ?doceid .
                  ?inf_justification    aida:sourceDocument  ?docid .
                  ?inf_justification    aida:confidence      ?j_confidence .
                  ?j_confidence         aida:confidenceValue ?j_cv .
              
                  OPTIONAL {
                         ?inf_justification a                           aida:TextJustification .
                         ?inf_justification aida:startOffset            ?so .
                         ?inf_justification aida:endOffsetInclusive     ?eo
                  }
                  OPTIONAL {
                         ?inf_justification a                           aida:ImageJustification .
                         ?inf_justification aida:boundingBox            ?bb1  .
                         ?bb1               aida:boundingBoxUpperLeftX  ?ulx1 .
                         ?bb1               aida:boundingBoxUpperLeftY  ?uly1 .
                         ?bb1               aida:boundingBoxLowerRightX ?lrx1 .
                         ?bb1               aida:boundingBoxLowerRightY ?lry1
                  }
                  OPTIONAL {
                         ?inf_justification a                           aida:KeyFrameVideoJustification .
                         ?inf_justification aida:keyFrame               ?kfid .
                         ?inf_justification aida:boundingBox            ?bb2  .
                         ?bb2               aida:boundingBoxUpperLeftX  ?ulx2 .
                         ?bb2               aida:boundingBoxUpperLeftY  ?uly2 .
                         ?bb2               aida:boundingBoxLowerRightX ?lrx2 .
                         ?bb2               aida:boundingBoxLowerRightY ?lry2
                  }
                  OPTIONAL {
                         ?inf_justification a                           aida:ShotVideoJustification .
                         ?inf_justification aida:shot                   ?sid
                  }
                  OPTIONAL {
                         ?inf_justification a                           aida:AudioJustification .
                         ?inf_justification aida:startTimestamp         ?st .
                         ?inf_justification aida:endTimestamp           ?et
                  }
              
                  BIND( IF( BOUND(?sid), ?sid, "__NULL__") AS ?_sid) .
                  BIND( IF( BOUND(?kfid), ?kfid, "__NULL__") AS ?_kfid) .
                  BIND( IF( BOUND(?so), ?so, "__NULL__") AS ?_so) .
                  BIND( IF( BOUND(?eo), ?eo, "__NULL__") AS ?_eo) .
                  BIND( IF( BOUND(?st), ?st, "__NULL__") AS ?_st) .
                  BIND( IF( BOUND(?et), ?et, "__NULL__") AS ?_et) .
                  BIND( COALESCE(?ulx1, ?ulx2, "__NULL__") AS ?_ulx) .
                  BIND( COALESCE(?uly1, ?uly2, "__NULL__") AS ?_uly) .
                  BIND( COALESCE(?lrx1, ?lrx2, "__NULL__") AS ?_lrx) .
                  BIND( COALESCE(?lry1, ?lry2, "__NULL__") AS ?_lry) .
              
                  BIND( cfn:getSpan(str(?docid), str(?doceid), str(?_sid), str(?_kfid), str(?_so), str(?_eo), str(?_ulx), str(?_uly), str(?_lrx), str(?_lry), str(?_st), str(?_et) ) AS ?infj_span ) .
              }
	]]>
     </sparql>
  </zerohop_query>
  <zerohop_query id="AIDA_TA2_ZH_2019_0008">
    <reference_kbid> LDC2019E43:80000111 </reference_kbid>
    <sparql>
 	<![CDATA[
              PREFIX ldcOnt: <https://tac.nist.gov/tracks/SM-KBP/2019/ontologies/LDCOntology#>
              PREFIX rdf:   <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
              PREFIX aida:  <https://tac.nist.gov/tracks/SM-KBP/2019/ontologies/InterchangeOntology#>
              PREFIX cfn:   <https://verdi.nextcentury.com/custom-function/>
              PREFIX xsd:   <http://www.w3.org/2001/XMLSchema#>
              
              # Query: AIDA_TA2_ZH_2019_0008
              # Query description: Find all informative mentions of entities linked to "LDC2019E43:80000111"
              # NIST default aggregate confidence of ?cluster is a function of
              #      ?link_cv      # confidenceValue of asserting that ?cluster is the same as reference KB node ?link_target
              #      ?j_cv         # confidenceValue of informativeJustification
              
              # ?j_cv is used to rank informative mentions within a cluster for purposes of pooling and AP scoring.
              
              # In M18, we use the ?j_cv (confidence in the justification, e.g., confidence of _:b02) and interpret that confidence
              # as the confidence of linking the justification to the cluster; _:b02 is used *only* to represent an informative
              # mention for some cluster, even though that cluster is not referenced in _:b02. Ideally (in future), there would be
              # an aida:InformativeJustificationAssertion construct (paralleling the structure of an aida:LinkAssertion) that
              # associates a confidence to each aida:informativeJustification, and could represent the confidence of linking an
              # InformativeJustification to a cluster.
              
              # _:b12 a                        aida:TextJustification ;
              #      aida:confidence          [ a                     aida:Confidence ;
              #                                 aida:confidenceValue  "1.0"^^<http://www.w3.org/2001/XMLSchema#double> ;
              #                                 aida:system           ldc:testSystem
              #                               ] ;
              #      aida:endOffsetInclusive  "286"^^<http://www.w3.org/2001/XMLSchema#int> ;
              #      aida:privateData         [ a                 aida:PrivateData ;
              #                                 aida:jsonContent  "{\"mention\":\"M000721\"}" ;
              #                                 aida:system       ldc:testSystem
              #                               ] ;
              #      aida:source              "DE005" ;
              #      aida:sourceDocument      "D0100" ;
              #      aida:startOffset         "260"^^<http://www.w3.org/2001/XMLSchema#int> ;
              #      aida:system              ldc:testSystem .
              #
              # _:b11 a              aida:LinkAssertion ;
              #      aida:confidence [ a                     aida:Confidence ;
              #                        aida:confidenceValue  "0.498"^^xsd:double ;
              #                        aida:system           ldc:testSystem
              #                      ] ;
              #      aida:linkTarget "ldc:E0137" ;
              #      aida:system     ldc:testSystem .
              #
              # _:c12 a               aida:InformativeJustificationAssertion ;
              #       aida:confidence [ a                     aida:Confidence ;
              #                         aida:confidenceValue  "0.498"^^xsd:double ;
              #                         aida:system           ldc:testSystem
              #                       ] ;
              #      aida:informativeJustification _:b12 ;
              #      aida:system     ldc:testSystem .
              #
              # ldc:cluster-E0137     a                             aida:SameAsCluster ;
              #                       aida:informativeJustification _:c12 ;
              #                       aida:link                     _:b11 ;
              #                       aida:system                   ldc:testSystem .
              
              
              SELECT DISTINCT
                     ?docid             # sourceDocument
                     ?query_link_target # link target as part of the query
                     ?link_target       # link target in the KB matching ?query_link_target
                     ?cluster           # the ?cluster linked to ?link_target
                     ?infj_span         # informativeJustification span taken from the ?cluster
                     ?j_cv              # confidenceValue of informativeJustification
                     ?link_target       # query reference KB node linked to a ?cluster
                     ?link_cv           # confidenceValue of asserting that ?cluster is the same as reference KB node ?link_target
              
              WHERE {
                  BIND ("LDC2019E43:80000111" AS ?query_link_target)
              
                  # Find ?cluster linked to "LDC2019E43:80000111"
                  # Find the ?link_cv: confidenceValue of linking to external KB entity
                  ?cluster              a                             aida:SameAsCluster .
                  ?cluster              aida:informativeJustification ?inf_justification .
                  ?cluster              aida:link                     ?ref_kb_link .
                  ?ref_kb_link          a                             aida:LinkAssertion .
                  ?ref_kb_link          aida:linkTarget               ?link_target .
                  ?ref_kb_link          aida:confidence               ?link_confidence .
                  ?link_confidence      aida:confidenceValue          ?link_cv .
                  
                  FILTER(cfn:memberOf(str(?link_target), str(?query_link_target))) .
              
                  # Find mention spans for ?inf_justification
                  ?inf_justification    aida:source          ?doceid .
                  ?inf_justification    aida:sourceDocument  ?docid .
                  ?inf_justification    aida:confidence      ?j_confidence .
                  ?j_confidence         aida:confidenceValue ?j_cv .
              
                  OPTIONAL {
                         ?inf_justification a                           aida:TextJustification .
                         ?inf_justification aida:startOffset            ?so .
                         ?inf_justification aida:endOffsetInclusive     ?eo
                  }
                  OPTIONAL {
                         ?inf_justification a                           aida:ImageJustification .
                         ?inf_justification aida:boundingBox            ?bb1  .
                         ?bb1               aida:boundingBoxUpperLeftX  ?ulx1 .
                         ?bb1               aida:boundingBoxUpperLeftY  ?uly1 .
                         ?bb1               aida:boundingBoxLowerRightX ?lrx1 .
                         ?bb1               aida:boundingBoxLowerRightY ?lry1
                  }
                  OPTIONAL {
                         ?inf_justification a                           aida:KeyFrameVideoJustification .
                         ?inf_justification aida:keyFrame               ?kfid .
                         ?inf_justification aida:boundingBox            ?bb2  .
                         ?bb2               aida:boundingBoxUpperLeftX  ?ulx2 .
                         ?bb2               aida:boundingBoxUpperLeftY  ?uly2 .
                         ?bb2               aida:boundingBoxLowerRightX ?lrx2 .
                         ?bb2               aida:boundingBoxLowerRightY ?lry2
                  }
                  OPTIONAL {
                         ?inf_justification a                           aida:ShotVideoJustification .
                         ?inf_justification aida:shot                   ?sid
                  }
                  OPTIONAL {
                         ?inf_justification a                           aida:AudioJustification .
                         ?inf_justification aida:startTimestamp         ?st .
                         ?inf_justification aida:endTimestamp           ?et
                  }
              
                  BIND( IF( BOUND(?sid), ?sid, "__NULL__") AS ?_sid) .
                  BIND( IF( BOUND(?kfid), ?kfid, "__NULL__") AS ?_kfid) .
                  BIND( IF( BOUND(?so), ?so, "__NULL__") AS ?_so) .
                  BIND( IF( BOUND(?eo), ?eo, "__NULL__") AS ?_eo) .
                  BIND( IF( BOUND(?st), ?st, "__NULL__") AS ?_st) .
                  BIND( IF( BOUND(?et), ?et, "__NULL__") AS ?_et) .
                  BIND( COALESCE(?ulx1, ?ulx2, "__NULL__") AS ?_ulx) .
                  BIND( COALESCE(?uly1, ?uly2, "__NULL__") AS ?_uly) .
                  BIND( COALESCE(?lrx1, ?lrx2, "__NULL__") AS ?_lrx) .
                  BIND( COALESCE(?lry1, ?lry2, "__NULL__") AS ?_lry) .
              
                  BIND( cfn:getSpan(str(?docid), str(?doceid), str(?_sid), str(?_kfid), str(?_so), str(?_eo), str(?_ulx), str(?_uly), str(?_lrx), str(?_lry), str(?_st), str(?_et) ) AS ?infj_span ) .
              }
	]]>
     </sparql>
  </zerohop_query>
  <zerohop_query id="AIDA_TA2_ZH_2019_0009">
    <reference_kbid> LDC2019E43:80000115 </reference_kbid>
    <sparql>
 	<![CDATA[
              PREFIX ldcOnt: <https://tac.nist.gov/tracks/SM-KBP/2019/ontologies/LDCOntology#>
              PREFIX rdf:   <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
              PREFIX aida:  <https://tac.nist.gov/tracks/SM-KBP/2019/ontologies/InterchangeOntology#>
              PREFIX cfn:   <https://verdi.nextcentury.com/custom-function/>
              PREFIX xsd:   <http://www.w3.org/2001/XMLSchema#>
              
              # Query: AIDA_TA2_ZH_2019_0009
              # Query description: Find all informative mentions of entities linked to "LDC2019E43:80000115"
              # NIST default aggregate confidence of ?cluster is a function of
              #      ?link_cv      # confidenceValue of asserting that ?cluster is the same as reference KB node ?link_target
              #      ?j_cv         # confidenceValue of informativeJustification
              
              # ?j_cv is used to rank informative mentions within a cluster for purposes of pooling and AP scoring.
              
              # In M18, we use the ?j_cv (confidence in the justification, e.g., confidence of _:b02) and interpret that confidence
              # as the confidence of linking the justification to the cluster; _:b02 is used *only* to represent an informative
              # mention for some cluster, even though that cluster is not referenced in _:b02. Ideally (in future), there would be
              # an aida:InformativeJustificationAssertion construct (paralleling the structure of an aida:LinkAssertion) that
              # associates a confidence to each aida:informativeJustification, and could represent the confidence of linking an
              # InformativeJustification to a cluster.
              
              # _:b12 a                        aida:TextJustification ;
              #      aida:confidence          [ a                     aida:Confidence ;
              #                                 aida:confidenceValue  "1.0"^^<http://www.w3.org/2001/XMLSchema#double> ;
              #                                 aida:system           ldc:testSystem
              #                               ] ;
              #      aida:endOffsetInclusive  "286"^^<http://www.w3.org/2001/XMLSchema#int> ;
              #      aida:privateData         [ a                 aida:PrivateData ;
              #                                 aida:jsonContent  "{\"mention\":\"M000721\"}" ;
              #                                 aida:system       ldc:testSystem
              #                               ] ;
              #      aida:source              "DE005" ;
              #      aida:sourceDocument      "D0100" ;
              #      aida:startOffset         "260"^^<http://www.w3.org/2001/XMLSchema#int> ;
              #      aida:system              ldc:testSystem .
              #
              # _:b11 a              aida:LinkAssertion ;
              #      aida:confidence [ a                     aida:Confidence ;
              #                        aida:confidenceValue  "0.498"^^xsd:double ;
              #                        aida:system           ldc:testSystem
              #                      ] ;
              #      aida:linkTarget "ldc:E0137" ;
              #      aida:system     ldc:testSystem .
              #
              # _:c12 a               aida:InformativeJustificationAssertion ;
              #       aida:confidence [ a                     aida:Confidence ;
              #                         aida:confidenceValue  "0.498"^^xsd:double ;
              #                         aida:system           ldc:testSystem
              #                       ] ;
              #      aida:informativeJustification _:b12 ;
              #      aida:system     ldc:testSystem .
              #
              # ldc:cluster-E0137     a                             aida:SameAsCluster ;
              #                       aida:informativeJustification _:c12 ;
              #                       aida:link                     _:b11 ;
              #                       aida:system                   ldc:testSystem .
              
              
              SELECT DISTINCT
                     ?docid             # sourceDocument
                     ?query_link_target # link target as part of the query
                     ?link_target       # link target in the KB matching ?query_link_target
                     ?cluster           # the ?cluster linked to ?link_target
                     ?infj_span         # informativeJustification span taken from the ?cluster
                     ?j_cv              # confidenceValue of informativeJustification
                     ?link_target       # query reference KB node linked to a ?cluster
                     ?link_cv           # confidenceValue of asserting that ?cluster is the same as reference KB node ?link_target
              
              WHERE {
                  BIND ("LDC2019E43:80000115" AS ?query_link_target)
              
                  # Find ?cluster linked to "LDC2019E43:80000115"
                  # Find the ?link_cv: confidenceValue of linking to external KB entity
                  ?cluster              a                             aida:SameAsCluster .
                  ?cluster              aida:informativeJustification ?inf_justification .
                  ?cluster              aida:link                     ?ref_kb_link .
                  ?ref_kb_link          a                             aida:LinkAssertion .
                  ?ref_kb_link          aida:linkTarget               ?link_target .
                  ?ref_kb_link          aida:confidence               ?link_confidence .
                  ?link_confidence      aida:confidenceValue          ?link_cv .
                  
                  FILTER(cfn:memberOf(str(?link_target), str(?query_link_target))) .
              
                  # Find mention spans for ?inf_justification
                  ?inf_justification    aida:source          ?doceid .
                  ?inf_justification    aida:sourceDocument  ?docid .
                  ?inf_justification    aida:confidence      ?j_confidence .
                  ?j_confidence         aida:confidenceValue ?j_cv .
              
                  OPTIONAL {
                         ?inf_justification a                           aida:TextJustification .
                         ?inf_justification aida:startOffset            ?so .
                         ?inf_justification aida:endOffsetInclusive     ?eo
                  }
                  OPTIONAL {
                         ?inf_justification a                           aida:ImageJustification .
                         ?inf_justification aida:boundingBox            ?bb1  .
                         ?bb1               aida:boundingBoxUpperLeftX  ?ulx1 .
                         ?bb1               aida:boundingBoxUpperLeftY  ?uly1 .
                         ?bb1               aida:boundingBoxLowerRightX ?lrx1 .
                         ?bb1               aida:boundingBoxLowerRightY ?lry1
                  }
                  OPTIONAL {
                         ?inf_justification a                           aida:KeyFrameVideoJustification .
                         ?inf_justification aida:keyFrame               ?kfid .
                         ?inf_justification aida:boundingBox            ?bb2  .
                         ?bb2               aida:boundingBoxUpperLeftX  ?ulx2 .
                         ?bb2               aida:boundingBoxUpperLeftY  ?uly2 .
                         ?bb2               aida:boundingBoxLowerRightX ?lrx2 .
                         ?bb2               aida:boundingBoxLowerRightY ?lry2
                  }
                  OPTIONAL {
                         ?inf_justification a                           aida:ShotVideoJustification .
                         ?inf_justification aida:shot                   ?sid
                  }
                  OPTIONAL {
                         ?inf_justification a                           aida:AudioJustification .
                         ?inf_justification aida:startTimestamp         ?st .
                         ?inf_justification aida:endTimestamp           ?et
                  }
              
                  BIND( IF( BOUND(?sid), ?sid, "__NULL__") AS ?_sid) .
                  BIND( IF( BOUND(?kfid), ?kfid, "__NULL__") AS ?_kfid) .
                  BIND( IF( BOUND(?so), ?so, "__NULL__") AS ?_so) .
                  BIND( IF( BOUND(?eo), ?eo, "__NULL__") AS ?_eo) .
                  BIND( IF( BOUND(?st), ?st, "__NULL__") AS ?_st) .
                  BIND( IF( BOUND(?et), ?et, "__NULL__") AS ?_et) .
                  BIND( COALESCE(?ulx1, ?ulx2, "__NULL__") AS ?_ulx) .
                  BIND( COALESCE(?uly1, ?uly2, "__NULL__") AS ?_uly) .
                  BIND( COALESCE(?lrx1, ?lrx2, "__NULL__") AS ?_lrx) .
                  BIND( COALESCE(?lry1, ?lry2, "__NULL__") AS ?_lry) .
              
                  BIND( cfn:getSpan(str(?docid), str(?doceid), str(?_sid), str(?_kfid), str(?_so), str(?_eo), str(?_ulx), str(?_uly), str(?_lrx), str(?_lry), str(?_st), str(?_et) ) AS ?infj_span ) .
              }
	]]>
     </sparql>
  </zerohop_query>
  <zerohop_query id="AIDA_TA2_ZH_2019_0010">
    <reference_kbid> LDC2019E43:80000123 </reference_kbid>
    <sparql>
 	<![CDATA[
              PREFIX ldcOnt: <https://tac.nist.gov/tracks/SM-KBP/2019/ontologies/LDCOntology#>
              PREFIX rdf:   <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
              PREFIX aida:  <https://tac.nist.gov/tracks/SM-KBP/2019/ontologies/InterchangeOntology#>
              PREFIX cfn:   <https://verdi.nextcentury.com/custom-function/>
              PREFIX xsd:   <http://www.w3.org/2001/XMLSchema#>
              
              # Query: AIDA_TA2_ZH_2019_0010
              # Query description: Find all informative mentions of entities linked to "LDC2019E43:80000123"
              # NIST default aggregate confidence of ?cluster is a function of
              #      ?link_cv      # confidenceValue of asserting that ?cluster is the same as reference KB node ?link_target
              #      ?j_cv         # confidenceValue of informativeJustification
              
              # ?j_cv is used to rank informative mentions within a cluster for purposes of pooling and AP scoring.
              
              # In M18, we use the ?j_cv (confidence in the justification, e.g., confidence of _:b02) and interpret that confidence
              # as the confidence of linking the justification to the cluster; _:b02 is used *only* to represent an informative
              # mention for some cluster, even though that cluster is not referenced in _:b02. Ideally (in future), there would be
              # an aida:InformativeJustificationAssertion construct (paralleling the structure of an aida:LinkAssertion) that
              # associates a confidence to each aida:informativeJustification, and could represent the confidence of linking an
              # InformativeJustification to a cluster.
              
              # _:b12 a                        aida:TextJustification ;
              #      aida:confidence          [ a                     aida:Confidence ;
              #                                 aida:confidenceValue  "1.0"^^<http://www.w3.org/2001/XMLSchema#double> ;
              #                                 aida:system           ldc:testSystem
              #                               ] ;
              #      aida:endOffsetInclusive  "286"^^<http://www.w3.org/2001/XMLSchema#int> ;
              #      aida:privateData         [ a                 aida:PrivateData ;
              #                                 aida:jsonContent  "{\"mention\":\"M000721\"}" ;
              #                                 aida:system       ldc:testSystem
              #                               ] ;
              #      aida:source              "DE005" ;
              #      aida:sourceDocument      "D0100" ;
              #      aida:startOffset         "260"^^<http://www.w3.org/2001/XMLSchema#int> ;
              #      aida:system              ldc:testSystem .
              #
              # _:b11 a              aida:LinkAssertion ;
              #      aida:confidence [ a                     aida:Confidence ;
              #                        aida:confidenceValue  "0.498"^^xsd:double ;
              #                        aida:system           ldc:testSystem
              #                      ] ;
              #      aida:linkTarget "ldc:E0137" ;
              #      aida:system     ldc:testSystem .
              #
              # _:c12 a               aida:InformativeJustificationAssertion ;
              #       aida:confidence [ a                     aida:Confidence ;
              #                         aida:confidenceValue  "0.498"^^xsd:double ;
              #                         aida:system           ldc:testSystem
              #                       ] ;
              #      aida:informativeJustification _:b12 ;
              #      aida:system     ldc:testSystem .
              #
              # ldc:cluster-E0137     a                             aida:SameAsCluster ;
              #                       aida:informativeJustification _:c12 ;
              #                       aida:link                     _:b11 ;
              #                       aida:system                   ldc:testSystem .
              
              
              SELECT DISTINCT
                     ?docid             # sourceDocument
                     ?query_link_target # link target as part of the query
                     ?link_target       # link target in the KB matching ?query_link_target
                     ?cluster           # the ?cluster linked to ?link_target
                     ?infj_span         # informativeJustification span taken from the ?cluster
                     ?j_cv              # confidenceValue of informativeJustification
                     ?link_target       # query reference KB node linked to a ?cluster
                     ?link_cv           # confidenceValue of asserting that ?cluster is the same as reference KB node ?link_target
              
              WHERE {
                  BIND ("LDC2019E43:80000123" AS ?query_link_target)
              
                  # Find ?cluster linked to "LDC2019E43:80000123"
                  # Find the ?link_cv: confidenceValue of linking to external KB entity
                  ?cluster              a                             aida:SameAsCluster .
                  ?cluster              aida:informativeJustification ?inf_justification .
                  ?cluster              aida:link                     ?ref_kb_link .
                  ?ref_kb_link          a                             aida:LinkAssertion .
                  ?ref_kb_link          aida:linkTarget               ?link_target .
                  ?ref_kb_link          aida:confidence               ?link_confidence .
                  ?link_confidence      aida:confidenceValue          ?link_cv .
                  
                  FILTER(cfn:memberOf(str(?link_target), str(?query_link_target))) .
              
                  # Find mention spans for ?inf_justification
                  ?inf_justification    aida:source          ?doceid .
                  ?inf_justification    aida:sourceDocument  ?docid .
                  ?inf_justification    aida:confidence      ?j_confidence .
                  ?j_confidence         aida:confidenceValue ?j_cv .
              
                  OPTIONAL {
                         ?inf_justification a                           aida:TextJustification .
                         ?inf_justification aida:startOffset            ?so .
                         ?inf_justification aida:endOffsetInclusive     ?eo
                  }
                  OPTIONAL {
                         ?inf_justification a                           aida:ImageJustification .
                         ?inf_justification aida:boundingBox            ?bb1  .
                         ?bb1               aida:boundingBoxUpperLeftX  ?ulx1 .
                         ?bb1               aida:boundingBoxUpperLeftY  ?uly1 .
                         ?bb1               aida:boundingBoxLowerRightX ?lrx1 .
                         ?bb1               aida:boundingBoxLowerRightY ?lry1
                  }
                  OPTIONAL {
                         ?inf_justification a                           aida:KeyFrameVideoJustification .
                         ?inf_justification aida:keyFrame               ?kfid .
                         ?inf_justification aida:boundingBox            ?bb2  .
                         ?bb2               aida:boundingBoxUpperLeftX  ?ulx2 .
                         ?bb2               aida:boundingBoxUpperLeftY  ?uly2 .
                         ?bb2               aida:boundingBoxLowerRightX ?lrx2 .
                         ?bb2               aida:boundingBoxLowerRightY ?lry2
                  }
                  OPTIONAL {
                         ?inf_justification a                           aida:ShotVideoJustification .
                         ?inf_justification aida:shot                   ?sid
                  }
                  OPTIONAL {
                         ?inf_justification a                           aida:AudioJustification .
                         ?inf_justification aida:startTimestamp         ?st .
                         ?inf_justification aida:endTimestamp           ?et
                  }
              
                  BIND( IF( BOUND(?sid), ?sid, "__NULL__") AS ?_sid) .
                  BIND( IF( BOUND(?kfid), ?kfid, "__NULL__") AS ?_kfid) .
                  BIND( IF( BOUND(?so), ?so, "__NULL__") AS ?_so) .
                  BIND( IF( BOUND(?eo), ?eo, "__NULL__") AS ?_eo) .
                  BIND( IF( BOUND(?st), ?st, "__NULL__") AS ?_st) .
                  BIND( IF( BOUND(?et), ?et, "__NULL__") AS ?_et) .
                  BIND( COALESCE(?ulx1, ?ulx2, "__NULL__") AS ?_ulx) .
                  BIND( COALESCE(?uly1, ?uly2, "__NULL__") AS ?_uly) .
                  BIND( COALESCE(?lrx1, ?lrx2, "__NULL__") AS ?_lrx) .
                  BIND( COALESCE(?lry1, ?lry2, "__NULL__") AS ?_lry) .
              
                  BIND( cfn:getSpan(str(?docid), str(?doceid), str(?_sid), str(?_kfid), str(?_so), str(?_eo), str(?_ulx), str(?_uly), str(?_lrx), str(?_lry), str(?_st), str(?_et) ) AS ?infj_span ) .
              }
	]]>
     </sparql>
  </zerohop_query>
  <zerohop_query id="AIDA_TA2_ZH_2019_0011">
    <reference_kbid> LDC2019E43:80000063 </reference_kbid>
    <sparql>
 	<![CDATA[
              PREFIX ldcOnt: <https://tac.nist.gov/tracks/SM-KBP/2019/ontologies/LDCOntology#>
              PREFIX rdf:   <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
              PREFIX aida:  <https://tac.nist.gov/tracks/SM-KBP/2019/ontologies/InterchangeOntology#>
              PREFIX cfn:   <https://verdi.nextcentury.com/custom-function/>
              PREFIX xsd:   <http://www.w3.org/2001/XMLSchema#>
              
              # Query: AIDA_TA2_ZH_2019_0011
              # Query description: Find all informative mentions of entities linked to "LDC2019E43:80000063"
              # NIST default aggregate confidence of ?cluster is a function of
              #      ?link_cv      # confidenceValue of asserting that ?cluster is the same as reference KB node ?link_target
              #      ?j_cv         # confidenceValue of informativeJustification
              
              # ?j_cv is used to rank informative mentions within a cluster for purposes of pooling and AP scoring.
              
              # In M18, we use the ?j_cv (confidence in the justification, e.g., confidence of _:b02) and interpret that confidence
              # as the confidence of linking the justification to the cluster; _:b02 is used *only* to represent an informative
              # mention for some cluster, even though that cluster is not referenced in _:b02. Ideally (in future), there would be
              # an aida:InformativeJustificationAssertion construct (paralleling the structure of an aida:LinkAssertion) that
              # associates a confidence to each aida:informativeJustification, and could represent the confidence of linking an
              # InformativeJustification to a cluster.
              
              # _:b12 a                        aida:TextJustification ;
              #      aida:confidence          [ a                     aida:Confidence ;
              #                                 aida:confidenceValue  "1.0"^^<http://www.w3.org/2001/XMLSchema#double> ;
              #                                 aida:system           ldc:testSystem
              #                               ] ;
              #      aida:endOffsetInclusive  "286"^^<http://www.w3.org/2001/XMLSchema#int> ;
              #      aida:privateData         [ a                 aida:PrivateData ;
              #                                 aida:jsonContent  "{\"mention\":\"M000721\"}" ;
              #                                 aida:system       ldc:testSystem
              #                               ] ;
              #      aida:source              "DE005" ;
              #      aida:sourceDocument      "D0100" ;
              #      aida:startOffset         "260"^^<http://www.w3.org/2001/XMLSchema#int> ;
              #      aida:system              ldc:testSystem .
              #
              # _:b11 a              aida:LinkAssertion ;
              #      aida:confidence [ a                     aida:Confidence ;
              #                        aida:confidenceValue  "0.498"^^xsd:double ;
              #                        aida:system           ldc:testSystem
              #                      ] ;
              #      aida:linkTarget "ldc:E0137" ;
              #      aida:system     ldc:testSystem .
              #
              # _:c12 a               aida:InformativeJustificationAssertion ;
              #       aida:confidence [ a                     aida:Confidence ;
              #                         aida:confidenceValue  "0.498"^^xsd:double ;
              #                         aida:system           ldc:testSystem
              #                       ] ;
              #      aida:informativeJustification _:b12 ;
              #      aida:system     ldc:testSystem .
              #
              # ldc:cluster-E0137     a                             aida:SameAsCluster ;
              #                       aida:informativeJustification _:c12 ;
              #                       aida:link                     _:b11 ;
              #                       aida:system                   ldc:testSystem .
              
              
              SELECT DISTINCT
                     ?docid             # sourceDocument
                     ?query_link_target # link target as part of the query
                     ?link_target       # link target in the KB matching ?query_link_target
                     ?cluster           # the ?cluster linked to ?link_target
                     ?infj_span         # informativeJustification span taken from the ?cluster
                     ?j_cv              # confidenceValue of informativeJustification
                     ?link_target       # query reference KB node linked to a ?cluster
                     ?link_cv           # confidenceValue of asserting that ?cluster is the same as reference KB node ?link_target
              
              WHERE {
                  BIND ("LDC2019E43:80000063" AS ?query_link_target)
              
                  # Find ?cluster linked to "LDC2019E43:80000063"
                  # Find the ?link_cv: confidenceValue of linking to external KB entity
                  ?cluster              a                             aida:SameAsCluster .
                  ?cluster              aida:informativeJustification ?inf_justification .
                  ?cluster              aida:link                     ?ref_kb_link .
                  ?ref_kb_link          a                             aida:LinkAssertion .
                  ?ref_kb_link          aida:linkTarget               ?link_target .
                  ?ref_kb_link          aida:confidence               ?link_confidence .
                  ?link_confidence      aida:confidenceValue          ?link_cv .
                  
                  FILTER(cfn:memberOf(str(?link_target), str(?query_link_target))) .
              
                  # Find mention spans for ?inf_justification
                  ?inf_justification    aida:source          ?doceid .
                  ?inf_justification    aida:sourceDocument  ?docid .
                  ?inf_justification    aida:confidence      ?j_confidence .
                  ?j_confidence         aida:confidenceValue ?j_cv .
              
                  OPTIONAL {
                         ?inf_justification a                           aida:TextJustification .
                         ?inf_justification aida:startOffset            ?so .
                         ?inf_justification aida:endOffsetInclusive     ?eo
                  }
                  OPTIONAL {
                         ?inf_justification a                           aida:ImageJustification .
                         ?inf_justification aida:boundingBox            ?bb1  .
                         ?bb1               aida:boundingBoxUpperLeftX  ?ulx1 .
                         ?bb1               aida:boundingBoxUpperLeftY  ?uly1 .
                         ?bb1               aida:boundingBoxLowerRightX ?lrx1 .
                         ?bb1               aida:boundingBoxLowerRightY ?lry1
                  }
                  OPTIONAL {
                         ?inf_justification a                           aida:KeyFrameVideoJustification .
                         ?inf_justification aida:keyFrame               ?kfid .
                         ?inf_justification aida:boundingBox            ?bb2  .
                         ?bb2               aida:boundingBoxUpperLeftX  ?ulx2 .
                         ?bb2               aida:boundingBoxUpperLeftY  ?uly2 .
                         ?bb2               aida:boundingBoxLowerRightX ?lrx2 .
                         ?bb2               aida:boundingBoxLowerRightY ?lry2
                  }
                  OPTIONAL {
                         ?inf_justification a                           aida:ShotVideoJustification .
                         ?inf_justification aida:shot                   ?sid
                  }
                  OPTIONAL {
                         ?inf_justification a                           aida:AudioJustification .
                         ?inf_justification aida:startTimestamp         ?st .
                         ?inf_justification aida:endTimestamp           ?et
                  }
              
                  BIND( IF( BOUND(?sid), ?sid, "__NULL__") AS ?_sid) .
                  BIND( IF( BOUND(?kfid), ?kfid, "__NULL__") AS ?_kfid) .
                  BIND( IF( BOUND(?so), ?so, "__NULL__") AS ?_so) .
                  BIND( IF( BOUND(?eo), ?eo, "__NULL__") AS ?_eo) .
                  BIND( IF( BOUND(?st), ?st, "__NULL__") AS ?_st) .
                  BIND( IF( BOUND(?et), ?et, "__NULL__") AS ?_et) .
                  BIND( COALESCE(?ulx1, ?ulx2, "__NULL__") AS ?_ulx) .
                  BIND( COALESCE(?uly1, ?uly2, "__NULL__") AS ?_uly) .
                  BIND( COALESCE(?lrx1, ?lrx2, "__NULL__") AS ?_lrx) .
                  BIND( COALESCE(?lry1, ?lry2, "__NULL__") AS ?_lry) .
              
                  BIND( cfn:getSpan(str(?docid), str(?doceid), str(?_sid), str(?_kfid), str(?_so), str(?_eo), str(?_ulx), str(?_uly), str(?_lrx), str(?_lry), str(?_st), str(?_et) ) AS ?infj_span ) .
              }
	]]>
     </sparql>
  </zerohop_query>
  <zerohop_query id="AIDA_TA2_ZH_2019_0012">
    <reference_kbid> LDC2019E43:80000373 </reference_kbid>
    <sparql>
 	<![CDATA[
              PREFIX ldcOnt: <https://tac.nist.gov/tracks/SM-KBP/2019/ontologies/LDCOntology#>
              PREFIX rdf:   <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
              PREFIX aida:  <https://tac.nist.gov/tracks/SM-KBP/2019/ontologies/InterchangeOntology#>
              PREFIX cfn:   <https://verdi.nextcentury.com/custom-function/>
              PREFIX xsd:   <http://www.w3.org/2001/XMLSchema#>
              
              # Query: AIDA_TA2_ZH_2019_0012
              # Query description: Find all informative mentions of entities linked to "LDC2019E43:80000373"
              # NIST default aggregate confidence of ?cluster is a function of
              #      ?link_cv      # confidenceValue of asserting that ?cluster is the same as reference KB node ?link_target
              #      ?j_cv         # confidenceValue of informativeJustification
              
              # ?j_cv is used to rank informative mentions within a cluster for purposes of pooling and AP scoring.
              
              # In M18, we use the ?j_cv (confidence in the justification, e.g., confidence of _:b02) and interpret that confidence
              # as the confidence of linking the justification to the cluster; _:b02 is used *only* to represent an informative
              # mention for some cluster, even though that cluster is not referenced in _:b02. Ideally (in future), there would be
              # an aida:InformativeJustificationAssertion construct (paralleling the structure of an aida:LinkAssertion) that
              # associates a confidence to each aida:informativeJustification, and could represent the confidence of linking an
              # InformativeJustification to a cluster.
              
              # _:b12 a                        aida:TextJustification ;
              #      aida:confidence          [ a                     aida:Confidence ;
              #                                 aida:confidenceValue  "1.0"^^<http://www.w3.org/2001/XMLSchema#double> ;
              #                                 aida:system           ldc:testSystem
              #                               ] ;
              #      aida:endOffsetInclusive  "286"^^<http://www.w3.org/2001/XMLSchema#int> ;
              #      aida:privateData         [ a                 aida:PrivateData ;
              #                                 aida:jsonContent  "{\"mention\":\"M000721\"}" ;
              #                                 aida:system       ldc:testSystem
              #                               ] ;
              #      aida:source              "DE005" ;
              #      aida:sourceDocument      "D0100" ;
              #      aida:startOffset         "260"^^<http://www.w3.org/2001/XMLSchema#int> ;
              #      aida:system              ldc:testSystem .
              #
              # _:b11 a              aida:LinkAssertion ;
              #      aida:confidence [ a                     aida:Confidence ;
              #                        aida:confidenceValue  "0.498"^^xsd:double ;
              #                        aida:system           ldc:testSystem
              #                      ] ;
              #      aida:linkTarget "ldc:E0137" ;
              #      aida:system     ldc:testSystem .
              #
              # _:c12 a               aida:InformativeJustificationAssertion ;
              #       aida:confidence [ a                     aida:Confidence ;
              #                         aida:confidenceValue  "0.498"^^xsd:double ;
              #                         aida:system           ldc:testSystem
              #                       ] ;
              #      aida:informativeJustification _:b12 ;
              #      aida:system     ldc:testSystem .
              #
              # ldc:cluster-E0137     a                             aida:SameAsCluster ;
              #                       aida:informativeJustification _:c12 ;
              #                       aida:link                     _:b11 ;
              #                       aida:system                   ldc:testSystem .
              
              
              SELECT DISTINCT
                     ?docid             # sourceDocument
                     ?query_link_target # link target as part of the query
                     ?link_target       # link target in the KB matching ?query_link_target
                     ?cluster           # the ?cluster linked to ?link_target
                     ?infj_span         # informativeJustification span taken from the ?cluster
                     ?j_cv              # confidenceValue of informativeJustification
                     ?link_target       # query reference KB node linked to a ?cluster
                     ?link_cv           # confidenceValue of asserting that ?cluster is the same as reference KB node ?link_target
              
              WHERE {
                  BIND ("LDC2019E43:80000373" AS ?query_link_target)
              
                  # Find ?cluster linked to "LDC2019E43:80000373"
                  # Find the ?link_cv: confidenceValue of linking to external KB entity
                  ?cluster              a                             aida:SameAsCluster .
                  ?cluster              aida:informativeJustification ?inf_justification .
                  ?cluster              aida:link                     ?ref_kb_link .
                  ?ref_kb_link          a                             aida:LinkAssertion .
                  ?ref_kb_link          aida:linkTarget               ?link_target .
                  ?ref_kb_link          aida:confidence               ?link_confidence .
                  ?link_confidence      aida:confidenceValue          ?link_cv .
                  
                  FILTER(cfn:memberOf(str(?link_target), str(?query_link_target))) .
              
                  # Find mention spans for ?inf_justification
                  ?inf_justification    aida:source          ?doceid .
                  ?inf_justification    aida:sourceDocument  ?docid .
                  ?inf_justification    aida:confidence      ?j_confidence .
                  ?j_confidence         aida:confidenceValue ?j_cv .
              
                  OPTIONAL {
                         ?inf_justification a                           aida:TextJustification .
                         ?inf_justification aida:startOffset            ?so .
                         ?inf_justification aida:endOffsetInclusive     ?eo
                  }
                  OPTIONAL {
                         ?inf_justification a                           aida:ImageJustification .
                         ?inf_justification aida:boundingBox            ?bb1  .
                         ?bb1               aida:boundingBoxUpperLeftX  ?ulx1 .
                         ?bb1               aida:boundingBoxUpperLeftY  ?uly1 .
                         ?bb1               aida:boundingBoxLowerRightX ?lrx1 .
                         ?bb1               aida:boundingBoxLowerRightY ?lry1
                  }
                  OPTIONAL {
                         ?inf_justification a                           aida:KeyFrameVideoJustification .
                         ?inf_justification aida:keyFrame               ?kfid .
                         ?inf_justification aida:boundingBox            ?bb2  .
                         ?bb2               aida:boundingBoxUpperLeftX  ?ulx2 .
                         ?bb2               aida:boundingBoxUpperLeftY  ?uly2 .
                         ?bb2               aida:boundingBoxLowerRightX ?lrx2 .
                         ?bb2               aida:boundingBoxLowerRightY ?lry2
                  }
                  OPTIONAL {
                         ?inf_justification a                           aida:ShotVideoJustification .
                         ?inf_justification aida:shot                   ?sid
                  }
                  OPTIONAL {
                         ?inf_justification a                           aida:AudioJustification .
                         ?inf_justification aida:startTimestamp         ?st .
                         ?inf_justification aida:endTimestamp           ?et
                  }
              
                  BIND( IF( BOUND(?sid), ?sid, "__NULL__") AS ?_sid) .
                  BIND( IF( BOUND(?kfid), ?kfid, "__NULL__") AS ?_kfid) .
                  BIND( IF( BOUND(?so), ?so, "__NULL__") AS ?_so) .
                  BIND( IF( BOUND(?eo), ?eo, "__NULL__") AS ?_eo) .
                  BIND( IF( BOUND(?st), ?st, "__NULL__") AS ?_st) .
                  BIND( IF( BOUND(?et), ?et, "__NULL__") AS ?_et) .
                  BIND( COALESCE(?ulx1, ?ulx2, "__NULL__") AS ?_ulx) .
                  BIND( COALESCE(?uly1, ?uly2, "__NULL__") AS ?_uly) .
                  BIND( COALESCE(?lrx1, ?lrx2, "__NULL__") AS ?_lrx) .
                  BIND( COALESCE(?lry1, ?lry2, "__NULL__") AS ?_lry) .
              
                  BIND( cfn:getSpan(str(?docid), str(?doceid), str(?_sid), str(?_kfid), str(?_so), str(?_eo), str(?_ulx), str(?_uly), str(?_lrx), str(?_lry), str(?_st), str(?_et) ) AS ?infj_span ) .
              }
	]]>
     </sparql>
  </zerohop_query>
  <zerohop_query id="AIDA_TA2_ZH_2019_0013">
    <reference_kbid> LDC2019E43:80000121 </reference_kbid>
    <sparql>
 	<![CDATA[
              PREFIX ldcOnt: <https://tac.nist.gov/tracks/SM-KBP/2019/ontologies/LDCOntology#>
              PREFIX rdf:   <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
              PREFIX aida:  <https://tac.nist.gov/tracks/SM-KBP/2019/ontologies/InterchangeOntology#>
              PREFIX cfn:   <https://verdi.nextcentury.com/custom-function/>
              PREFIX xsd:   <http://www.w3.org/2001/XMLSchema#>
              
              # Query: AIDA_TA2_ZH_2019_0013
              # Query description: Find all informative mentions of entities linked to "LDC2019E43:80000121"
              # NIST default aggregate confidence of ?cluster is a function of
              #      ?link_cv      # confidenceValue of asserting that ?cluster is the same as reference KB node ?link_target
              #      ?j_cv         # confidenceValue of informativeJustification
              
              # ?j_cv is used to rank informative mentions within a cluster for purposes of pooling and AP scoring.
              
              # In M18, we use the ?j_cv (confidence in the justification, e.g., confidence of _:b02) and interpret that confidence
              # as the confidence of linking the justification to the cluster; _:b02 is used *only* to represent an informative
              # mention for some cluster, even though that cluster is not referenced in _:b02. Ideally (in future), there would be
              # an aida:InformativeJustificationAssertion construct (paralleling the structure of an aida:LinkAssertion) that
              # associates a confidence to each aida:informativeJustification, and could represent the confidence of linking an
              # InformativeJustification to a cluster.
              
              # _:b12 a                        aida:TextJustification ;
              #      aida:confidence          [ a                     aida:Confidence ;
              #                                 aida:confidenceValue  "1.0"^^<http://www.w3.org/2001/XMLSchema#double> ;
              #                                 aida:system           ldc:testSystem
              #                               ] ;
              #      aida:endOffsetInclusive  "286"^^<http://www.w3.org/2001/XMLSchema#int> ;
              #      aida:privateData         [ a                 aida:PrivateData ;
              #                                 aida:jsonContent  "{\"mention\":\"M000721\"}" ;
              #                                 aida:system       ldc:testSystem
              #                               ] ;
              #      aida:source              "DE005" ;
              #      aida:sourceDocument      "D0100" ;
              #      aida:startOffset         "260"^^<http://www.w3.org/2001/XMLSchema#int> ;
              #      aida:system              ldc:testSystem .
              #
              # _:b11 a              aida:LinkAssertion ;
              #      aida:confidence [ a                     aida:Confidence ;
              #                        aida:confidenceValue  "0.498"^^xsd:double ;
              #                        aida:system           ldc:testSystem
              #                      ] ;
              #      aida:linkTarget "ldc:E0137" ;
              #      aida:system     ldc:testSystem .
              #
              # _:c12 a               aida:InformativeJustificationAssertion ;
              #       aida:confidence [ a                     aida:Confidence ;
              #                         aida:confidenceValue  "0.498"^^xsd:double ;
              #                         aida:system           ldc:testSystem
              #                       ] ;
              #      aida:informativeJustification _:b12 ;
              #      aida:system     ldc:testSystem .
              #
              # ldc:cluster-E0137     a                             aida:SameAsCluster ;
              #                       aida:informativeJustification _:c12 ;
              #                       aida:link                     _:b11 ;
              #                       aida:system                   ldc:testSystem .
              
              
              SELECT DISTINCT
                     ?docid             # sourceDocument
                     ?query_link_target # link target as part of the query
                     ?link_target       # link target in the KB matching ?query_link_target
                     ?cluster           # the ?cluster linked to ?link_target
                     ?infj_span         # informativeJustification span taken from the ?cluster
                     ?j_cv              # confidenceValue of informativeJustification
                     ?link_target       # query reference KB node linked to a ?cluster
                     ?link_cv           # confidenceValue of asserting that ?cluster is the same as reference KB node ?link_target
              
              WHERE {
                  BIND ("LDC2019E43:80000121" AS ?query_link_target)
              
                  # Find ?cluster linked to "LDC2019E43:80000121"
                  # Find the ?link_cv: confidenceValue of linking to external KB entity
                  ?cluster              a                             aida:SameAsCluster .
                  ?cluster              aida:informativeJustification ?inf_justification .
                  ?cluster              aida:link                     ?ref_kb_link .
                  ?ref_kb_link          a                             aida:LinkAssertion .
                  ?ref_kb_link          aida:linkTarget               ?link_target .
                  ?ref_kb_link          aida:confidence               ?link_confidence .
                  ?link_confidence      aida:confidenceValue          ?link_cv .
                  
                  FILTER(cfn:memberOf(str(?link_target), str(?query_link_target))) .
              
                  # Find mention spans for ?inf_justification
                  ?inf_justification    aida:source          ?doceid .
                  ?inf_justification    aida:sourceDocument  ?docid .
                  ?inf_justification    aida:confidence      ?j_confidence .
                  ?j_confidence         aida:confidenceValue ?j_cv .
              
                  OPTIONAL {
                         ?inf_justification a                           aida:TextJustification .
                         ?inf_justification aida:startOffset            ?so .
                         ?inf_justification aida:endOffsetInclusive     ?eo
                  }
                  OPTIONAL {
                         ?inf_justification a                           aida:ImageJustification .
                         ?inf_justification aida:boundingBox            ?bb1  .
                         ?bb1               aida:boundingBoxUpperLeftX  ?ulx1 .
                         ?bb1               aida:boundingBoxUpperLeftY  ?uly1 .
                         ?bb1               aida:boundingBoxLowerRightX ?lrx1 .
                         ?bb1               aida:boundingBoxLowerRightY ?lry1
                  }
                  OPTIONAL {
                         ?inf_justification a                           aida:KeyFrameVideoJustification .
                         ?inf_justification aida:keyFrame               ?kfid .
                         ?inf_justification aida:boundingBox            ?bb2  .
                         ?bb2               aida:boundingBoxUpperLeftX  ?ulx2 .
                         ?bb2               aida:boundingBoxUpperLeftY  ?uly2 .
                         ?bb2               aida:boundingBoxLowerRightX ?lrx2 .
                         ?bb2               aida:boundingBoxLowerRightY ?lry2
                  }
                  OPTIONAL {
                         ?inf_justification a                           aida:ShotVideoJustification .
                         ?inf_justification aida:shot                   ?sid
                  }
                  OPTIONAL {
                         ?inf_justification a                           aida:AudioJustification .
                         ?inf_justification aida:startTimestamp         ?st .
                         ?inf_justification aida:endTimestamp           ?et
                  }
              
                  BIND( IF( BOUND(?sid), ?sid, "__NULL__") AS ?_sid) .
                  BIND( IF( BOUND(?kfid), ?kfid, "__NULL__") AS ?_kfid) .
                  BIND( IF( BOUND(?so), ?so, "__NULL__") AS ?_so) .
                  BIND( IF( BOUND(?eo), ?eo, "__NULL__") AS ?_eo) .
                  BIND( IF( BOUND(?st), ?st, "__NULL__") AS ?_st) .
                  BIND( IF( BOUND(?et), ?et, "__NULL__") AS ?_et) .
                  BIND( COALESCE(?ulx1, ?ulx2, "__NULL__") AS ?_ulx) .
                  BIND( COALESCE(?uly1, ?uly2, "__NULL__") AS ?_uly) .
                  BIND( COALESCE(?lrx1, ?lrx2, "__NULL__") AS ?_lrx) .
                  BIND( COALESCE(?lry1, ?lry2, "__NULL__") AS ?_lry) .
              
                  BIND( cfn:getSpan(str(?docid), str(?doceid), str(?_sid), str(?_kfid), str(?_so), str(?_eo), str(?_ulx), str(?_uly), str(?_lrx), str(?_lry), str(?_st), str(?_et) ) AS ?infj_span ) .
              }
	]]>
     </sparql>
  </zerohop_query>
  <zerohop_query id="AIDA_TA2_ZH_2019_0014">
    <reference_kbid> LDC2019E43:80000120 </reference_kbid>
    <sparql>
 	<![CDATA[
              PREFIX ldcOnt: <https://tac.nist.gov/tracks/SM-KBP/2019/ontologies/LDCOntology#>
              PREFIX rdf:   <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
              PREFIX aida:  <https://tac.nist.gov/tracks/SM-KBP/2019/ontologies/InterchangeOntology#>
              PREFIX cfn:   <https://verdi.nextcentury.com/custom-function/>
              PREFIX xsd:   <http://www.w3.org/2001/XMLSchema#>
              
              # Query: AIDA_TA2_ZH_2019_0014
              # Query description: Find all informative mentions of entities linked to "LDC2019E43:80000120"
              # NIST default aggregate confidence of ?cluster is a function of
              #      ?link_cv      # confidenceValue of asserting that ?cluster is the same as reference KB node ?link_target
              #      ?j_cv         # confidenceValue of informativeJustification
              
              # ?j_cv is used to rank informative mentions within a cluster for purposes of pooling and AP scoring.
              
              # In M18, we use the ?j_cv (confidence in the justification, e.g., confidence of _:b02) and interpret that confidence
              # as the confidence of linking the justification to the cluster; _:b02 is used *only* to represent an informative
              # mention for some cluster, even though that cluster is not referenced in _:b02. Ideally (in future), there would be
              # an aida:InformativeJustificationAssertion construct (paralleling the structure of an aida:LinkAssertion) that
              # associates a confidence to each aida:informativeJustification, and could represent the confidence of linking an
              # InformativeJustification to a cluster.
              
              # _:b12 a                        aida:TextJustification ;
              #      aida:confidence          [ a                     aida:Confidence ;
              #                                 aida:confidenceValue  "1.0"^^<http://www.w3.org/2001/XMLSchema#double> ;
              #                                 aida:system           ldc:testSystem
              #                               ] ;
              #      aida:endOffsetInclusive  "286"^^<http://www.w3.org/2001/XMLSchema#int> ;
              #      aida:privateData         [ a                 aida:PrivateData ;
              #                                 aida:jsonContent  "{\"mention\":\"M000721\"}" ;
              #                                 aida:system       ldc:testSystem
              #                               ] ;
              #      aida:source              "DE005" ;
              #      aida:sourceDocument      "D0100" ;
              #      aida:startOffset         "260"^^<http://www.w3.org/2001/XMLSchema#int> ;
              #      aida:system              ldc:testSystem .
              #
              # _:b11 a              aida:LinkAssertion ;
              #      aida:confidence [ a                     aida:Confidence ;
              #                        aida:confidenceValue  "0.498"^^xsd:double ;
              #                        aida:system           ldc:testSystem
              #                      ] ;
              #      aida:linkTarget "ldc:E0137" ;
              #      aida:system     ldc:testSystem .
              #
              # _:c12 a               aida:InformativeJustificationAssertion ;
              #       aida:confidence [ a                     aida:Confidence ;
              #                         aida:confidenceValue  "0.498"^^xsd:double ;
              #                         aida:system           ldc:testSystem
              #                       ] ;
              #      aida:informativeJustification _:b12 ;
              #      aida:system     ldc:testSystem .
              #
              # ldc:cluster-E0137     a                             aida:SameAsCluster ;
              #                       aida:informativeJustification _:c12 ;
              #                       aida:link                     _:b11 ;
              #                       aida:system                   ldc:testSystem .
              
              
              SELECT DISTINCT
                     ?docid             # sourceDocument
                     ?query_link_target # link target as part of the query
                     ?link_target       # link target in the KB matching ?query_link_target
                     ?cluster           # the ?cluster linked to ?link_target
                     ?infj_span         # informativeJustification span taken from the ?cluster
                     ?j_cv              # confidenceValue of informativeJustification
                     ?link_target       # query reference KB node linked to a ?cluster
                     ?link_cv           # confidenceValue of asserting that ?cluster is the same as reference KB node ?link_target
              
              WHERE {
                  BIND ("LDC2019E43:80000120" AS ?query_link_target)
              
                  # Find ?cluster linked to "LDC2019E43:80000120"
                  # Find the ?link_cv: confidenceValue of linking to external KB entity
                  ?cluster              a                             aida:SameAsCluster .
                  ?cluster              aida:informativeJustification ?inf_justification .
                  ?cluster              aida:link                     ?ref_kb_link .
                  ?ref_kb_link          a                             aida:LinkAssertion .
                  ?ref_kb_link          aida:linkTarget               ?link_target .
                  ?ref_kb_link          aida:confidence               ?link_confidence .
                  ?link_confidence      aida:confidenceValue          ?link_cv .
                  
                  FILTER(cfn:memberOf(str(?link_target), str(?query_link_target))) .
              
                  # Find mention spans for ?inf_justification
                  ?inf_justification    aida:source          ?doceid .
                  ?inf_justification    aida:sourceDocument  ?docid .
                  ?inf_justification    aida:confidence      ?j_confidence .
                  ?j_confidence         aida:confidenceValue ?j_cv .
              
                  OPTIONAL {
                         ?inf_justification a                           aida:TextJustification .
                         ?inf_justification aida:startOffset            ?so .
                         ?inf_justification aida:endOffsetInclusive     ?eo
                  }
                  OPTIONAL {
                         ?inf_justification a                           aida:ImageJustification .
                         ?inf_justification aida:boundingBox            ?bb1  .
                         ?bb1               aida:boundingBoxUpperLeftX  ?ulx1 .
                         ?bb1               aida:boundingBoxUpperLeftY  ?uly1 .
                         ?bb1               aida:boundingBoxLowerRightX ?lrx1 .
                         ?bb1               aida:boundingBoxLowerRightY ?lry1
                  }
                  OPTIONAL {
                         ?inf_justification a                           aida:KeyFrameVideoJustification .
                         ?inf_justification aida:keyFrame               ?kfid .
                         ?inf_justification aida:boundingBox            ?bb2  .
                         ?bb2               aida:boundingBoxUpperLeftX  ?ulx2 .
                         ?bb2               aida:boundingBoxUpperLeftY  ?uly2 .
                         ?bb2               aida:boundingBoxLowerRightX ?lrx2 .
                         ?bb2               aida:boundingBoxLowerRightY ?lry2
                  }
                  OPTIONAL {
                         ?inf_justification a                           aida:ShotVideoJustification .
                         ?inf_justification aida:shot                   ?sid
                  }
                  OPTIONAL {
                         ?inf_justification a                           aida:AudioJustification .
                         ?inf_justification aida:startTimestamp         ?st .
                         ?inf_justification aida:endTimestamp           ?et
                  }
              
                  BIND( IF( BOUND(?sid), ?sid, "__NULL__") AS ?_sid) .
                  BIND( IF( BOUND(?kfid), ?kfid, "__NULL__") AS ?_kfid) .
                  BIND( IF( BOUND(?so), ?so, "__NULL__") AS ?_so) .
                  BIND( IF( BOUND(?eo), ?eo, "__NULL__") AS ?_eo) .
                  BIND( IF( BOUND(?st), ?st, "__NULL__") AS ?_st) .
                  BIND( IF( BOUND(?et), ?et, "__NULL__") AS ?_et) .
                  BIND( COALESCE(?ulx1, ?ulx2, "__NULL__") AS ?_ulx) .
                  BIND( COALESCE(?uly1, ?uly2, "__NULL__") AS ?_uly) .
                  BIND( COALESCE(?lrx1, ?lrx2, "__NULL__") AS ?_lrx) .
                  BIND( COALESCE(?lry1, ?lry2, "__NULL__") AS ?_lry) .
              
                  BIND( cfn:getSpan(str(?docid), str(?doceid), str(?_sid), str(?_kfid), str(?_so), str(?_eo), str(?_ulx), str(?_uly), str(?_lrx), str(?_lry), str(?_st), str(?_et) ) AS ?infj_span ) .
              }
	]]>
     </sparql>
  </zerohop_query>
  <zerohop_query id="AIDA_TA2_ZH_2019_0015">
    <reference_kbid> LDC2019E43:80000122 </reference_kbid>
    <sparql>
 	<![CDATA[
              PREFIX ldcOnt: <https://tac.nist.gov/tracks/SM-KBP/2019/ontologies/LDCOntology#>
              PREFIX rdf:   <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
              PREFIX aida:  <https://tac.nist.gov/tracks/SM-KBP/2019/ontologies/InterchangeOntology#>
              PREFIX cfn:   <https://verdi.nextcentury.com/custom-function/>
              PREFIX xsd:   <http://www.w3.org/2001/XMLSchema#>
              
              # Query: AIDA_TA2_ZH_2019_0015
              # Query description: Find all informative mentions of entities linked to "LDC2019E43:80000122"
              # NIST default aggregate confidence of ?cluster is a function of
              #      ?link_cv      # confidenceValue of asserting that ?cluster is the same as reference KB node ?link_target
              #      ?j_cv         # confidenceValue of informativeJustification
              
              # ?j_cv is used to rank informative mentions within a cluster for purposes of pooling and AP scoring.
              
              # In M18, we use the ?j_cv (confidence in the justification, e.g., confidence of _:b02) and interpret that confidence
              # as the confidence of linking the justification to the cluster; _:b02 is used *only* to represent an informative
              # mention for some cluster, even though that cluster is not referenced in _:b02. Ideally (in future), there would be
              # an aida:InformativeJustificationAssertion construct (paralleling the structure of an aida:LinkAssertion) that
              # associates a confidence to each aida:informativeJustification, and could represent the confidence of linking an
              # InformativeJustification to a cluster.
              
              # _:b12 a                        aida:TextJustification ;
              #      aida:confidence          [ a                     aida:Confidence ;
              #                                 aida:confidenceValue  "1.0"^^<http://www.w3.org/2001/XMLSchema#double> ;
              #                                 aida:system           ldc:testSystem
              #                               ] ;
              #      aida:endOffsetInclusive  "286"^^<http://www.w3.org/2001/XMLSchema#int> ;
              #      aida:privateData         [ a                 aida:PrivateData ;
              #                                 aida:jsonContent  "{\"mention\":\"M000721\"}" ;
              #                                 aida:system       ldc:testSystem
              #                               ] ;
              #      aida:source              "DE005" ;
              #      aida:sourceDocument      "D0100" ;
              #      aida:startOffset         "260"^^<http://www.w3.org/2001/XMLSchema#int> ;
              #      aida:system              ldc:testSystem .
              #
              # _:b11 a              aida:LinkAssertion ;
              #      aida:confidence [ a                     aida:Confidence ;
              #                        aida:confidenceValue  "0.498"^^xsd:double ;
              #                        aida:system           ldc:testSystem
              #                      ] ;
              #      aida:linkTarget "ldc:E0137" ;
              #      aida:system     ldc:testSystem .
              #
              # _:c12 a               aida:InformativeJustificationAssertion ;
              #       aida:confidence [ a                     aida:Confidence ;
              #                         aida:confidenceValue  "0.498"^^xsd:double ;
              #                         aida:system           ldc:testSystem
              #                       ] ;
              #      aida:informativeJustification _:b12 ;
              #      aida:system     ldc:testSystem .
              #
              # ldc:cluster-E0137     a                             aida:SameAsCluster ;
              #                       aida:informativeJustification _:c12 ;
              #                       aida:link                     _:b11 ;
              #                       aida:system                   ldc:testSystem .
              
              
              SELECT DISTINCT
                     ?docid             # sourceDocument
                     ?query_link_target # link target as part of the query
                     ?link_target       # link target in the KB matching ?query_link_target
                     ?cluster           # the ?cluster linked to ?link_target
                     ?infj_span         # informativeJustification span taken from the ?cluster
                     ?j_cv              # confidenceValue of informativeJustification
                     ?link_target       # query reference KB node linked to a ?cluster
                     ?link_cv           # confidenceValue of asserting that ?cluster is the same as reference KB node ?link_target
              
              WHERE {
                  BIND ("LDC2019E43:80000122" AS ?query_link_target)
              
                  # Find ?cluster linked to "LDC2019E43:80000122"
                  # Find the ?link_cv: confidenceValue of linking to external KB entity
                  ?cluster              a                             aida:SameAsCluster .
                  ?cluster              aida:informativeJustification ?inf_justification .
                  ?cluster              aida:link                     ?ref_kb_link .
                  ?ref_kb_link          a                             aida:LinkAssertion .
                  ?ref_kb_link          aida:linkTarget               ?link_target .
                  ?ref_kb_link          aida:confidence               ?link_confidence .
                  ?link_confidence      aida:confidenceValue          ?link_cv .
                  
                  FILTER(cfn:memberOf(str(?link_target), str(?query_link_target))) .
              
                  # Find mention spans for ?inf_justification
                  ?inf_justification    aida:source          ?doceid .
                  ?inf_justification    aida:sourceDocument  ?docid .
                  ?inf_justification    aida:confidence      ?j_confidence .
                  ?j_confidence         aida:confidenceValue ?j_cv .
              
                  OPTIONAL {
                         ?inf_justification a                           aida:TextJustification .
                         ?inf_justification aida:startOffset            ?so .
                         ?inf_justification aida:endOffsetInclusive     ?eo
                  }
                  OPTIONAL {
                         ?inf_justification a                           aida:ImageJustification .
                         ?inf_justification aida:boundingBox            ?bb1  .
                         ?bb1               aida:boundingBoxUpperLeftX  ?ulx1 .
                         ?bb1               aida:boundingBoxUpperLeftY  ?uly1 .
                         ?bb1               aida:boundingBoxLowerRightX ?lrx1 .
                         ?bb1               aida:boundingBoxLowerRightY ?lry1
                  }
                  OPTIONAL {
                         ?inf_justification a                           aida:KeyFrameVideoJustification .
                         ?inf_justification aida:keyFrame               ?kfid .
                         ?inf_justification aida:boundingBox            ?bb2  .
                         ?bb2               aida:boundingBoxUpperLeftX  ?ulx2 .
                         ?bb2               aida:boundingBoxUpperLeftY  ?uly2 .
                         ?bb2               aida:boundingBoxLowerRightX ?lrx2 .
                         ?bb2               aida:boundingBoxLowerRightY ?lry2
                  }
                  OPTIONAL {
                         ?inf_justification a                           aida:ShotVideoJustification .
                         ?inf_justification aida:shot                   ?sid
                  }
                  OPTIONAL {
                         ?inf_justification a                           aida:AudioJustification .
                         ?inf_justification aida:startTimestamp         ?st .
                         ?inf_justification aida:endTimestamp           ?et
                  }
              
                  BIND( IF( BOUND(?sid), ?sid, "__NULL__") AS ?_sid) .
                  BIND( IF( BOUND(?kfid), ?kfid, "__NULL__") AS ?_kfid) .
                  BIND( IF( BOUND(?so), ?so, "__NULL__") AS ?_so) .
                  BIND( IF( BOUND(?eo), ?eo, "__NULL__") AS ?_eo) .
                  BIND( IF( BOUND(?st), ?st, "__NULL__") AS ?_st) .
                  BIND( IF( BOUND(?et), ?et, "__NULL__") AS ?_et) .
                  BIND( COALESCE(?ulx1, ?ulx2, "__NULL__") AS ?_ulx) .
                  BIND( COALESCE(?uly1, ?uly2, "__NULL__") AS ?_uly) .
                  BIND( COALESCE(?lrx1, ?lrx2, "__NULL__") AS ?_lrx) .
                  BIND( COALESCE(?lry1, ?lry2, "__NULL__") AS ?_lry) .
              
                  BIND( cfn:getSpan(str(?docid), str(?doceid), str(?_sid), str(?_kfid), str(?_so), str(?_eo), str(?_ulx), str(?_uly), str(?_lrx), str(?_lry), str(?_st), str(?_et) ) AS ?infj_span ) .
              }
	]]>
     </sparql>
  </zerohop_query>
  <zerohop_query id="AIDA_TA2_ZH_2019_0016">
    <reference_kbid> LDC2019E43:80000116 </reference_kbid>
    <sparql>
 	<![CDATA[
              PREFIX ldcOnt: <https://tac.nist.gov/tracks/SM-KBP/2019/ontologies/LDCOntology#>
              PREFIX rdf:   <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
              PREFIX aida:  <https://tac.nist.gov/tracks/SM-KBP/2019/ontologies/InterchangeOntology#>
              PREFIX cfn:   <https://verdi.nextcentury.com/custom-function/>
              PREFIX xsd:   <http://www.w3.org/2001/XMLSchema#>
              
              # Query: AIDA_TA2_ZH_2019_0016
              # Query description: Find all informative mentions of entities linked to "LDC2019E43:80000116"
              # NIST default aggregate confidence of ?cluster is a function of
              #      ?link_cv      # confidenceValue of asserting that ?cluster is the same as reference KB node ?link_target
              #      ?j_cv         # confidenceValue of informativeJustification
              
              # ?j_cv is used to rank informative mentions within a cluster for purposes of pooling and AP scoring.
              
              # In M18, we use the ?j_cv (confidence in the justification, e.g., confidence of _:b02) and interpret that confidence
              # as the confidence of linking the justification to the cluster; _:b02 is used *only* to represent an informative
              # mention for some cluster, even though that cluster is not referenced in _:b02. Ideally (in future), there would be
              # an aida:InformativeJustificationAssertion construct (paralleling the structure of an aida:LinkAssertion) that
              # associates a confidence to each aida:informativeJustification, and could represent the confidence of linking an
              # InformativeJustification to a cluster.
              
              # _:b12 a                        aida:TextJustification ;
              #      aida:confidence          [ a                     aida:Confidence ;
              #                                 aida:confidenceValue  "1.0"^^<http://www.w3.org/2001/XMLSchema#double> ;
              #                                 aida:system           ldc:testSystem
              #                               ] ;
              #      aida:endOffsetInclusive  "286"^^<http://www.w3.org/2001/XMLSchema#int> ;
              #      aida:privateData         [ a                 aida:PrivateData ;
              #                                 aida:jsonContent  "{\"mention\":\"M000721\"}" ;
              #                                 aida:system       ldc:testSystem
              #                               ] ;
              #      aida:source              "DE005" ;
              #      aida:sourceDocument      "D0100" ;
              #      aida:startOffset         "260"^^<http://www.w3.org/2001/XMLSchema#int> ;
              #      aida:system              ldc:testSystem .
              #
              # _:b11 a              aida:LinkAssertion ;
              #      aida:confidence [ a                     aida:Confidence ;
              #                        aida:confidenceValue  "0.498"^^xsd:double ;
              #                        aida:system           ldc:testSystem
              #                      ] ;
              #      aida:linkTarget "ldc:E0137" ;
              #      aida:system     ldc:testSystem .
              #
              # _:c12 a               aida:InformativeJustificationAssertion ;
              #       aida:confidence [ a                     aida:Confidence ;
              #                         aida:confidenceValue  "0.498"^^xsd:double ;
              #                         aida:system           ldc:testSystem
              #                       ] ;
              #      aida:informativeJustification _:b12 ;
              #      aida:system     ldc:testSystem .
              #
              # ldc:cluster-E0137     a                             aida:SameAsCluster ;
              #                       aida:informativeJustification _:c12 ;
              #                       aida:link                     _:b11 ;
              #                       aida:system                   ldc:testSystem .
              
              
              SELECT DISTINCT
                     ?docid             # sourceDocument
                     ?query_link_target # link target as part of the query
                     ?link_target       # link target in the KB matching ?query_link_target
                     ?cluster           # the ?cluster linked to ?link_target
                     ?infj_span         # informativeJustification span taken from the ?cluster
                     ?j_cv              # confidenceValue of informativeJustification
                     ?link_target       # query reference KB node linked to a ?cluster
                     ?link_cv           # confidenceValue of asserting that ?cluster is the same as reference KB node ?link_target
              
              WHERE {
                  BIND ("LDC2019E43:80000116" AS ?query_link_target)
              
                  # Find ?cluster linked to "LDC2019E43:80000116"
                  # Find the ?link_cv: confidenceValue of linking to external KB entity
                  ?cluster              a                             aida:SameAsCluster .
                  ?cluster              aida:informativeJustification ?inf_justification .
                  ?cluster              aida:link                     ?ref_kb_link .
                  ?ref_kb_link          a                             aida:LinkAssertion .
                  ?ref_kb_link          aida:linkTarget               ?link_target .
                  ?ref_kb_link          aida:confidence               ?link_confidence .
                  ?link_confidence      aida:confidenceValue          ?link_cv .
                  
                  FILTER(cfn:memberOf(str(?link_target), str(?query_link_target))) .
              
                  # Find mention spans for ?inf_justification
                  ?inf_justification    aida:source          ?doceid .
                  ?inf_justification    aida:sourceDocument  ?docid .
                  ?inf_justification    aida:confidence      ?j_confidence .
                  ?j_confidence         aida:confidenceValue ?j_cv .
              
                  OPTIONAL {
                         ?inf_justification a                           aida:TextJustification .
                         ?inf_justification aida:startOffset            ?so .
                         ?inf_justification aida:endOffsetInclusive     ?eo
                  }
                  OPTIONAL {
                         ?inf_justification a                           aida:ImageJustification .
                         ?inf_justification aida:boundingBox            ?bb1  .
                         ?bb1               aida:boundingBoxUpperLeftX  ?ulx1 .
                         ?bb1               aida:boundingBoxUpperLeftY  ?uly1 .
                         ?bb1               aida:boundingBoxLowerRightX ?lrx1 .
                         ?bb1               aida:boundingBoxLowerRightY ?lry1
                  }
                  OPTIONAL {
                         ?inf_justification a                           aida:KeyFrameVideoJustification .
                         ?inf_justification aida:keyFrame               ?kfid .
                         ?inf_justification aida:boundingBox            ?bb2  .
                         ?bb2               aida:boundingBoxUpperLeftX  ?ulx2 .
                         ?bb2               aida:boundingBoxUpperLeftY  ?uly2 .
                         ?bb2               aida:boundingBoxLowerRightX ?lrx2 .
                         ?bb2               aida:boundingBoxLowerRightY ?lry2
                  }
                  OPTIONAL {
                         ?inf_justification a                           aida:ShotVideoJustification .
                         ?inf_justification aida:shot                   ?sid
                  }
                  OPTIONAL {
                         ?inf_justification a                           aida:AudioJustification .
                         ?inf_justification aida:startTimestamp         ?st .
                         ?inf_justification aida:endTimestamp           ?et
                  }
              
                  BIND( IF( BOUND(?sid), ?sid, "__NULL__") AS ?_sid) .
                  BIND( IF( BOUND(?kfid), ?kfid, "__NULL__") AS ?_kfid) .
                  BIND( IF( BOUND(?so), ?so, "__NULL__") AS ?_so) .
                  BIND( IF( BOUND(?eo), ?eo, "__NULL__") AS ?_eo) .
                  BIND( IF( BOUND(?st), ?st, "__NULL__") AS ?_st) .
                  BIND( IF( BOUND(?et), ?et, "__NULL__") AS ?_et) .
                  BIND( COALESCE(?ulx1, ?ulx2, "__NULL__") AS ?_ulx) .
                  BIND( COALESCE(?uly1, ?uly2, "__NULL__") AS ?_uly) .
                  BIND( COALESCE(?lrx1, ?lrx2, "__NULL__") AS ?_lrx) .
                  BIND( COALESCE(?lry1, ?lry2, "__NULL__") AS ?_lry) .
              
                  BIND( cfn:getSpan(str(?docid), str(?doceid), str(?_sid), str(?_kfid), str(?_so), str(?_eo), str(?_ulx), str(?_uly), str(?_lrx), str(?_lry), str(?_st), str(?_et) ) AS ?infj_span ) .
              }
	]]>
     </sparql>
  </zerohop_query>
  <zerohop_query id="AIDA_TA2_ZH_2019_0017">
    <reference_kbid> LDC2019E43:80000112 </reference_kbid>
    <sparql>
 	<![CDATA[
              PREFIX ldcOnt: <https://tac.nist.gov/tracks/SM-KBP/2019/ontologies/LDCOntology#>
              PREFIX rdf:   <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
              PREFIX aida:  <https://tac.nist.gov/tracks/SM-KBP/2019/ontologies/InterchangeOntology#>
              PREFIX cfn:   <https://verdi.nextcentury.com/custom-function/>
              PREFIX xsd:   <http://www.w3.org/2001/XMLSchema#>
              
              # Query: AIDA_TA2_ZH_2019_0017
              # Query description: Find all informative mentions of entities linked to "LDC2019E43:80000112"
              # NIST default aggregate confidence of ?cluster is a function of
              #      ?link_cv      # confidenceValue of asserting that ?cluster is the same as reference KB node ?link_target
              #      ?j_cv         # confidenceValue of informativeJustification
              
              # ?j_cv is used to rank informative mentions within a cluster for purposes of pooling and AP scoring.
              
              # In M18, we use the ?j_cv (confidence in the justification, e.g., confidence of _:b02) and interpret that confidence
              # as the confidence of linking the justification to the cluster; _:b02 is used *only* to represent an informative
              # mention for some cluster, even though that cluster is not referenced in _:b02. Ideally (in future), there would be
              # an aida:InformativeJustificationAssertion construct (paralleling the structure of an aida:LinkAssertion) that
              # associates a confidence to each aida:informativeJustification, and could represent the confidence of linking an
              # InformativeJustification to a cluster.
              
              # _:b12 a                        aida:TextJustification ;
              #      aida:confidence          [ a                     aida:Confidence ;
              #                                 aida:confidenceValue  "1.0"^^<http://www.w3.org/2001/XMLSchema#double> ;
              #                                 aida:system           ldc:testSystem
              #                               ] ;
              #      aida:endOffsetInclusive  "286"^^<http://www.w3.org/2001/XMLSchema#int> ;
              #      aida:privateData         [ a                 aida:PrivateData ;
              #                                 aida:jsonContent  "{\"mention\":\"M000721\"}" ;
              #                                 aida:system       ldc:testSystem
              #                               ] ;
              #      aida:source              "DE005" ;
              #      aida:sourceDocument      "D0100" ;
              #      aida:startOffset         "260"^^<http://www.w3.org/2001/XMLSchema#int> ;
              #      aida:system              ldc:testSystem .
              #
              # _:b11 a              aida:LinkAssertion ;
              #      aida:confidence [ a                     aida:Confidence ;
              #                        aida:confidenceValue  "0.498"^^xsd:double ;
              #                        aida:system           ldc:testSystem
              #                      ] ;
              #      aida:linkTarget "ldc:E0137" ;
              #      aida:system     ldc:testSystem .
              #
              # _:c12 a               aida:InformativeJustificationAssertion ;
              #       aida:confidence [ a                     aida:Confidence ;
              #                         aida:confidenceValue  "0.498"^^xsd:double ;
              #                         aida:system           ldc:testSystem
              #                       ] ;
              #      aida:informativeJustification _:b12 ;
              #      aida:system     ldc:testSystem .
              #
              # ldc:cluster-E0137     a                             aida:SameAsCluster ;
              #                       aida:informativeJustification _:c12 ;
              #                       aida:link                     _:b11 ;
              #                       aida:system                   ldc:testSystem .
              
              
              SELECT DISTINCT
                     ?docid             # sourceDocument
                     ?query_link_target # link target as part of the query
                     ?link_target       # link target in the KB matching ?query_link_target
                     ?cluster           # the ?cluster linked to ?link_target
                     ?infj_span         # informativeJustification span taken from the ?cluster
                     ?j_cv              # confidenceValue of informativeJustification
                     ?link_target       # query reference KB node linked to a ?cluster
                     ?link_cv           # confidenceValue of asserting that ?cluster is the same as reference KB node ?link_target
              
              WHERE {
                  BIND ("LDC2019E43:80000112" AS ?query_link_target)
              
                  # Find ?cluster linked to "LDC2019E43:80000112"
                  # Find the ?link_cv: confidenceValue of linking to external KB entity
                  ?cluster              a                             aida:SameAsCluster .
                  ?cluster              aida:informativeJustification ?inf_justification .
                  ?cluster              aida:link                     ?ref_kb_link .
                  ?ref_kb_link          a                             aida:LinkAssertion .
                  ?ref_kb_link          aida:linkTarget               ?link_target .
                  ?ref_kb_link          aida:confidence               ?link_confidence .
                  ?link_confidence      aida:confidenceValue          ?link_cv .
                  
                  FILTER(cfn:memberOf(str(?link_target), str(?query_link_target))) .
              
                  # Find mention spans for ?inf_justification
                  ?inf_justification    aida:source          ?doceid .
                  ?inf_justification    aida:sourceDocument  ?docid .
                  ?inf_justification    aida:confidence      ?j_confidence .
                  ?j_confidence         aida:confidenceValue ?j_cv .
              
                  OPTIONAL {
                         ?inf_justification a                           aida:TextJustification .
                         ?inf_justification aida:startOffset            ?so .
                         ?inf_justification aida:endOffsetInclusive     ?eo
                  }
                  OPTIONAL {
                         ?inf_justification a                           aida:ImageJustification .
                         ?inf_justification aida:boundingBox            ?bb1  .
                         ?bb1               aida:boundingBoxUpperLeftX  ?ulx1 .
                         ?bb1               aida:boundingBoxUpperLeftY  ?uly1 .
                         ?bb1               aida:boundingBoxLowerRightX ?lrx1 .
                         ?bb1               aida:boundingBoxLowerRightY ?lry1
                  }
                  OPTIONAL {
                         ?inf_justification a                           aida:KeyFrameVideoJustification .
                         ?inf_justification aida:keyFrame               ?kfid .
                         ?inf_justification aida:boundingBox            ?bb2  .
                         ?bb2               aida:boundingBoxUpperLeftX  ?ulx2 .
                         ?bb2               aida:boundingBoxUpperLeftY  ?uly2 .
                         ?bb2               aida:boundingBoxLowerRightX ?lrx2 .
                         ?bb2               aida:boundingBoxLowerRightY ?lry2
                  }
                  OPTIONAL {
                         ?inf_justification a                           aida:ShotVideoJustification .
                         ?inf_justification aida:shot                   ?sid
                  }
                  OPTIONAL {
                         ?inf_justification a                           aida:AudioJustification .
                         ?inf_justification aida:startTimestamp         ?st .
                         ?inf_justification aida:endTimestamp           ?et
                  }
              
                  BIND( IF( BOUND(?sid), ?sid, "__NULL__") AS ?_sid) .
                  BIND( IF( BOUND(?kfid), ?kfid, "__NULL__") AS ?_kfid) .
                  BIND( IF( BOUND(?so), ?so, "__NULL__") AS ?_so) .
                  BIND( IF( BOUND(?eo), ?eo, "__NULL__") AS ?_eo) .
                  BIND( IF( BOUND(?st), ?st, "__NULL__") AS ?_st) .
                  BIND( IF( BOUND(?et), ?et, "__NULL__") AS ?_et) .
                  BIND( COALESCE(?ulx1, ?ulx2, "__NULL__") AS ?_ulx) .
                  BIND( COALESCE(?uly1, ?uly2, "__NULL__") AS ?_uly) .
                  BIND( COALESCE(?lrx1, ?lrx2, "__NULL__") AS ?_lrx) .
                  BIND( COALESCE(?lry1, ?lry2, "__NULL__") AS ?_lry) .
              
                  BIND( cfn:getSpan(str(?docid), str(?doceid), str(?_sid), str(?_kfid), str(?_so), str(?_eo), str(?_ulx), str(?_uly), str(?_lrx), str(?_lry), str(?_st), str(?_et) ) AS ?infj_span ) .
              }
	]]>
     </sparql>
  </zerohop_query>
  <zerohop_query id="AIDA_TA2_ZH_2019_0018">
    <reference_kbid> LDC2019E43:80000114 </reference_kbid>
    <sparql>
 	<![CDATA[
              PREFIX ldcOnt: <https://tac.nist.gov/tracks/SM-KBP/2019/ontologies/LDCOntology#>
              PREFIX rdf:   <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
              PREFIX aida:  <https://tac.nist.gov/tracks/SM-KBP/2019/ontologies/InterchangeOntology#>
              PREFIX cfn:   <https://verdi.nextcentury.com/custom-function/>
              PREFIX xsd:   <http://www.w3.org/2001/XMLSchema#>
              
              # Query: AIDA_TA2_ZH_2019_0018
              # Query description: Find all informative mentions of entities linked to "LDC2019E43:80000114"
              # NIST default aggregate confidence of ?cluster is a function of
              #      ?link_cv      # confidenceValue of asserting that ?cluster is the same as reference KB node ?link_target
              #      ?j_cv         # confidenceValue of informativeJustification
              
              # ?j_cv is used to rank informative mentions within a cluster for purposes of pooling and AP scoring.
              
              # In M18, we use the ?j_cv (confidence in the justification, e.g., confidence of _:b02) and interpret that confidence
              # as the confidence of linking the justification to the cluster; _:b02 is used *only* to represent an informative
              # mention for some cluster, even though that cluster is not referenced in _:b02. Ideally (in future), there would be
              # an aida:InformativeJustificationAssertion construct (paralleling the structure of an aida:LinkAssertion) that
              # associates a confidence to each aida:informativeJustification, and could represent the confidence of linking an
              # InformativeJustification to a cluster.
              
              # _:b12 a                        aida:TextJustification ;
              #      aida:confidence          [ a                     aida:Confidence ;
              #                                 aida:confidenceValue  "1.0"^^<http://www.w3.org/2001/XMLSchema#double> ;
              #                                 aida:system           ldc:testSystem
              #                               ] ;
              #      aida:endOffsetInclusive  "286"^^<http://www.w3.org/2001/XMLSchema#int> ;
              #      aida:privateData         [ a                 aida:PrivateData ;
              #                                 aida:jsonContent  "{\"mention\":\"M000721\"}" ;
              #                                 aida:system       ldc:testSystem
              #                               ] ;
              #      aida:source              "DE005" ;
              #      aida:sourceDocument      "D0100" ;
              #      aida:startOffset         "260"^^<http://www.w3.org/2001/XMLSchema#int> ;
              #      aida:system              ldc:testSystem .
              #
              # _:b11 a              aida:LinkAssertion ;
              #      aida:confidence [ a                     aida:Confidence ;
              #                        aida:confidenceValue  "0.498"^^xsd:double ;
              #                        aida:system           ldc:testSystem
              #                      ] ;
              #      aida:linkTarget "ldc:E0137" ;
              #      aida:system     ldc:testSystem .
              #
              # _:c12 a               aida:InformativeJustificationAssertion ;
              #       aida:confidence [ a                     aida:Confidence ;
              #                         aida:confidenceValue  "0.498"^^xsd:double ;
              #                         aida:system           ldc:testSystem
              #                       ] ;
              #      aida:informativeJustification _:b12 ;
              #      aida:system     ldc:testSystem .
              #
              # ldc:cluster-E0137     a                             aida:SameAsCluster ;
              #                       aida:informativeJustification _:c12 ;
              #                       aida:link                     _:b11 ;
              #                       aida:system                   ldc:testSystem .
              
              
              SELECT DISTINCT
                     ?docid             # sourceDocument
                     ?query_link_target # link target as part of the query
                     ?link_target       # link target in the KB matching ?query_link_target
                     ?cluster           # the ?cluster linked to ?link_target
                     ?infj_span         # informativeJustification span taken from the ?cluster
                     ?j_cv              # confidenceValue of informativeJustification
                     ?link_target       # query reference KB node linked to a ?cluster
                     ?link_cv           # confidenceValue of asserting that ?cluster is the same as reference KB node ?link_target
              
              WHERE {
                  BIND ("LDC2019E43:80000114" AS ?query_link_target)
              
                  # Find ?cluster linked to "LDC2019E43:80000114"
                  # Find the ?link_cv: confidenceValue of linking to external KB entity
                  ?cluster              a                             aida:SameAsCluster .
                  ?cluster              aida:informativeJustification ?inf_justification .
                  ?cluster              aida:link                     ?ref_kb_link .
                  ?ref_kb_link          a                             aida:LinkAssertion .
                  ?ref_kb_link          aida:linkTarget               ?link_target .
                  ?ref_kb_link          aida:confidence               ?link_confidence .
                  ?link_confidence      aida:confidenceValue          ?link_cv .
                  
                  FILTER(cfn:memberOf(str(?link_target), str(?query_link_target))) .
              
                  # Find mention spans for ?inf_justification
                  ?inf_justification    aida:source          ?doceid .
                  ?inf_justification    aida:sourceDocument  ?docid .
                  ?inf_justification    aida:confidence      ?j_confidence .
                  ?j_confidence         aida:confidenceValue ?j_cv .
              
                  OPTIONAL {
                         ?inf_justification a                           aida:TextJustification .
                         ?inf_justification aida:startOffset            ?so .
                         ?inf_justification aida:endOffsetInclusive     ?eo
                  }
                  OPTIONAL {
                         ?inf_justification a                           aida:ImageJustification .
                         ?inf_justification aida:boundingBox            ?bb1  .
                         ?bb1               aida:boundingBoxUpperLeftX  ?ulx1 .
                         ?bb1               aida:boundingBoxUpperLeftY  ?uly1 .
                         ?bb1               aida:boundingBoxLowerRightX ?lrx1 .
                         ?bb1               aida:boundingBoxLowerRightY ?lry1
                  }
                  OPTIONAL {
                         ?inf_justification a                           aida:KeyFrameVideoJustification .
                         ?inf_justification aida:keyFrame               ?kfid .
                         ?inf_justification aida:boundingBox            ?bb2  .
                         ?bb2               aida:boundingBoxUpperLeftX  ?ulx2 .
                         ?bb2               aida:boundingBoxUpperLeftY  ?uly2 .
                         ?bb2               aida:boundingBoxLowerRightX ?lrx2 .
                         ?bb2               aida:boundingBoxLowerRightY ?lry2
                  }
                  OPTIONAL {
                         ?inf_justification a                           aida:ShotVideoJustification .
                         ?inf_justification aida:shot                   ?sid
                  }
                  OPTIONAL {
                         ?inf_justification a                           aida:AudioJustification .
                         ?inf_justification aida:startTimestamp         ?st .
                         ?inf_justification aida:endTimestamp           ?et
                  }
              
                  BIND( IF( BOUND(?sid), ?sid, "__NULL__") AS ?_sid) .
                  BIND( IF( BOUND(?kfid), ?kfid, "__NULL__") AS ?_kfid) .
                  BIND( IF( BOUND(?so), ?so, "__NULL__") AS ?_so) .
                  BIND( IF( BOUND(?eo), ?eo, "__NULL__") AS ?_eo) .
                  BIND( IF( BOUND(?st), ?st, "__NULL__") AS ?_st) .
                  BIND( IF( BOUND(?et), ?et, "__NULL__") AS ?_et) .
                  BIND( COALESCE(?ulx1, ?ulx2, "__NULL__") AS ?_ulx) .
                  BIND( COALESCE(?uly1, ?uly2, "__NULL__") AS ?_uly) .
                  BIND( COALESCE(?lrx1, ?lrx2, "__NULL__") AS ?_lrx) .
                  BIND( COALESCE(?lry1, ?lry2, "__NULL__") AS ?_lry) .
              
                  BIND( cfn:getSpan(str(?docid), str(?doceid), str(?_sid), str(?_kfid), str(?_so), str(?_eo), str(?_ulx), str(?_uly), str(?_lrx), str(?_lry), str(?_st), str(?_et) ) AS ?infj_span ) .
              }
	]]>
     </sparql>
  </zerohop_query>
  <zerohop_query id="AIDA_TA2_ZH_2019_0019">
    <reference_kbid> LDC2019E43:80000109 </reference_kbid>
    <sparql>
 	<![CDATA[
              PREFIX ldcOnt: <https://tac.nist.gov/tracks/SM-KBP/2019/ontologies/LDCOntology#>
              PREFIX rdf:   <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
              PREFIX aida:  <https://tac.nist.gov/tracks/SM-KBP/2019/ontologies/InterchangeOntology#>
              PREFIX cfn:   <https://verdi.nextcentury.com/custom-function/>
              PREFIX xsd:   <http://www.w3.org/2001/XMLSchema#>
              
              # Query: AIDA_TA2_ZH_2019_0019
              # Query description: Find all informative mentions of entities linked to "LDC2019E43:80000109"
              # NIST default aggregate confidence of ?cluster is a function of
              #      ?link_cv      # confidenceValue of asserting that ?cluster is the same as reference KB node ?link_target
              #      ?j_cv         # confidenceValue of informativeJustification
              
              # ?j_cv is used to rank informative mentions within a cluster for purposes of pooling and AP scoring.
              
              # In M18, we use the ?j_cv (confidence in the justification, e.g., confidence of _:b02) and interpret that confidence
              # as the confidence of linking the justification to the cluster; _:b02 is used *only* to represent an informative
              # mention for some cluster, even though that cluster is not referenced in _:b02. Ideally (in future), there would be
              # an aida:InformativeJustificationAssertion construct (paralleling the structure of an aida:LinkAssertion) that
              # associates a confidence to each aida:informativeJustification, and could represent the confidence of linking an
              # InformativeJustification to a cluster.
              
              # _:b12 a                        aida:TextJustification ;
              #      aida:confidence          [ a                     aida:Confidence ;
              #                                 aida:confidenceValue  "1.0"^^<http://www.w3.org/2001/XMLSchema#double> ;
              #                                 aida:system           ldc:testSystem
              #                               ] ;
              #      aida:endOffsetInclusive  "286"^^<http://www.w3.org/2001/XMLSchema#int> ;
              #      aida:privateData         [ a                 aida:PrivateData ;
              #                                 aida:jsonContent  "{\"mention\":\"M000721\"}" ;
              #                                 aida:system       ldc:testSystem
              #                               ] ;
              #      aida:source              "DE005" ;
              #      aida:sourceDocument      "D0100" ;
              #      aida:startOffset         "260"^^<http://www.w3.org/2001/XMLSchema#int> ;
              #      aida:system              ldc:testSystem .
              #
              # _:b11 a              aida:LinkAssertion ;
              #      aida:confidence [ a                     aida:Confidence ;
              #                        aida:confidenceValue  "0.498"^^xsd:double ;
              #                        aida:system           ldc:testSystem
              #                      ] ;
              #      aida:linkTarget "ldc:E0137" ;
              #      aida:system     ldc:testSystem .
              #
              # _:c12 a               aida:InformativeJustificationAssertion ;
              #       aida:confidence [ a                     aida:Confidence ;
              #                         aida:confidenceValue  "0.498"^^xsd:double ;
              #                         aida:system           ldc:testSystem
              #                       ] ;
              #      aida:informativeJustification _:b12 ;
              #      aida:system     ldc:testSystem .
              #
              # ldc:cluster-E0137     a                             aida:SameAsCluster ;
              #                       aida:informativeJustification _:c12 ;
              #                       aida:link                     _:b11 ;
              #                       aida:system                   ldc:testSystem .
              
              
              SELECT DISTINCT
                     ?docid             # sourceDocument
                     ?query_link_target # link target as part of the query
                     ?link_target       # link target in the KB matching ?query_link_target
                     ?cluster           # the ?cluster linked to ?link_target
                     ?infj_span         # informativeJustification span taken from the ?cluster
                     ?j_cv              # confidenceValue of informativeJustification
                     ?link_target       # query reference KB node linked to a ?cluster
                     ?link_cv           # confidenceValue of asserting that ?cluster is the same as reference KB node ?link_target
              
              WHERE {
                  BIND ("LDC2019E43:80000109" AS ?query_link_target)
              
                  # Find ?cluster linked to "LDC2019E43:80000109"
                  # Find the ?link_cv: confidenceValue of linking to external KB entity
                  ?cluster              a                             aida:SameAsCluster .
                  ?cluster              aida:informativeJustification ?inf_justification .
                  ?cluster              aida:link                     ?ref_kb_link .
                  ?ref_kb_link          a                             aida:LinkAssertion .
                  ?ref_kb_link          aida:linkTarget               ?link_target .
                  ?ref_kb_link          aida:confidence               ?link_confidence .
                  ?link_confidence      aida:confidenceValue          ?link_cv .
                  
                  FILTER(cfn:memberOf(str(?link_target), str(?query_link_target))) .
              
                  # Find mention spans for ?inf_justification
                  ?inf_justification    aida:source          ?doceid .
                  ?inf_justification    aida:sourceDocument  ?docid .
                  ?inf_justification    aida:confidence      ?j_confidence .
                  ?j_confidence         aida:confidenceValue ?j_cv .
              
                  OPTIONAL {
                         ?inf_justification a                           aida:TextJustification .
                         ?inf_justification aida:startOffset            ?so .
                         ?inf_justification aida:endOffsetInclusive     ?eo
                  }
                  OPTIONAL {
                         ?inf_justification a                           aida:ImageJustification .
                         ?inf_justification aida:boundingBox            ?bb1  .
                         ?bb1               aida:boundingBoxUpperLeftX  ?ulx1 .
                         ?bb1               aida:boundingBoxUpperLeftY  ?uly1 .
                         ?bb1               aida:boundingBoxLowerRightX ?lrx1 .
                         ?bb1               aida:boundingBoxLowerRightY ?lry1
                  }
                  OPTIONAL {
                         ?inf_justification a                           aida:KeyFrameVideoJustification .
                         ?inf_justification aida:keyFrame               ?kfid .
                         ?inf_justification aida:boundingBox            ?bb2  .
                         ?bb2               aida:boundingBoxUpperLeftX  ?ulx2 .
                         ?bb2               aida:boundingBoxUpperLeftY  ?uly2 .
                         ?bb2               aida:boundingBoxLowerRightX ?lrx2 .
                         ?bb2               aida:boundingBoxLowerRightY ?lry2
                  }
                  OPTIONAL {
                         ?inf_justification a                           aida:ShotVideoJustification .
                         ?inf_justification aida:shot                   ?sid
                  }
                  OPTIONAL {
                         ?inf_justification a                           aida:AudioJustification .
                         ?inf_justification aida:startTimestamp         ?st .
                         ?inf_justification aida:endTimestamp           ?et
                  }
              
                  BIND( IF( BOUND(?sid), ?sid, "__NULL__") AS ?_sid) .
                  BIND( IF( BOUND(?kfid), ?kfid, "__NULL__") AS ?_kfid) .
                  BIND( IF( BOUND(?so), ?so, "__NULL__") AS ?_so) .
                  BIND( IF( BOUND(?eo), ?eo, "__NULL__") AS ?_eo) .
                  BIND( IF( BOUND(?st), ?st, "__NULL__") AS ?_st) .
                  BIND( IF( BOUND(?et), ?et, "__NULL__") AS ?_et) .
                  BIND( COALESCE(?ulx1, ?ulx2, "__NULL__") AS ?_ulx) .
                  BIND( COALESCE(?uly1, ?uly2, "__NULL__") AS ?_uly) .
                  BIND( COALESCE(?lrx1, ?lrx2, "__NULL__") AS ?_lrx) .
                  BIND( COALESCE(?lry1, ?lry2, "__NULL__") AS ?_lry) .
              
                  BIND( cfn:getSpan(str(?docid), str(?doceid), str(?_sid), str(?_kfid), str(?_so), str(?_eo), str(?_ulx), str(?_uly), str(?_lrx), str(?_lry), str(?_st), str(?_et) ) AS ?infj_span ) .
              }
	]]>
     </sparql>
  </zerohop_query>
  <zerohop_query id="AIDA_TA2_ZH_2019_0020">
    <reference_kbid> LDC2019E43:80000110 </reference_kbid>
    <sparql>
 	<![CDATA[
              PREFIX ldcOnt: <https://tac.nist.gov/tracks/SM-KBP/2019/ontologies/LDCOntology#>
              PREFIX rdf:   <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
              PREFIX aida:  <https://tac.nist.gov/tracks/SM-KBP/2019/ontologies/InterchangeOntology#>
              PREFIX cfn:   <https://verdi.nextcentury.com/custom-function/>
              PREFIX xsd:   <http://www.w3.org/2001/XMLSchema#>
              
              # Query: AIDA_TA2_ZH_2019_0020
              # Query description: Find all informative mentions of entities linked to "LDC2019E43:80000110"
              # NIST default aggregate confidence of ?cluster is a function of
              #      ?link_cv      # confidenceValue of asserting that ?cluster is the same as reference KB node ?link_target
              #      ?j_cv         # confidenceValue of informativeJustification
              
              # ?j_cv is used to rank informative mentions within a cluster for purposes of pooling and AP scoring.
              
              # In M18, we use the ?j_cv (confidence in the justification, e.g., confidence of _:b02) and interpret that confidence
              # as the confidence of linking the justification to the cluster; _:b02 is used *only* to represent an informative
              # mention for some cluster, even though that cluster is not referenced in _:b02. Ideally (in future), there would be
              # an aida:InformativeJustificationAssertion construct (paralleling the structure of an aida:LinkAssertion) that
              # associates a confidence to each aida:informativeJustification, and could represent the confidence of linking an
              # InformativeJustification to a cluster.
              
              # _:b12 a                        aida:TextJustification ;
              #      aida:confidence          [ a                     aida:Confidence ;
              #                                 aida:confidenceValue  "1.0"^^<http://www.w3.org/2001/XMLSchema#double> ;
              #                                 aida:system           ldc:testSystem
              #                               ] ;
              #      aida:endOffsetInclusive  "286"^^<http://www.w3.org/2001/XMLSchema#int> ;
              #      aida:privateData         [ a                 aida:PrivateData ;
              #                                 aida:jsonContent  "{\"mention\":\"M000721\"}" ;
              #                                 aida:system       ldc:testSystem
              #                               ] ;
              #      aida:source              "DE005" ;
              #      aida:sourceDocument      "D0100" ;
              #      aida:startOffset         "260"^^<http://www.w3.org/2001/XMLSchema#int> ;
              #      aida:system              ldc:testSystem .
              #
              # _:b11 a              aida:LinkAssertion ;
              #      aida:confidence [ a                     aida:Confidence ;
              #                        aida:confidenceValue  "0.498"^^xsd:double ;
              #                        aida:system           ldc:testSystem
              #                      ] ;
              #      aida:linkTarget "ldc:E0137" ;
              #      aida:system     ldc:testSystem .
              #
              # _:c12 a               aida:InformativeJustificationAssertion ;
              #       aida:confidence [ a                     aida:Confidence ;
              #                         aida:confidenceValue  "0.498"^^xsd:double ;
              #                         aida:system           ldc:testSystem
              #                       ] ;
              #      aida:informativeJustification _:b12 ;
              #      aida:system     ldc:testSystem .
              #
              # ldc:cluster-E0137     a                             aida:SameAsCluster ;
              #                       aida:informativeJustification _:c12 ;
              #                       aida:link                     _:b11 ;
              #                       aida:system                   ldc:testSystem .
              
              
              SELECT DISTINCT
                     ?docid             # sourceDocument
                     ?query_link_target # link target as part of the query
                     ?link_target       # link target in the KB matching ?query_link_target
                     ?cluster           # the ?cluster linked to ?link_target
                     ?infj_span         # informativeJustification span taken from the ?cluster
                     ?j_cv              # confidenceValue of informativeJustification
                     ?link_target       # query reference KB node linked to a ?cluster
                     ?link_cv           # confidenceValue of asserting that ?cluster is the same as reference KB node ?link_target
              
              WHERE {
                  BIND ("LDC2019E43:80000110" AS ?query_link_target)
              
                  # Find ?cluster linked to "LDC2019E43:80000110"
                  # Find the ?link_cv: confidenceValue of linking to external KB entity
                  ?cluster              a                             aida:SameAsCluster .
                  ?cluster              aida:informativeJustification ?inf_justification .
                  ?cluster              aida:link                     ?ref_kb_link .
                  ?ref_kb_link          a                             aida:LinkAssertion .
                  ?ref_kb_link          aida:linkTarget               ?link_target .
                  ?ref_kb_link          aida:confidence               ?link_confidence .
                  ?link_confidence      aida:confidenceValue          ?link_cv .
                  
                  FILTER(cfn:memberOf(str(?link_target), str(?query_link_target))) .
              
                  # Find mention spans for ?inf_justification
                  ?inf_justification    aida:source          ?doceid .
                  ?inf_justification    aida:sourceDocument  ?docid .
                  ?inf_justification    aida:confidence      ?j_confidence .
                  ?j_confidence         aida:confidenceValue ?j_cv .
              
                  OPTIONAL {
                         ?inf_justification a                           aida:TextJustification .
                         ?inf_justification aida:startOffset            ?so .
                         ?inf_justification aida:endOffsetInclusive     ?eo
                  }
                  OPTIONAL {
                         ?inf_justification a                           aida:ImageJustification .
                         ?inf_justification aida:boundingBox            ?bb1  .
                         ?bb1               aida:boundingBoxUpperLeftX  ?ulx1 .
                         ?bb1               aida:boundingBoxUpperLeftY  ?uly1 .
                         ?bb1               aida:boundingBoxLowerRightX ?lrx1 .
                         ?bb1               aida:boundingBoxLowerRightY ?lry1
                  }
                  OPTIONAL {
                         ?inf_justification a                           aida:KeyFrameVideoJustification .
                         ?inf_justification aida:keyFrame               ?kfid .
                         ?inf_justification aida:boundingBox            ?bb2  .
                         ?bb2               aida:boundingBoxUpperLeftX  ?ulx2 .
                         ?bb2               aida:boundingBoxUpperLeftY  ?uly2 .
                         ?bb2               aida:boundingBoxLowerRightX ?lrx2 .
                         ?bb2               aida:boundingBoxLowerRightY ?lry2
                  }
                  OPTIONAL {
                         ?inf_justification a                           aida:ShotVideoJustification .
                         ?inf_justification aida:shot                   ?sid
                  }
                  OPTIONAL {
                         ?inf_justification a                           aida:AudioJustification .
                         ?inf_justification aida:startTimestamp         ?st .
                         ?inf_justification aida:endTimestamp           ?et
                  }
              
                  BIND( IF( BOUND(?sid), ?sid, "__NULL__") AS ?_sid) .
                  BIND( IF( BOUND(?kfid), ?kfid, "__NULL__") AS ?_kfid) .
                  BIND( IF( BOUND(?so), ?so, "__NULL__") AS ?_so) .
                  BIND( IF( BOUND(?eo), ?eo, "__NULL__") AS ?_eo) .
                  BIND( IF( BOUND(?st), ?st, "__NULL__") AS ?_st) .
                  BIND( IF( BOUND(?et), ?et, "__NULL__") AS ?_et) .
                  BIND( COALESCE(?ulx1, ?ulx2, "__NULL__") AS ?_ulx) .
                  BIND( COALESCE(?uly1, ?uly2, "__NULL__") AS ?_uly) .
                  BIND( COALESCE(?lrx1, ?lrx2, "__NULL__") AS ?_lrx) .
                  BIND( COALESCE(?lry1, ?lry2, "__NULL__") AS ?_lry) .
              
                  BIND( cfn:getSpan(str(?docid), str(?doceid), str(?_sid), str(?_kfid), str(?_so), str(?_eo), str(?_ulx), str(?_uly), str(?_lrx), str(?_lry), str(?_st), str(?_et) ) AS ?infj_span ) .
              }
	]]>
     </sparql>
  </zerohop_query>
  <zerohop_query id="AIDA_TA2_ZH_2019_0021">
    <reference_kbid> LDC2019E43:80000083 </reference_kbid>
    <sparql>
 	<![CDATA[
              PREFIX ldcOnt: <https://tac.nist.gov/tracks/SM-KBP/2019/ontologies/LDCOntology#>
              PREFIX rdf:   <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
              PREFIX aida:  <https://tac.nist.gov/tracks/SM-KBP/2019/ontologies/InterchangeOntology#>
              PREFIX cfn:   <https://verdi.nextcentury.com/custom-function/>
              PREFIX xsd:   <http://www.w3.org/2001/XMLSchema#>
              
              # Query: AIDA_TA2_ZH_2019_0021
              # Query description: Find all informative mentions of entities linked to "LDC2019E43:80000083"
              # NIST default aggregate confidence of ?cluster is a function of
              #      ?link_cv      # confidenceValue of asserting that ?cluster is the same as reference KB node ?link_target
              #      ?j_cv         # confidenceValue of informativeJustification
              
              # ?j_cv is used to rank informative mentions within a cluster for purposes of pooling and AP scoring.
              
              # In M18, we use the ?j_cv (confidence in the justification, e.g., confidence of _:b02) and interpret that confidence
              # as the confidence of linking the justification to the cluster; _:b02 is used *only* to represent an informative
              # mention for some cluster, even though that cluster is not referenced in _:b02. Ideally (in future), there would be
              # an aida:InformativeJustificationAssertion construct (paralleling the structure of an aida:LinkAssertion) that
              # associates a confidence to each aida:informativeJustification, and could represent the confidence of linking an
              # InformativeJustification to a cluster.
              
              # _:b12 a                        aida:TextJustification ;
              #      aida:confidence          [ a                     aida:Confidence ;
              #                                 aida:confidenceValue  "1.0"^^<http://www.w3.org/2001/XMLSchema#double> ;
              #                                 aida:system           ldc:testSystem
              #                               ] ;
              #      aida:endOffsetInclusive  "286"^^<http://www.w3.org/2001/XMLSchema#int> ;
              #      aida:privateData         [ a                 aida:PrivateData ;
              #                                 aida:jsonContent  "{\"mention\":\"M000721\"}" ;
              #                                 aida:system       ldc:testSystem
              #                               ] ;
              #      aida:source              "DE005" ;
              #      aida:sourceDocument      "D0100" ;
              #      aida:startOffset         "260"^^<http://www.w3.org/2001/XMLSchema#int> ;
              #      aida:system              ldc:testSystem .
              #
              # _:b11 a              aida:LinkAssertion ;
              #      aida:confidence [ a                     aida:Confidence ;
              #                        aida:confidenceValue  "0.498"^^xsd:double ;
              #                        aida:system           ldc:testSystem
              #                      ] ;
              #      aida:linkTarget "ldc:E0137" ;
              #      aida:system     ldc:testSystem .
              #
              # _:c12 a               aida:InformativeJustificationAssertion ;
              #       aida:confidence [ a                     aida:Confidence ;
              #                         aida:confidenceValue  "0.498"^^xsd:double ;
              #                         aida:system           ldc:testSystem
              #                       ] ;
              #      aida:informativeJustification _:b12 ;
              #      aida:system     ldc:testSystem .
              #
              # ldc:cluster-E0137     a                             aida:SameAsCluster ;
              #                       aida:informativeJustification _:c12 ;
              #                       aida:link                     _:b11 ;
              #                       aida:system                   ldc:testSystem .
              
              
              SELECT DISTINCT
                     ?docid             # sourceDocument
                     ?query_link_target # link target as part of the query
                     ?link_target       # link target in the KB matching ?query_link_target
                     ?cluster           # the ?cluster linked to ?link_target
                     ?infj_span         # informativeJustification span taken from the ?cluster
                     ?j_cv              # confidenceValue of informativeJustification
                     ?link_target       # query reference KB node linked to a ?cluster
                     ?link_cv           # confidenceValue of asserting that ?cluster is the same as reference KB node ?link_target
              
              WHERE {
                  BIND ("LDC2019E43:80000083" AS ?query_link_target)
              
                  # Find ?cluster linked to "LDC2019E43:80000083"
                  # Find the ?link_cv: confidenceValue of linking to external KB entity
                  ?cluster              a                             aida:SameAsCluster .
                  ?cluster              aida:informativeJustification ?inf_justification .
                  ?cluster              aida:link                     ?ref_kb_link .
                  ?ref_kb_link          a                             aida:LinkAssertion .
                  ?ref_kb_link          aida:linkTarget               ?link_target .
                  ?ref_kb_link          aida:confidence               ?link_confidence .
                  ?link_confidence      aida:confidenceValue          ?link_cv .
                  
                  FILTER(cfn:memberOf(str(?link_target), str(?query_link_target))) .
              
                  # Find mention spans for ?inf_justification
                  ?inf_justification    aida:source          ?doceid .
                  ?inf_justification    aida:sourceDocument  ?docid .
                  ?inf_justification    aida:confidence      ?j_confidence .
                  ?j_confidence         aida:confidenceValue ?j_cv .
              
                  OPTIONAL {
                         ?inf_justification a                           aida:TextJustification .
                         ?inf_justification aida:startOffset            ?so .
                         ?inf_justification aida:endOffsetInclusive     ?eo
                  }
                  OPTIONAL {
                         ?inf_justification a                           aida:ImageJustification .
                         ?inf_justification aida:boundingBox            ?bb1  .
                         ?bb1               aida:boundingBoxUpperLeftX  ?ulx1 .
                         ?bb1               aida:boundingBoxUpperLeftY  ?uly1 .
                         ?bb1               aida:boundingBoxLowerRightX ?lrx1 .
                         ?bb1               aida:boundingBoxLowerRightY ?lry1
                  }
                  OPTIONAL {
                         ?inf_justification a                           aida:KeyFrameVideoJustification .
                         ?inf_justification aida:keyFrame               ?kfid .
                         ?inf_justification aida:boundingBox            ?bb2  .
                         ?bb2               aida:boundingBoxUpperLeftX  ?ulx2 .
                         ?bb2               aida:boundingBoxUpperLeftY  ?uly2 .
                         ?bb2               aida:boundingBoxLowerRightX ?lrx2 .
                         ?bb2               aida:boundingBoxLowerRightY ?lry2
                  }
                  OPTIONAL {
                         ?inf_justification a                           aida:ShotVideoJustification .
                         ?inf_justification aida:shot                   ?sid
                  }
                  OPTIONAL {
                         ?inf_justification a                           aida:AudioJustification .
                         ?inf_justification aida:startTimestamp         ?st .
                         ?inf_justification aida:endTimestamp           ?et
                  }
              
                  BIND( IF( BOUND(?sid), ?sid, "__NULL__") AS ?_sid) .
                  BIND( IF( BOUND(?kfid), ?kfid, "__NULL__") AS ?_kfid) .
                  BIND( IF( BOUND(?so), ?so, "__NULL__") AS ?_so) .
                  BIND( IF( BOUND(?eo), ?eo, "__NULL__") AS ?_eo) .
                  BIND( IF( BOUND(?st), ?st, "__NULL__") AS ?_st) .
                  BIND( IF( BOUND(?et), ?et, "__NULL__") AS ?_et) .
                  BIND( COALESCE(?ulx1, ?ulx2, "__NULL__") AS ?_ulx) .
                  BIND( COALESCE(?uly1, ?uly2, "__NULL__") AS ?_uly) .
                  BIND( COALESCE(?lrx1, ?lrx2, "__NULL__") AS ?_lrx) .
                  BIND( COALESCE(?lry1, ?lry2, "__NULL__") AS ?_lry) .
              
                  BIND( cfn:getSpan(str(?docid), str(?doceid), str(?_sid), str(?_kfid), str(?_so), str(?_eo), str(?_ulx), str(?_uly), str(?_lrx), str(?_lry), str(?_st), str(?_et) ) AS ?infj_span ) .
              }
	]]>
     </sparql>
  </zerohop_query>
  <zerohop_query id="AIDA_TA2_ZH_2019_0022">
    <reference_kbid> LDC2019E43:80000374 </reference_kbid>
    <sparql>
 	<![CDATA[
              PREFIX ldcOnt: <https://tac.nist.gov/tracks/SM-KBP/2019/ontologies/LDCOntology#>
              PREFIX rdf:   <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
              PREFIX aida:  <https://tac.nist.gov/tracks/SM-KBP/2019/ontologies/InterchangeOntology#>
              PREFIX cfn:   <https://verdi.nextcentury.com/custom-function/>
              PREFIX xsd:   <http://www.w3.org/2001/XMLSchema#>
              
              # Query: AIDA_TA2_ZH_2019_0022
              # Query description: Find all informative mentions of entities linked to "LDC2019E43:80000374"
              # NIST default aggregate confidence of ?cluster is a function of
              #      ?link_cv      # confidenceValue of asserting that ?cluster is the same as reference KB node ?link_target
              #      ?j_cv         # confidenceValue of informativeJustification
              
              # ?j_cv is used to rank informative mentions within a cluster for purposes of pooling and AP scoring.
              
              # In M18, we use the ?j_cv (confidence in the justification, e.g., confidence of _:b02) and interpret that confidence
              # as the confidence of linking the justification to the cluster; _:b02 is used *only* to represent an informative
              # mention for some cluster, even though that cluster is not referenced in _:b02. Ideally (in future), there would be
              # an aida:InformativeJustificationAssertion construct (paralleling the structure of an aida:LinkAssertion) that
              # associates a confidence to each aida:informativeJustification, and could represent the confidence of linking an
              # InformativeJustification to a cluster.
              
              # _:b12 a                        aida:TextJustification ;
              #      aida:confidence          [ a                     aida:Confidence ;
              #                                 aida:confidenceValue  "1.0"^^<http://www.w3.org/2001/XMLSchema#double> ;
              #                                 aida:system           ldc:testSystem
              #                               ] ;
              #      aida:endOffsetInclusive  "286"^^<http://www.w3.org/2001/XMLSchema#int> ;
              #      aida:privateData         [ a                 aida:PrivateData ;
              #                                 aida:jsonContent  "{\"mention\":\"M000721\"}" ;
              #                                 aida:system       ldc:testSystem
              #                               ] ;
              #      aida:source              "DE005" ;
              #      aida:sourceDocument      "D0100" ;
              #      aida:startOffset         "260"^^<http://www.w3.org/2001/XMLSchema#int> ;
              #      aida:system              ldc:testSystem .
              #
              # _:b11 a              aida:LinkAssertion ;
              #      aida:confidence [ a                     aida:Confidence ;
              #                        aida:confidenceValue  "0.498"^^xsd:double ;
              #                        aida:system           ldc:testSystem
              #                      ] ;
              #      aida:linkTarget "ldc:E0137" ;
              #      aida:system     ldc:testSystem .
              #
              # _:c12 a               aida:InformativeJustificationAssertion ;
              #       aida:confidence [ a                     aida:Confidence ;
              #                         aida:confidenceValue  "0.498"^^xsd:double ;
              #                         aida:system           ldc:testSystem
              #                       ] ;
              #      aida:informativeJustification _:b12 ;
              #      aida:system     ldc:testSystem .
              #
              # ldc:cluster-E0137     a                             aida:SameAsCluster ;
              #                       aida:informativeJustification _:c12 ;
              #                       aida:link                     _:b11 ;
              #                       aida:system                   ldc:testSystem .
              
              
              SELECT DISTINCT
                     ?docid             # sourceDocument
                     ?query_link_target # link target as part of the query
                     ?link_target       # link target in the KB matching ?query_link_target
                     ?cluster           # the ?cluster linked to ?link_target
                     ?infj_span         # informativeJustification span taken from the ?cluster
                     ?j_cv              # confidenceValue of informativeJustification
                     ?link_target       # query reference KB node linked to a ?cluster
                     ?link_cv           # confidenceValue of asserting that ?cluster is the same as reference KB node ?link_target
              
              WHERE {
                  BIND ("LDC2019E43:80000374" AS ?query_link_target)
              
                  # Find ?cluster linked to "LDC2019E43:80000374"
                  # Find the ?link_cv: confidenceValue of linking to external KB entity
                  ?cluster              a                             aida:SameAsCluster .
                  ?cluster              aida:informativeJustification ?inf_justification .
                  ?cluster              aida:link                     ?ref_kb_link .
                  ?ref_kb_link          a                             aida:LinkAssertion .
                  ?ref_kb_link          aida:linkTarget               ?link_target .
                  ?ref_kb_link          aida:confidence               ?link_confidence .
                  ?link_confidence      aida:confidenceValue          ?link_cv .
                  
                  FILTER(cfn:memberOf(str(?link_target), str(?query_link_target))) .
              
                  # Find mention spans for ?inf_justification
                  ?inf_justification    aida:source          ?doceid .
                  ?inf_justification    aida:sourceDocument  ?docid .
                  ?inf_justification    aida:confidence      ?j_confidence .
                  ?j_confidence         aida:confidenceValue ?j_cv .
              
                  OPTIONAL {
                         ?inf_justification a                           aida:TextJustification .
                         ?inf_justification aida:startOffset            ?so .
                         ?inf_justification aida:endOffsetInclusive     ?eo
                  }
                  OPTIONAL {
                         ?inf_justification a                           aida:ImageJustification .
                         ?inf_justification aida:boundingBox            ?bb1  .
                         ?bb1               aida:boundingBoxUpperLeftX  ?ulx1 .
                         ?bb1               aida:boundingBoxUpperLeftY  ?uly1 .
                         ?bb1               aida:boundingBoxLowerRightX ?lrx1 .
                         ?bb1               aida:boundingBoxLowerRightY ?lry1
                  }
                  OPTIONAL {
                         ?inf_justification a                           aida:KeyFrameVideoJustification .
                         ?inf_justification aida:keyFrame               ?kfid .
                         ?inf_justification aida:boundingBox            ?bb2  .
                         ?bb2               aida:boundingBoxUpperLeftX  ?ulx2 .
                         ?bb2               aida:boundingBoxUpperLeftY  ?uly2 .
                         ?bb2               aida:boundingBoxLowerRightX ?lrx2 .
                         ?bb2               aida:boundingBoxLowerRightY ?lry2
                  }
                  OPTIONAL {
                         ?inf_justification a                           aida:ShotVideoJustification .
                         ?inf_justification aida:shot                   ?sid
                  }
                  OPTIONAL {
                         ?inf_justification a                           aida:AudioJustification .
                         ?inf_justification aida:startTimestamp         ?st .
                         ?inf_justification aida:endTimestamp           ?et
                  }
              
                  BIND( IF( BOUND(?sid), ?sid, "__NULL__") AS ?_sid) .
                  BIND( IF( BOUND(?kfid), ?kfid, "__NULL__") AS ?_kfid) .
                  BIND( IF( BOUND(?so), ?so, "__NULL__") AS ?_so) .
                  BIND( IF( BOUND(?eo), ?eo, "__NULL__") AS ?_eo) .
                  BIND( IF( BOUND(?st), ?st, "__NULL__") AS ?_st) .
                  BIND( IF( BOUND(?et), ?et, "__NULL__") AS ?_et) .
                  BIND( COALESCE(?ulx1, ?ulx2, "__NULL__") AS ?_ulx) .
                  BIND( COALESCE(?uly1, ?uly2, "__NULL__") AS ?_uly) .
                  BIND( COALESCE(?lrx1, ?lrx2, "__NULL__") AS ?_lrx) .
                  BIND( COALESCE(?lry1, ?lry2, "__NULL__") AS ?_lry) .
              
                  BIND( cfn:getSpan(str(?docid), str(?doceid), str(?_sid), str(?_kfid), str(?_so), str(?_eo), str(?_ulx), str(?_uly), str(?_lrx), str(?_lry), str(?_st), str(?_et) ) AS ?infj_span ) .
              }
	]]>
     </sparql>
  </zerohop_query>
  <zerohop_query id="AIDA_TA2_ZH_2019_0023">
    <reference_kbid> LDC2019E43:80000065 </reference_kbid>
    <sparql>
 	<![CDATA[
              PREFIX ldcOnt: <https://tac.nist.gov/tracks/SM-KBP/2019/ontologies/LDCOntology#>
              PREFIX rdf:   <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
              PREFIX aida:  <https://tac.nist.gov/tracks/SM-KBP/2019/ontologies/InterchangeOntology#>
              PREFIX cfn:   <https://verdi.nextcentury.com/custom-function/>
              PREFIX xsd:   <http://www.w3.org/2001/XMLSchema#>
              
              # Query: AIDA_TA2_ZH_2019_0023
              # Query description: Find all informative mentions of entities linked to "LDC2019E43:80000065"
              # NIST default aggregate confidence of ?cluster is a function of
              #      ?link_cv      # confidenceValue of asserting that ?cluster is the same as reference KB node ?link_target
              #      ?j_cv         # confidenceValue of informativeJustification
              
              # ?j_cv is used to rank informative mentions within a cluster for purposes of pooling and AP scoring.
              
              # In M18, we use the ?j_cv (confidence in the justification, e.g., confidence of _:b02) and interpret that confidence
              # as the confidence of linking the justification to the cluster; _:b02 is used *only* to represent an informative
              # mention for some cluster, even though that cluster is not referenced in _:b02. Ideally (in future), there would be
              # an aida:InformativeJustificationAssertion construct (paralleling the structure of an aida:LinkAssertion) that
              # associates a confidence to each aida:informativeJustification, and could represent the confidence of linking an
              # InformativeJustification to a cluster.
              
              # _:b12 a                        aida:TextJustification ;
              #      aida:confidence          [ a                     aida:Confidence ;
              #                                 aida:confidenceValue  "1.0"^^<http://www.w3.org/2001/XMLSchema#double> ;
              #                                 aida:system           ldc:testSystem
              #                               ] ;
              #      aida:endOffsetInclusive  "286"^^<http://www.w3.org/2001/XMLSchema#int> ;
              #      aida:privateData         [ a                 aida:PrivateData ;
              #                                 aida:jsonContent  "{\"mention\":\"M000721\"}" ;
              #                                 aida:system       ldc:testSystem
              #                               ] ;
              #      aida:source              "DE005" ;
              #      aida:sourceDocument      "D0100" ;
              #      aida:startOffset         "260"^^<http://www.w3.org/2001/XMLSchema#int> ;
              #      aida:system              ldc:testSystem .
              #
              # _:b11 a              aida:LinkAssertion ;
              #      aida:confidence [ a                     aida:Confidence ;
              #                        aida:confidenceValue  "0.498"^^xsd:double ;
              #                        aida:system           ldc:testSystem
              #                      ] ;
              #      aida:linkTarget "ldc:E0137" ;
              #      aida:system     ldc:testSystem .
              #
              # _:c12 a               aida:InformativeJustificationAssertion ;
              #       aida:confidence [ a                     aida:Confidence ;
              #                         aida:confidenceValue  "0.498"^^xsd:double ;
              #                         aida:system           ldc:testSystem
              #                       ] ;
              #      aida:informativeJustification _:b12 ;
              #      aida:system     ldc:testSystem .
              #
              # ldc:cluster-E0137     a                             aida:SameAsCluster ;
              #                       aida:informativeJustification _:c12 ;
              #                       aida:link                     _:b11 ;
              #                       aida:system                   ldc:testSystem .
              
              
              SELECT DISTINCT
                     ?docid             # sourceDocument
                     ?query_link_target # link target as part of the query
                     ?link_target       # link target in the KB matching ?query_link_target
                     ?cluster           # the ?cluster linked to ?link_target
                     ?infj_span         # informativeJustification span taken from the ?cluster
                     ?j_cv              # confidenceValue of informativeJustification
                     ?link_target       # query reference KB node linked to a ?cluster
                     ?link_cv           # confidenceValue of asserting that ?cluster is the same as reference KB node ?link_target
              
              WHERE {
                  BIND ("LDC2019E43:80000065" AS ?query_link_target)
              
                  # Find ?cluster linked to "LDC2019E43:80000065"
                  # Find the ?link_cv: confidenceValue of linking to external KB entity
                  ?cluster              a                             aida:SameAsCluster .
                  ?cluster              aida:informativeJustification ?inf_justification .
                  ?cluster              aida:link                     ?ref_kb_link .
                  ?ref_kb_link          a                             aida:LinkAssertion .
                  ?ref_kb_link          aida:linkTarget               ?link_target .
                  ?ref_kb_link          aida:confidence               ?link_confidence .
                  ?link_confidence      aida:confidenceValue          ?link_cv .
                  
                  FILTER(cfn:memberOf(str(?link_target), str(?query_link_target))) .
              
                  # Find mention spans for ?inf_justification
                  ?inf_justification    aida:source          ?doceid .
                  ?inf_justification    aida:sourceDocument  ?docid .
                  ?inf_justification    aida:confidence      ?j_confidence .
                  ?j_confidence         aida:confidenceValue ?j_cv .
              
                  OPTIONAL {
                         ?inf_justification a                           aida:TextJustification .
                         ?inf_justification aida:startOffset            ?so .
                         ?inf_justification aida:endOffsetInclusive     ?eo
                  }
                  OPTIONAL {
                         ?inf_justification a                           aida:ImageJustification .
                         ?inf_justification aida:boundingBox            ?bb1  .
                         ?bb1               aida:boundingBoxUpperLeftX  ?ulx1 .
                         ?bb1               aida:boundingBoxUpperLeftY  ?uly1 .
                         ?bb1               aida:boundingBoxLowerRightX ?lrx1 .
                         ?bb1               aida:boundingBoxLowerRightY ?lry1
                  }
                  OPTIONAL {
                         ?inf_justification a                           aida:KeyFrameVideoJustification .
                         ?inf_justification aida:keyFrame               ?kfid .
                         ?inf_justification aida:boundingBox            ?bb2  .
                         ?bb2               aida:boundingBoxUpperLeftX  ?ulx2 .
                         ?bb2               aida:boundingBoxUpperLeftY  ?uly2 .
                         ?bb2               aida:boundingBoxLowerRightX ?lrx2 .
                         ?bb2               aida:boundingBoxLowerRightY ?lry2
                  }
                  OPTIONAL {
                         ?inf_justification a                           aida:ShotVideoJustification .
                         ?inf_justification aida:shot                   ?sid
                  }
                  OPTIONAL {
                         ?inf_justification a                           aida:AudioJustification .
                         ?inf_justification aida:startTimestamp         ?st .
                         ?inf_justification aida:endTimestamp           ?et
                  }
              
                  BIND( IF( BOUND(?sid), ?sid, "__NULL__") AS ?_sid) .
                  BIND( IF( BOUND(?kfid), ?kfid, "__NULL__") AS ?_kfid) .
                  BIND( IF( BOUND(?so), ?so, "__NULL__") AS ?_so) .
                  BIND( IF( BOUND(?eo), ?eo, "__NULL__") AS ?_eo) .
                  BIND( IF( BOUND(?st), ?st, "__NULL__") AS ?_st) .
                  BIND( IF( BOUND(?et), ?et, "__NULL__") AS ?_et) .
                  BIND( COALESCE(?ulx1, ?ulx2, "__NULL__") AS ?_ulx) .
                  BIND( COALESCE(?uly1, ?uly2, "__NULL__") AS ?_uly) .
                  BIND( COALESCE(?lrx1, ?lrx2, "__NULL__") AS ?_lrx) .
                  BIND( COALESCE(?lry1, ?lry2, "__NULL__") AS ?_lry) .
              
                  BIND( cfn:getSpan(str(?docid), str(?doceid), str(?_sid), str(?_kfid), str(?_so), str(?_eo), str(?_ulx), str(?_uly), str(?_lrx), str(?_lry), str(?_st), str(?_et) ) AS ?infj_span ) .
              }
	]]>
     </sparql>
  </zerohop_query>
  <zerohop_query id="AIDA_TA2_ZH_2019_0024">
    <reference_kbid> LDC2019E43:80000075 </reference_kbid>
    <sparql>
 	<![CDATA[
              PREFIX ldcOnt: <https://tac.nist.gov/tracks/SM-KBP/2019/ontologies/LDCOntology#>
              PREFIX rdf:   <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
              PREFIX aida:  <https://tac.nist.gov/tracks/SM-KBP/2019/ontologies/InterchangeOntology#>
              PREFIX cfn:   <https://verdi.nextcentury.com/custom-function/>
              PREFIX xsd:   <http://www.w3.org/2001/XMLSchema#>
              
              # Query: AIDA_TA2_ZH_2019_0024
              # Query description: Find all informative mentions of entities linked to "LDC2019E43:80000075"
              # NIST default aggregate confidence of ?cluster is a function of
              #      ?link_cv      # confidenceValue of asserting that ?cluster is the same as reference KB node ?link_target
              #      ?j_cv         # confidenceValue of informativeJustification
              
              # ?j_cv is used to rank informative mentions within a cluster for purposes of pooling and AP scoring.
              
              # In M18, we use the ?j_cv (confidence in the justification, e.g., confidence of _:b02) and interpret that confidence
              # as the confidence of linking the justification to the cluster; _:b02 is used *only* to represent an informative
              # mention for some cluster, even though that cluster is not referenced in _:b02. Ideally (in future), there would be
              # an aida:InformativeJustificationAssertion construct (paralleling the structure of an aida:LinkAssertion) that
              # associates a confidence to each aida:informativeJustification, and could represent the confidence of linking an
              # InformativeJustification to a cluster.
              
              # _:b12 a                        aida:TextJustification ;
              #      aida:confidence          [ a                     aida:Confidence ;
              #                                 aida:confidenceValue  "1.0"^^<http://www.w3.org/2001/XMLSchema#double> ;
              #                                 aida:system           ldc:testSystem
              #                               ] ;
              #      aida:endOffsetInclusive  "286"^^<http://www.w3.org/2001/XMLSchema#int> ;
              #      aida:privateData         [ a                 aida:PrivateData ;
              #                                 aida:jsonContent  "{\"mention\":\"M000721\"}" ;
              #                                 aida:system       ldc:testSystem
              #                               ] ;
              #      aida:source              "DE005" ;
              #      aida:sourceDocument      "D0100" ;
              #      aida:startOffset         "260"^^<http://www.w3.org/2001/XMLSchema#int> ;
              #      aida:system              ldc:testSystem .
              #
              # _:b11 a              aida:LinkAssertion ;
              #      aida:confidence [ a                     aida:Confidence ;
              #                        aida:confidenceValue  "0.498"^^xsd:double ;
              #                        aida:system           ldc:testSystem
              #                      ] ;
              #      aida:linkTarget "ldc:E0137" ;
              #      aida:system     ldc:testSystem .
              #
              # _:c12 a               aida:InformativeJustificationAssertion ;
              #       aida:confidence [ a                     aida:Confidence ;
              #                         aida:confidenceValue  "0.498"^^xsd:double ;
              #                         aida:system           ldc:testSystem
              #                       ] ;
              #      aida:informativeJustification _:b12 ;
              #      aida:system     ldc:testSystem .
              #
              # ldc:cluster-E0137     a                             aida:SameAsCluster ;
              #                       aida:informativeJustification _:c12 ;
              #                       aida:link                     _:b11 ;
              #                       aida:system                   ldc:testSystem .
              
              
              SELECT DISTINCT
                     ?docid             # sourceDocument
                     ?query_link_target # link target as part of the query
                     ?link_target       # link target in the KB matching ?query_link_target
                     ?cluster           # the ?cluster linked to ?link_target
                     ?infj_span         # informativeJustification span taken from the ?cluster
                     ?j_cv              # confidenceValue of informativeJustification
                     ?link_target       # query reference KB node linked to a ?cluster
                     ?link_cv           # confidenceValue of asserting that ?cluster is the same as reference KB node ?link_target
              
              WHERE {
                  BIND ("LDC2019E43:80000075" AS ?query_link_target)
              
                  # Find ?cluster linked to "LDC2019E43:80000075"
                  # Find the ?link_cv: confidenceValue of linking to external KB entity
                  ?cluster              a                             aida:SameAsCluster .
                  ?cluster              aida:informativeJustification ?inf_justification .
                  ?cluster              aida:link                     ?ref_kb_link .
                  ?ref_kb_link          a                             aida:LinkAssertion .
                  ?ref_kb_link          aida:linkTarget               ?link_target .
                  ?ref_kb_link          aida:confidence               ?link_confidence .
                  ?link_confidence      aida:confidenceValue          ?link_cv .
                  
                  FILTER(cfn:memberOf(str(?link_target), str(?query_link_target))) .
              
                  # Find mention spans for ?inf_justification
                  ?inf_justification    aida:source          ?doceid .
                  ?inf_justification    aida:sourceDocument  ?docid .
                  ?inf_justification    aida:confidence      ?j_confidence .
                  ?j_confidence         aida:confidenceValue ?j_cv .
              
                  OPTIONAL {
                         ?inf_justification a                           aida:TextJustification .
                         ?inf_justification aida:startOffset            ?so .
                         ?inf_justification aida:endOffsetInclusive     ?eo
                  }
                  OPTIONAL {
                         ?inf_justification a                           aida:ImageJustification .
                         ?inf_justification aida:boundingBox            ?bb1  .
                         ?bb1               aida:boundingBoxUpperLeftX  ?ulx1 .
                         ?bb1               aida:boundingBoxUpperLeftY  ?uly1 .
                         ?bb1               aida:boundingBoxLowerRightX ?lrx1 .
                         ?bb1               aida:boundingBoxLowerRightY ?lry1
                  }
                  OPTIONAL {
                         ?inf_justification a                           aida:KeyFrameVideoJustification .
                         ?inf_justification aida:keyFrame               ?kfid .
                         ?inf_justification aida:boundingBox            ?bb2  .
                         ?bb2               aida:boundingBoxUpperLeftX  ?ulx2 .
                         ?bb2               aida:boundingBoxUpperLeftY  ?uly2 .
                         ?bb2               aida:boundingBoxLowerRightX ?lrx2 .
                         ?bb2               aida:boundingBoxLowerRightY ?lry2
                  }
                  OPTIONAL {
                         ?inf_justification a                           aida:ShotVideoJustification .
                         ?inf_justification aida:shot                   ?sid
                  }
                  OPTIONAL {
                         ?inf_justification a                           aida:AudioJustification .
                         ?inf_justification aida:startTimestamp         ?st .
                         ?inf_justification aida:endTimestamp           ?et
                  }
              
                  BIND( IF( BOUND(?sid), ?sid, "__NULL__") AS ?_sid) .
                  BIND( IF( BOUND(?kfid), ?kfid, "__NULL__") AS ?_kfid) .
                  BIND( IF( BOUND(?so), ?so, "__NULL__") AS ?_so) .
                  BIND( IF( BOUND(?eo), ?eo, "__NULL__") AS ?_eo) .
                  BIND( IF( BOUND(?st), ?st, "__NULL__") AS ?_st) .
                  BIND( IF( BOUND(?et), ?et, "__NULL__") AS ?_et) .
                  BIND( COALESCE(?ulx1, ?ulx2, "__NULL__") AS ?_ulx) .
                  BIND( COALESCE(?uly1, ?uly2, "__NULL__") AS ?_uly) .
                  BIND( COALESCE(?lrx1, ?lrx2, "__NULL__") AS ?_lrx) .
                  BIND( COALESCE(?lry1, ?lry2, "__NULL__") AS ?_lry) .
              
                  BIND( cfn:getSpan(str(?docid), str(?doceid), str(?_sid), str(?_kfid), str(?_so), str(?_eo), str(?_ulx), str(?_uly), str(?_lrx), str(?_lry), str(?_st), str(?_et) ) AS ?infj_span ) .
              }
	]]>
     </sparql>
  </zerohop_query>
  <zerohop_query id="AIDA_TA2_ZH_2019_0025">
    <reference_kbid> LDC2019E43:2017370|LDC2019E43:80000055 </reference_kbid>
    <sparql>
 	<![CDATA[
              PREFIX ldcOnt: <https://tac.nist.gov/tracks/SM-KBP/2019/ontologies/LDCOntology#>
              PREFIX rdf:   <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
              PREFIX aida:  <https://tac.nist.gov/tracks/SM-KBP/2019/ontologies/InterchangeOntology#>
              PREFIX cfn:   <https://verdi.nextcentury.com/custom-function/>
              PREFIX xsd:   <http://www.w3.org/2001/XMLSchema#>
              
              # Query: AIDA_TA2_ZH_2019_0025
              # Query description: Find all informative mentions of entities linked to "LDC2019E43:2017370|LDC2019E43:80000055"
              # NIST default aggregate confidence of ?cluster is a function of
              #      ?link_cv      # confidenceValue of asserting that ?cluster is the same as reference KB node ?link_target
              #      ?j_cv         # confidenceValue of informativeJustification
              
              # ?j_cv is used to rank informative mentions within a cluster for purposes of pooling and AP scoring.
              
              # In M18, we use the ?j_cv (confidence in the justification, e.g., confidence of _:b02) and interpret that confidence
              # as the confidence of linking the justification to the cluster; _:b02 is used *only* to represent an informative
              # mention for some cluster, even though that cluster is not referenced in _:b02. Ideally (in future), there would be
              # an aida:InformativeJustificationAssertion construct (paralleling the structure of an aida:LinkAssertion) that
              # associates a confidence to each aida:informativeJustification, and could represent the confidence of linking an
              # InformativeJustification to a cluster.
              
              # _:b12 a                        aida:TextJustification ;
              #      aida:confidence          [ a                     aida:Confidence ;
              #                                 aida:confidenceValue  "1.0"^^<http://www.w3.org/2001/XMLSchema#double> ;
              #                                 aida:system           ldc:testSystem
              #                               ] ;
              #      aida:endOffsetInclusive  "286"^^<http://www.w3.org/2001/XMLSchema#int> ;
              #      aida:privateData         [ a                 aida:PrivateData ;
              #                                 aida:jsonContent  "{\"mention\":\"M000721\"}" ;
              #                                 aida:system       ldc:testSystem
              #                               ] ;
              #      aida:source              "DE005" ;
              #      aida:sourceDocument      "D0100" ;
              #      aida:startOffset         "260"^^<http://www.w3.org/2001/XMLSchema#int> ;
              #      aida:system              ldc:testSystem .
              #
              # _:b11 a              aida:LinkAssertion ;
              #      aida:confidence [ a                     aida:Confidence ;
              #                        aida:confidenceValue  "0.498"^^xsd:double ;
              #                        aida:system           ldc:testSystem
              #                      ] ;
              #      aida:linkTarget "ldc:E0137" ;
              #      aida:system     ldc:testSystem .
              #
              # _:c12 a               aida:InformativeJustificationAssertion ;
              #       aida:confidence [ a                     aida:Confidence ;
              #                         aida:confidenceValue  "0.498"^^xsd:double ;
              #                         aida:system           ldc:testSystem
              #                       ] ;
              #      aida:informativeJustification _:b12 ;
              #      aida:system     ldc:testSystem .
              #
              # ldc:cluster-E0137     a                             aida:SameAsCluster ;
              #                       aida:informativeJustification _:c12 ;
              #                       aida:link                     _:b11 ;
              #                       aida:system                   ldc:testSystem .
              
              
              SELECT DISTINCT
                     ?docid             # sourceDocument
                     ?query_link_target # link target as part of the query
                     ?link_target       # link target in the KB matching ?query_link_target
                     ?cluster           # the ?cluster linked to ?link_target
                     ?infj_span         # informativeJustification span taken from the ?cluster
                     ?j_cv              # confidenceValue of informativeJustification
                     ?link_target       # query reference KB node linked to a ?cluster
                     ?link_cv           # confidenceValue of asserting that ?cluster is the same as reference KB node ?link_target
              
              WHERE {
                  BIND ("LDC2019E43:2017370|LDC2019E43:80000055" AS ?query_link_target)
              
                  # Find ?cluster linked to "LDC2019E43:2017370|LDC2019E43:80000055"
                  # Find the ?link_cv: confidenceValue of linking to external KB entity
                  ?cluster              a                             aida:SameAsCluster .
                  ?cluster              aida:informativeJustification ?inf_justification .
                  ?cluster              aida:link                     ?ref_kb_link .
                  ?ref_kb_link          a                             aida:LinkAssertion .
                  ?ref_kb_link          aida:linkTarget               ?link_target .
                  ?ref_kb_link          aida:confidence               ?link_confidence .
                  ?link_confidence      aida:confidenceValue          ?link_cv .
                  
                  FILTER(cfn:memberOf(str(?link_target), str(?query_link_target))) .
              
                  # Find mention spans for ?inf_justification
                  ?inf_justification    aida:source          ?doceid .
                  ?inf_justification    aida:sourceDocument  ?docid .
                  ?inf_justification    aida:confidence      ?j_confidence .
                  ?j_confidence         aida:confidenceValue ?j_cv .
              
                  OPTIONAL {
                         ?inf_justification a                           aida:TextJustification .
                         ?inf_justification aida:startOffset            ?so .
                         ?inf_justification aida:endOffsetInclusive     ?eo
                  }
                  OPTIONAL {
                         ?inf_justification a                           aida:ImageJustification .
                         ?inf_justification aida:boundingBox            ?bb1  .
                         ?bb1               aida:boundingBoxUpperLeftX  ?ulx1 .
                         ?bb1               aida:boundingBoxUpperLeftY  ?uly1 .
                         ?bb1               aida:boundingBoxLowerRightX ?lrx1 .
                         ?bb1               aida:boundingBoxLowerRightY ?lry1
                  }
                  OPTIONAL {
                         ?inf_justification a                           aida:KeyFrameVideoJustification .
                         ?inf_justification aida:keyFrame               ?kfid .
                         ?inf_justification aida:boundingBox            ?bb2  .
                         ?bb2               aida:boundingBoxUpperLeftX  ?ulx2 .
                         ?bb2               aida:boundingBoxUpperLeftY  ?uly2 .
                         ?bb2               aida:boundingBoxLowerRightX ?lrx2 .
                         ?bb2               aida:boundingBoxLowerRightY ?lry2
                  }
                  OPTIONAL {
                         ?inf_justification a                           aida:ShotVideoJustification .
                         ?inf_justification aida:shot                   ?sid
                  }
                  OPTIONAL {
                         ?inf_justification a                           aida:AudioJustification .
                         ?inf_justification aida:startTimestamp         ?st .
                         ?inf_justification aida:endTimestamp           ?et
                  }
              
                  BIND( IF( BOUND(?sid), ?sid, "__NULL__") AS ?_sid) .
                  BIND( IF( BOUND(?kfid), ?kfid, "__NULL__") AS ?_kfid) .
                  BIND( IF( BOUND(?so), ?so, "__NULL__") AS ?_so) .
                  BIND( IF( BOUND(?eo), ?eo, "__NULL__") AS ?_eo) .
                  BIND( IF( BOUND(?st), ?st, "__NULL__") AS ?_st) .
                  BIND( IF( BOUND(?et), ?et, "__NULL__") AS ?_et) .
                  BIND( COALESCE(?ulx1, ?ulx2, "__NULL__") AS ?_ulx) .
                  BIND( COALESCE(?uly1, ?uly2, "__NULL__") AS ?_uly) .
                  BIND( COALESCE(?lrx1, ?lrx2, "__NULL__") AS ?_lrx) .
                  BIND( COALESCE(?lry1, ?lry2, "__NULL__") AS ?_lry) .
              
                  BIND( cfn:getSpan(str(?docid), str(?doceid), str(?_sid), str(?_kfid), str(?_so), str(?_eo), str(?_ulx), str(?_uly), str(?_lrx), str(?_lry), str(?_st), str(?_et) ) AS ?infj_span ) .
              }
	]]>
     </sparql>
  </zerohop_query>
  <zerohop_query id="AIDA_TA2_ZH_2019_0026">
    <reference_kbid> LDC2019E43:698740|LDC2019E43:80000036 </reference_kbid>
    <sparql>
 	<![CDATA[
              PREFIX ldcOnt: <https://tac.nist.gov/tracks/SM-KBP/2019/ontologies/LDCOntology#>
              PREFIX rdf:   <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
              PREFIX aida:  <https://tac.nist.gov/tracks/SM-KBP/2019/ontologies/InterchangeOntology#>
              PREFIX cfn:   <https://verdi.nextcentury.com/custom-function/>
              PREFIX xsd:   <http://www.w3.org/2001/XMLSchema#>
              
              # Query: AIDA_TA2_ZH_2019_0026
              # Query description: Find all informative mentions of entities linked to "LDC2019E43:698740|LDC2019E43:80000036"
              # NIST default aggregate confidence of ?cluster is a function of
              #      ?link_cv      # confidenceValue of asserting that ?cluster is the same as reference KB node ?link_target
              #      ?j_cv         # confidenceValue of informativeJustification
              
              # ?j_cv is used to rank informative mentions within a cluster for purposes of pooling and AP scoring.
              
              # In M18, we use the ?j_cv (confidence in the justification, e.g., confidence of _:b02) and interpret that confidence
              # as the confidence of linking the justification to the cluster; _:b02 is used *only* to represent an informative
              # mention for some cluster, even though that cluster is not referenced in _:b02. Ideally (in future), there would be
              # an aida:InformativeJustificationAssertion construct (paralleling the structure of an aida:LinkAssertion) that
              # associates a confidence to each aida:informativeJustification, and could represent the confidence of linking an
              # InformativeJustification to a cluster.
              
              # _:b12 a                        aida:TextJustification ;
              #      aida:confidence          [ a                     aida:Confidence ;
              #                                 aida:confidenceValue  "1.0"^^<http://www.w3.org/2001/XMLSchema#double> ;
              #                                 aida:system           ldc:testSystem
              #                               ] ;
              #      aida:endOffsetInclusive  "286"^^<http://www.w3.org/2001/XMLSchema#int> ;
              #      aida:privateData         [ a                 aida:PrivateData ;
              #                                 aida:jsonContent  "{\"mention\":\"M000721\"}" ;
              #                                 aida:system       ldc:testSystem
              #                               ] ;
              #      aida:source              "DE005" ;
              #      aida:sourceDocument      "D0100" ;
              #      aida:startOffset         "260"^^<http://www.w3.org/2001/XMLSchema#int> ;
              #      aida:system              ldc:testSystem .
              #
              # _:b11 a              aida:LinkAssertion ;
              #      aida:confidence [ a                     aida:Confidence ;
              #                        aida:confidenceValue  "0.498"^^xsd:double ;
              #                        aida:system           ldc:testSystem
              #                      ] ;
              #      aida:linkTarget "ldc:E0137" ;
              #      aida:system     ldc:testSystem .
              #
              # _:c12 a               aida:InformativeJustificationAssertion ;
              #       aida:confidence [ a                     aida:Confidence ;
              #                         aida:confidenceValue  "0.498"^^xsd:double ;
              #                         aida:system           ldc:testSystem
              #                       ] ;
              #      aida:informativeJustification _:b12 ;
              #      aida:system     ldc:testSystem .
              #
              # ldc:cluster-E0137     a                             aida:SameAsCluster ;
              #                       aida:informativeJustification _:c12 ;
              #                       aida:link                     _:b11 ;
              #                       aida:system                   ldc:testSystem .
              
              
              SELECT DISTINCT
                     ?docid             # sourceDocument
                     ?query_link_target # link target as part of the query
                     ?link_target       # link target in the KB matching ?query_link_target
                     ?cluster           # the ?cluster linked to ?link_target
                     ?infj_span         # informativeJustification span taken from the ?cluster
                     ?j_cv              # confidenceValue of informativeJustification
                     ?link_target       # query reference KB node linked to a ?cluster
                     ?link_cv           # confidenceValue of asserting that ?cluster is the same as reference KB node ?link_target
              
              WHERE {
                  BIND ("LDC2019E43:698740|LDC2019E43:80000036" AS ?query_link_target)
              
                  # Find ?cluster linked to "LDC2019E43:698740|LDC2019E43:80000036"
                  # Find the ?link_cv: confidenceValue of linking to external KB entity
                  ?cluster              a                             aida:SameAsCluster .
                  ?cluster              aida:informativeJustification ?inf_justification .
                  ?cluster              aida:link                     ?ref_kb_link .
                  ?ref_kb_link          a                             aida:LinkAssertion .
                  ?ref_kb_link          aida:linkTarget               ?link_target .
                  ?ref_kb_link          aida:confidence               ?link_confidence .
                  ?link_confidence      aida:confidenceValue          ?link_cv .
                  
                  FILTER(cfn:memberOf(str(?link_target), str(?query_link_target))) .
              
                  # Find mention spans for ?inf_justification
                  ?inf_justification    aida:source          ?doceid .
                  ?inf_justification    aida:sourceDocument  ?docid .
                  ?inf_justification    aida:confidence      ?j_confidence .
                  ?j_confidence         aida:confidenceValue ?j_cv .
              
                  OPTIONAL {
                         ?inf_justification a                           aida:TextJustification .
                         ?inf_justification aida:startOffset            ?so .
                         ?inf_justification aida:endOffsetInclusive     ?eo
                  }
                  OPTIONAL {
                         ?inf_justification a                           aida:ImageJustification .
                         ?inf_justification aida:boundingBox            ?bb1  .
                         ?bb1               aida:boundingBoxUpperLeftX  ?ulx1 .
                         ?bb1               aida:boundingBoxUpperLeftY  ?uly1 .
                         ?bb1               aida:boundingBoxLowerRightX ?lrx1 .
                         ?bb1               aida:boundingBoxLowerRightY ?lry1
                  }
                  OPTIONAL {
                         ?inf_justification a                           aida:KeyFrameVideoJustification .
                         ?inf_justification aida:keyFrame               ?kfid .
                         ?inf_justification aida:boundingBox            ?bb2  .
                         ?bb2               aida:boundingBoxUpperLeftX  ?ulx2 .
                         ?bb2               aida:boundingBoxUpperLeftY  ?uly2 .
                         ?bb2               aida:boundingBoxLowerRightX ?lrx2 .
                         ?bb2               aida:boundingBoxLowerRightY ?lry2
                  }
                  OPTIONAL {
                         ?inf_justification a                           aida:ShotVideoJustification .
                         ?inf_justification aida:shot                   ?sid
                  }
                  OPTIONAL {
                         ?inf_justification a                           aida:AudioJustification .
                         ?inf_justification aida:startTimestamp         ?st .
                         ?inf_justification aida:endTimestamp           ?et
                  }
              
                  BIND( IF( BOUND(?sid), ?sid, "__NULL__") AS ?_sid) .
                  BIND( IF( BOUND(?kfid), ?kfid, "__NULL__") AS ?_kfid) .
                  BIND( IF( BOUND(?so), ?so, "__NULL__") AS ?_so) .
                  BIND( IF( BOUND(?eo), ?eo, "__NULL__") AS ?_eo) .
                  BIND( IF( BOUND(?st), ?st, "__NULL__") AS ?_st) .
                  BIND( IF( BOUND(?et), ?et, "__NULL__") AS ?_et) .
                  BIND( COALESCE(?ulx1, ?ulx2, "__NULL__") AS ?_ulx) .
                  BIND( COALESCE(?uly1, ?uly2, "__NULL__") AS ?_uly) .
                  BIND( COALESCE(?lrx1, ?lrx2, "__NULL__") AS ?_lrx) .
                  BIND( COALESCE(?lry1, ?lry2, "__NULL__") AS ?_lry) .
              
                  BIND( cfn:getSpan(str(?docid), str(?doceid), str(?_sid), str(?_kfid), str(?_so), str(?_eo), str(?_ulx), str(?_uly), str(?_lrx), str(?_lry), str(?_st), str(?_et) ) AS ?infj_span ) .
              }
	]]>
     </sparql>
  </zerohop_query>
  <zerohop_query id="AIDA_TA2_ZH_2019_0027">
    <reference_kbid> LDC2019E43:80000181 </reference_kbid>
    <sparql>
 	<![CDATA[
              PREFIX ldcOnt: <https://tac.nist.gov/tracks/SM-KBP/2019/ontologies/LDCOntology#>
              PREFIX rdf:   <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
              PREFIX aida:  <https://tac.nist.gov/tracks/SM-KBP/2019/ontologies/InterchangeOntology#>
              PREFIX cfn:   <https://verdi.nextcentury.com/custom-function/>
              PREFIX xsd:   <http://www.w3.org/2001/XMLSchema#>
              
              # Query: AIDA_TA2_ZH_2019_0027
              # Query description: Find all informative mentions of entities linked to "LDC2019E43:80000181"
              # NIST default aggregate confidence of ?cluster is a function of
              #      ?link_cv      # confidenceValue of asserting that ?cluster is the same as reference KB node ?link_target
              #      ?j_cv         # confidenceValue of informativeJustification
              
              # ?j_cv is used to rank informative mentions within a cluster for purposes of pooling and AP scoring.
              
              # In M18, we use the ?j_cv (confidence in the justification, e.g., confidence of _:b02) and interpret that confidence
              # as the confidence of linking the justification to the cluster; _:b02 is used *only* to represent an informative
              # mention for some cluster, even though that cluster is not referenced in _:b02. Ideally (in future), there would be
              # an aida:InformativeJustificationAssertion construct (paralleling the structure of an aida:LinkAssertion) that
              # associates a confidence to each aida:informativeJustification, and could represent the confidence of linking an
              # InformativeJustification to a cluster.
              
              # _:b12 a                        aida:TextJustification ;
              #      aida:confidence          [ a                     aida:Confidence ;
              #                                 aida:confidenceValue  "1.0"^^<http://www.w3.org/2001/XMLSchema#double> ;
              #                                 aida:system           ldc:testSystem
              #                               ] ;
              #      aida:endOffsetInclusive  "286"^^<http://www.w3.org/2001/XMLSchema#int> ;
              #      aida:privateData         [ a                 aida:PrivateData ;
              #                                 aida:jsonContent  "{\"mention\":\"M000721\"}" ;
              #                                 aida:system       ldc:testSystem
              #                               ] ;
              #      aida:source              "DE005" ;
              #      aida:sourceDocument      "D0100" ;
              #      aida:startOffset         "260"^^<http://www.w3.org/2001/XMLSchema#int> ;
              #      aida:system              ldc:testSystem .
              #
              # _:b11 a              aida:LinkAssertion ;
              #      aida:confidence [ a                     aida:Confidence ;
              #                        aida:confidenceValue  "0.498"^^xsd:double ;
              #                        aida:system           ldc:testSystem
              #                      ] ;
              #      aida:linkTarget "ldc:E0137" ;
              #      aida:system     ldc:testSystem .
              #
              # _:c12 a               aida:InformativeJustificationAssertion ;
              #       aida:confidence [ a                     aida:Confidence ;
              #                         aida:confidenceValue  "0.498"^^xsd:double ;
              #                         aida:system           ldc:testSystem
              #                       ] ;
              #      aida:informativeJustification _:b12 ;
              #      aida:system     ldc:testSystem .
              #
              # ldc:cluster-E0137     a                             aida:SameAsCluster ;
              #                       aida:informativeJustification _:c12 ;
              #                       aida:link                     _:b11 ;
              #                       aida:system                   ldc:testSystem .
              
              
              SELECT DISTINCT
                     ?docid             # sourceDocument
                     ?query_link_target # link target as part of the query
                     ?link_target       # link target in the KB matching ?query_link_target
                     ?cluster           # the ?cluster linked to ?link_target
                     ?infj_span         # informativeJustification span taken from the ?cluster
                     ?j_cv              # confidenceValue of informativeJustification
                     ?link_target       # query reference KB node linked to a ?cluster
                     ?link_cv           # confidenceValue of asserting that ?cluster is the same as reference KB node ?link_target
              
              WHERE {
                  BIND ("LDC2019E43:80000181" AS ?query_link_target)
              
                  # Find ?cluster linked to "LDC2019E43:80000181"
                  # Find the ?link_cv: confidenceValue of linking to external KB entity
                  ?cluster              a                             aida:SameAsCluster .
                  ?cluster              aida:informativeJustification ?inf_justification .
                  ?cluster              aida:link                     ?ref_kb_link .
                  ?ref_kb_link          a                             aida:LinkAssertion .
                  ?ref_kb_link          aida:linkTarget               ?link_target .
                  ?ref_kb_link          aida:confidence               ?link_confidence .
                  ?link_confidence      aida:confidenceValue          ?link_cv .
                  
                  FILTER(cfn:memberOf(str(?link_target), str(?query_link_target))) .
              
                  # Find mention spans for ?inf_justification
                  ?inf_justification    aida:source          ?doceid .
                  ?inf_justification    aida:sourceDocument  ?docid .
                  ?inf_justification    aida:confidence      ?j_confidence .
                  ?j_confidence         aida:confidenceValue ?j_cv .
              
                  OPTIONAL {
                         ?inf_justification a                           aida:TextJustification .
                         ?inf_justification aida:startOffset            ?so .
                         ?inf_justification aida:endOffsetInclusive     ?eo
                  }
                  OPTIONAL {
                         ?inf_justification a                           aida:ImageJustification .
                         ?inf_justification aida:boundingBox            ?bb1  .
                         ?bb1               aida:boundingBoxUpperLeftX  ?ulx1 .
                         ?bb1               aida:boundingBoxUpperLeftY  ?uly1 .
                         ?bb1               aida:boundingBoxLowerRightX ?lrx1 .
                         ?bb1               aida:boundingBoxLowerRightY ?lry1
                  }
                  OPTIONAL {
                         ?inf_justification a                           aida:KeyFrameVideoJustification .
                         ?inf_justification aida:keyFrame               ?kfid .
                         ?inf_justification aida:boundingBox            ?bb2  .
                         ?bb2               aida:boundingBoxUpperLeftX  ?ulx2 .
                         ?bb2               aida:boundingBoxUpperLeftY  ?uly2 .
                         ?bb2               aida:boundingBoxLowerRightX ?lrx2 .
                         ?bb2               aida:boundingBoxLowerRightY ?lry2
                  }
                  OPTIONAL {
                         ?inf_justification a                           aida:ShotVideoJustification .
                         ?inf_justification aida:shot                   ?sid
                  }
                  OPTIONAL {
                         ?inf_justification a                           aida:AudioJustification .
                         ?inf_justification aida:startTimestamp         ?st .
                         ?inf_justification aida:endTimestamp           ?et
                  }
              
                  BIND( IF( BOUND(?sid), ?sid, "__NULL__") AS ?_sid) .
                  BIND( IF( BOUND(?kfid), ?kfid, "__NULL__") AS ?_kfid) .
                  BIND( IF( BOUND(?so), ?so, "__NULL__") AS ?_so) .
                  BIND( IF( BOUND(?eo), ?eo, "__NULL__") AS ?_eo) .
                  BIND( IF( BOUND(?st), ?st, "__NULL__") AS ?_st) .
                  BIND( IF( BOUND(?et), ?et, "__NULL__") AS ?_et) .
                  BIND( COALESCE(?ulx1, ?ulx2, "__NULL__") AS ?_ulx) .
                  BIND( COALESCE(?uly1, ?uly2, "__NULL__") AS ?_uly) .
                  BIND( COALESCE(?lrx1, ?lrx2, "__NULL__") AS ?_lrx) .
                  BIND( COALESCE(?lry1, ?lry2, "__NULL__") AS ?_lry) .
              
                  BIND( cfn:getSpan(str(?docid), str(?doceid), str(?_sid), str(?_kfid), str(?_so), str(?_eo), str(?_ulx), str(?_uly), str(?_lrx), str(?_lry), str(?_st), str(?_et) ) AS ?infj_span ) .
              }
	]]>
     </sparql>
  </zerohop_query>
  <zerohop_query id="AIDA_TA2_ZH_2019_0028">
    <reference_kbid> LDC2019E43:80000074 </reference_kbid>
    <sparql>
 	<![CDATA[
              PREFIX ldcOnt: <https://tac.nist.gov/tracks/SM-KBP/2019/ontologies/LDCOntology#>
              PREFIX rdf:   <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
              PREFIX aida:  <https://tac.nist.gov/tracks/SM-KBP/2019/ontologies/InterchangeOntology#>
              PREFIX cfn:   <https://verdi.nextcentury.com/custom-function/>
              PREFIX xsd:   <http://www.w3.org/2001/XMLSchema#>
              
              # Query: AIDA_TA2_ZH_2019_0028
              # Query description: Find all informative mentions of entities linked to "LDC2019E43:80000074"
              # NIST default aggregate confidence of ?cluster is a function of
              #      ?link_cv      # confidenceValue of asserting that ?cluster is the same as reference KB node ?link_target
              #      ?j_cv         # confidenceValue of informativeJustification
              
              # ?j_cv is used to rank informative mentions within a cluster for purposes of pooling and AP scoring.
              
              # In M18, we use the ?j_cv (confidence in the justification, e.g., confidence of _:b02) and interpret that confidence
              # as the confidence of linking the justification to the cluster; _:b02 is used *only* to represent an informative
              # mention for some cluster, even though that cluster is not referenced in _:b02. Ideally (in future), there would be
              # an aida:InformativeJustificationAssertion construct (paralleling the structure of an aida:LinkAssertion) that
              # associates a confidence to each aida:informativeJustification, and could represent the confidence of linking an
              # InformativeJustification to a cluster.
              
              # _:b12 a                        aida:TextJustification ;
              #      aida:confidence          [ a                     aida:Confidence ;
              #                                 aida:confidenceValue  "1.0"^^<http://www.w3.org/2001/XMLSchema#double> ;
              #                                 aida:system           ldc:testSystem
              #                               ] ;
              #      aida:endOffsetInclusive  "286"^^<http://www.w3.org/2001/XMLSchema#int> ;
              #      aida:privateData         [ a                 aida:PrivateData ;
              #                                 aida:jsonContent  "{\"mention\":\"M000721\"}" ;
              #                                 aida:system       ldc:testSystem
              #                               ] ;
              #      aida:source              "DE005" ;
              #      aida:sourceDocument      "D0100" ;
              #      aida:startOffset         "260"^^<http://www.w3.org/2001/XMLSchema#int> ;
              #      aida:system              ldc:testSystem .
              #
              # _:b11 a              aida:LinkAssertion ;
              #      aida:confidence [ a                     aida:Confidence ;
              #                        aida:confidenceValue  "0.498"^^xsd:double ;
              #                        aida:system           ldc:testSystem
              #                      ] ;
              #      aida:linkTarget "ldc:E0137" ;
              #      aida:system     ldc:testSystem .
              #
              # _:c12 a               aida:InformativeJustificationAssertion ;
              #       aida:confidence [ a                     aida:Confidence ;
              #                         aida:confidenceValue  "0.498"^^xsd:double ;
              #                         aida:system           ldc:testSystem
              #                       ] ;
              #      aida:informativeJustification _:b12 ;
              #      aida:system     ldc:testSystem .
              #
              # ldc:cluster-E0137     a                             aida:SameAsCluster ;
              #                       aida:informativeJustification _:c12 ;
              #                       aida:link                     _:b11 ;
              #                       aida:system                   ldc:testSystem .
              
              
              SELECT DISTINCT
                     ?docid             # sourceDocument
                     ?query_link_target # link target as part of the query
                     ?link_target       # link target in the KB matching ?query_link_target
                     ?cluster           # the ?cluster linked to ?link_target
                     ?infj_span         # informativeJustification span taken from the ?cluster
                     ?j_cv              # confidenceValue of informativeJustification
                     ?link_target       # query reference KB node linked to a ?cluster
                     ?link_cv           # confidenceValue of asserting that ?cluster is the same as reference KB node ?link_target
              
              WHERE {
                  BIND ("LDC2019E43:80000074" AS ?query_link_target)
              
                  # Find ?cluster linked to "LDC2019E43:80000074"
                  # Find the ?link_cv: confidenceValue of linking to external KB entity
                  ?cluster              a                             aida:SameAsCluster .
                  ?cluster              aida:informativeJustification ?inf_justification .
                  ?cluster              aida:link                     ?ref_kb_link .
                  ?ref_kb_link          a                             aida:LinkAssertion .
                  ?ref_kb_link          aida:linkTarget               ?link_target .
                  ?ref_kb_link          aida:confidence               ?link_confidence .
                  ?link_confidence      aida:confidenceValue          ?link_cv .
                  
                  FILTER(cfn:memberOf(str(?link_target), str(?query_link_target))) .
              
                  # Find mention spans for ?inf_justification
                  ?inf_justification    aida:source          ?doceid .
                  ?inf_justification    aida:sourceDocument  ?docid .
                  ?inf_justification    aida:confidence      ?j_confidence .
                  ?j_confidence         aida:confidenceValue ?j_cv .
              
                  OPTIONAL {
                         ?inf_justification a                           aida:TextJustification .
                         ?inf_justification aida:startOffset            ?so .
                         ?inf_justification aida:endOffsetInclusive     ?eo
                  }
                  OPTIONAL {
                         ?inf_justification a                           aida:ImageJustification .
                         ?inf_justification aida:boundingBox            ?bb1  .
                         ?bb1               aida:boundingBoxUpperLeftX  ?ulx1 .
                         ?bb1               aida:boundingBoxUpperLeftY  ?uly1 .
                         ?bb1               aida:boundingBoxLowerRightX ?lrx1 .
                         ?bb1               aida:boundingBoxLowerRightY ?lry1
                  }
                  OPTIONAL {
                         ?inf_justification a                           aida:KeyFrameVideoJustification .
                         ?inf_justification aida:keyFrame               ?kfid .
                         ?inf_justification aida:boundingBox            ?bb2  .
                         ?bb2               aida:boundingBoxUpperLeftX  ?ulx2 .
                         ?bb2               aida:boundingBoxUpperLeftY  ?uly2 .
                         ?bb2               aida:boundingBoxLowerRightX ?lrx2 .
                         ?bb2               aida:boundingBoxLowerRightY ?lry2
                  }
                  OPTIONAL {
                         ?inf_justification a                           aida:ShotVideoJustification .
                         ?inf_justification aida:shot                   ?sid
                  }
                  OPTIONAL {
                         ?inf_justification a                           aida:AudioJustification .
                         ?inf_justification aida:startTimestamp         ?st .
                         ?inf_justification aida:endTimestamp           ?et
                  }
              
                  BIND( IF( BOUND(?sid), ?sid, "__NULL__") AS ?_sid) .
                  BIND( IF( BOUND(?kfid), ?kfid, "__NULL__") AS ?_kfid) .
                  BIND( IF( BOUND(?so), ?so, "__NULL__") AS ?_so) .
                  BIND( IF( BOUND(?eo), ?eo, "__NULL__") AS ?_eo) .
                  BIND( IF( BOUND(?st), ?st, "__NULL__") AS ?_st) .
                  BIND( IF( BOUND(?et), ?et, "__NULL__") AS ?_et) .
                  BIND( COALESCE(?ulx1, ?ulx2, "__NULL__") AS ?_ulx) .
                  BIND( COALESCE(?uly1, ?uly2, "__NULL__") AS ?_uly) .
                  BIND( COALESCE(?lrx1, ?lrx2, "__NULL__") AS ?_lrx) .
                  BIND( COALESCE(?lry1, ?lry2, "__NULL__") AS ?_lry) .
              
                  BIND( cfn:getSpan(str(?docid), str(?doceid), str(?_sid), str(?_kfid), str(?_so), str(?_eo), str(?_ulx), str(?_uly), str(?_lrx), str(?_lry), str(?_st), str(?_et) ) AS ?infj_span ) .
              }
	]]>
     </sparql>
  </zerohop_query>
  <zerohop_query id="AIDA_TA2_ZH_2019_0029">
    <reference_kbid> LDC2019E43:80000357 </reference_kbid>
    <sparql>
 	<![CDATA[
              PREFIX ldcOnt: <https://tac.nist.gov/tracks/SM-KBP/2019/ontologies/LDCOntology#>
              PREFIX rdf:   <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
              PREFIX aida:  <https://tac.nist.gov/tracks/SM-KBP/2019/ontologies/InterchangeOntology#>
              PREFIX cfn:   <https://verdi.nextcentury.com/custom-function/>
              PREFIX xsd:   <http://www.w3.org/2001/XMLSchema#>
              
              # Query: AIDA_TA2_ZH_2019_0029
              # Query description: Find all informative mentions of entities linked to "LDC2019E43:80000357"
              # NIST default aggregate confidence of ?cluster is a function of
              #      ?link_cv      # confidenceValue of asserting that ?cluster is the same as reference KB node ?link_target
              #      ?j_cv         # confidenceValue of informativeJustification
              
              # ?j_cv is used to rank informative mentions within a cluster for purposes of pooling and AP scoring.
              
              # In M18, we use the ?j_cv (confidence in the justification, e.g., confidence of _:b02) and interpret that confidence
              # as the confidence of linking the justification to the cluster; _:b02 is used *only* to represent an informative
              # mention for some cluster, even though that cluster is not referenced in _:b02. Ideally (in future), there would be
              # an aida:InformativeJustificationAssertion construct (paralleling the structure of an aida:LinkAssertion) that
              # associates a confidence to each aida:informativeJustification, and could represent the confidence of linking an
              # InformativeJustification to a cluster.
              
              # _:b12 a                        aida:TextJustification ;
              #      aida:confidence          [ a                     aida:Confidence ;
              #                                 aida:confidenceValue  "1.0"^^<http://www.w3.org/2001/XMLSchema#double> ;
              #                                 aida:system           ldc:testSystem
              #                               ] ;
              #      aida:endOffsetInclusive  "286"^^<http://www.w3.org/2001/XMLSchema#int> ;
              #      aida:privateData         [ a                 aida:PrivateData ;
              #                                 aida:jsonContent  "{\"mention\":\"M000721\"}" ;
              #                                 aida:system       ldc:testSystem
              #                               ] ;
              #      aida:source              "DE005" ;
              #      aida:sourceDocument      "D0100" ;
              #      aida:startOffset         "260"^^<http://www.w3.org/2001/XMLSchema#int> ;
              #      aida:system              ldc:testSystem .
              #
              # _:b11 a              aida:LinkAssertion ;
              #      aida:confidence [ a                     aida:Confidence ;
              #                        aida:confidenceValue  "0.498"^^xsd:double ;
              #                        aida:system           ldc:testSystem
              #                      ] ;
              #      aida:linkTarget "ldc:E0137" ;
              #      aida:system     ldc:testSystem .
              #
              # _:c12 a               aida:InformativeJustificationAssertion ;
              #       aida:confidence [ a                     aida:Confidence ;
              #                         aida:confidenceValue  "0.498"^^xsd:double ;
              #                         aida:system           ldc:testSystem
              #                       ] ;
              #      aida:informativeJustification _:b12 ;
              #      aida:system     ldc:testSystem .
              #
              # ldc:cluster-E0137     a                             aida:SameAsCluster ;
              #                       aida:informativeJustification _:c12 ;
              #                       aida:link                     _:b11 ;
              #                       aida:system                   ldc:testSystem .
              
              
              SELECT DISTINCT
                     ?docid             # sourceDocument
                     ?query_link_target # link target as part of the query
                     ?link_target       # link target in the KB matching ?query_link_target
                     ?cluster           # the ?cluster linked to ?link_target
                     ?infj_span         # informativeJustification span taken from the ?cluster
                     ?j_cv              # confidenceValue of informativeJustification
                     ?link_target       # query reference KB node linked to a ?cluster
                     ?link_cv           # confidenceValue of asserting that ?cluster is the same as reference KB node ?link_target
              
              WHERE {
                  BIND ("LDC2019E43:80000357" AS ?query_link_target)
              
                  # Find ?cluster linked to "LDC2019E43:80000357"
                  # Find the ?link_cv: confidenceValue of linking to external KB entity
                  ?cluster              a                             aida:SameAsCluster .
                  ?cluster              aida:informativeJustification ?inf_justification .
                  ?cluster              aida:link                     ?ref_kb_link .
                  ?ref_kb_link          a                             aida:LinkAssertion .
                  ?ref_kb_link          aida:linkTarget               ?link_target .
                  ?ref_kb_link          aida:confidence               ?link_confidence .
                  ?link_confidence      aida:confidenceValue          ?link_cv .
                  
                  FILTER(cfn:memberOf(str(?link_target), str(?query_link_target))) .
              
                  # Find mention spans for ?inf_justification
                  ?inf_justification    aida:source          ?doceid .
                  ?inf_justification    aida:sourceDocument  ?docid .
                  ?inf_justification    aida:confidence      ?j_confidence .
                  ?j_confidence         aida:confidenceValue ?j_cv .
              
                  OPTIONAL {
                         ?inf_justification a                           aida:TextJustification .
                         ?inf_justification aida:startOffset            ?so .
                         ?inf_justification aida:endOffsetInclusive     ?eo
                  }
                  OPTIONAL {
                         ?inf_justification a                           aida:ImageJustification .
                         ?inf_justification aida:boundingBox            ?bb1  .
                         ?bb1               aida:boundingBoxUpperLeftX  ?ulx1 .
                         ?bb1               aida:boundingBoxUpperLeftY  ?uly1 .
                         ?bb1               aida:boundingBoxLowerRightX ?lrx1 .
                         ?bb1               aida:boundingBoxLowerRightY ?lry1
                  }
                  OPTIONAL {
                         ?inf_justification a                           aida:KeyFrameVideoJustification .
                         ?inf_justification aida:keyFrame               ?kfid .
                         ?inf_justification aida:boundingBox            ?bb2  .
                         ?bb2               aida:boundingBoxUpperLeftX  ?ulx2 .
                         ?bb2               aida:boundingBoxUpperLeftY  ?uly2 .
                         ?bb2               aida:boundingBoxLowerRightX ?lrx2 .
                         ?bb2               aida:boundingBoxLowerRightY ?lry2
                  }
                  OPTIONAL {
                         ?inf_justification a                           aida:ShotVideoJustification .
                         ?inf_justification aida:shot                   ?sid
                  }
                  OPTIONAL {
                         ?inf_justification a                           aida:AudioJustification .
                         ?inf_justification aida:startTimestamp         ?st .
                         ?inf_justification aida:endTimestamp           ?et
                  }
              
                  BIND( IF( BOUND(?sid), ?sid, "__NULL__") AS ?_sid) .
                  BIND( IF( BOUND(?kfid), ?kfid, "__NULL__") AS ?_kfid) .
                  BIND( IF( BOUND(?so), ?so, "__NULL__") AS ?_so) .
                  BIND( IF( BOUND(?eo), ?eo, "__NULL__") AS ?_eo) .
                  BIND( IF( BOUND(?st), ?st, "__NULL__") AS ?_st) .
                  BIND( IF( BOUND(?et), ?et, "__NULL__") AS ?_et) .
                  BIND( COALESCE(?ulx1, ?ulx2, "__NULL__") AS ?_ulx) .
                  BIND( COALESCE(?uly1, ?uly2, "__NULL__") AS ?_uly) .
                  BIND( COALESCE(?lrx1, ?lrx2, "__NULL__") AS ?_lrx) .
                  BIND( COALESCE(?lry1, ?lry2, "__NULL__") AS ?_lry) .
              
                  BIND( cfn:getSpan(str(?docid), str(?doceid), str(?_sid), str(?_kfid), str(?_so), str(?_eo), str(?_ulx), str(?_uly), str(?_lrx), str(?_lry), str(?_st), str(?_et) ) AS ?infj_span ) .
              }
	]]>
     </sparql>
  </zerohop_query>
  <zerohop_query id="AIDA_TA2_ZH_2019_0030">
    <reference_kbid> LDC2019E43:80000358 </reference_kbid>
    <sparql>
 	<![CDATA[
              PREFIX ldcOnt: <https://tac.nist.gov/tracks/SM-KBP/2019/ontologies/LDCOntology#>
              PREFIX rdf:   <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
              PREFIX aida:  <https://tac.nist.gov/tracks/SM-KBP/2019/ontologies/InterchangeOntology#>
              PREFIX cfn:   <https://verdi.nextcentury.com/custom-function/>
              PREFIX xsd:   <http://www.w3.org/2001/XMLSchema#>
              
              # Query: AIDA_TA2_ZH_2019_0030
              # Query description: Find all informative mentions of entities linked to "LDC2019E43:80000358"
              # NIST default aggregate confidence of ?cluster is a function of
              #      ?link_cv      # confidenceValue of asserting that ?cluster is the same as reference KB node ?link_target
              #      ?j_cv         # confidenceValue of informativeJustification
              
              # ?j_cv is used to rank informative mentions within a cluster for purposes of pooling and AP scoring.
              
              # In M18, we use the ?j_cv (confidence in the justification, e.g., confidence of _:b02) and interpret that confidence
              # as the confidence of linking the justification to the cluster; _:b02 is used *only* to represent an informative
              # mention for some cluster, even though that cluster is not referenced in _:b02. Ideally (in future), there would be
              # an aida:InformativeJustificationAssertion construct (paralleling the structure of an aida:LinkAssertion) that
              # associates a confidence to each aida:informativeJustification, and could represent the confidence of linking an
              # InformativeJustification to a cluster.
              
              # _:b12 a                        aida:TextJustification ;
              #      aida:confidence          [ a                     aida:Confidence ;
              #                                 aida:confidenceValue  "1.0"^^<http://www.w3.org/2001/XMLSchema#double> ;
              #                                 aida:system           ldc:testSystem
              #                               ] ;
              #      aida:endOffsetInclusive  "286"^^<http://www.w3.org/2001/XMLSchema#int> ;
              #      aida:privateData         [ a                 aida:PrivateData ;
              #                                 aida:jsonContent  "{\"mention\":\"M000721\"}" ;
              #                                 aida:system       ldc:testSystem
              #                               ] ;
              #      aida:source              "DE005" ;
              #      aida:sourceDocument      "D0100" ;
              #      aida:startOffset         "260"^^<http://www.w3.org/2001/XMLSchema#int> ;
              #      aida:system              ldc:testSystem .
              #
              # _:b11 a              aida:LinkAssertion ;
              #      aida:confidence [ a                     aida:Confidence ;
              #                        aida:confidenceValue  "0.498"^^xsd:double ;
              #                        aida:system           ldc:testSystem
              #                      ] ;
              #      aida:linkTarget "ldc:E0137" ;
              #      aida:system     ldc:testSystem .
              #
              # _:c12 a               aida:InformativeJustificationAssertion ;
              #       aida:confidence [ a                     aida:Confidence ;
              #                         aida:confidenceValue  "0.498"^^xsd:double ;
              #                         aida:system           ldc:testSystem
              #                       ] ;
              #      aida:informativeJustification _:b12 ;
              #      aida:system     ldc:testSystem .
              #
              # ldc:cluster-E0137     a                             aida:SameAsCluster ;
              #                       aida:informativeJustification _:c12 ;
              #                       aida:link                     _:b11 ;
              #                       aida:system                   ldc:testSystem .
              
              
              SELECT DISTINCT
                     ?docid             # sourceDocument
                     ?query_link_target # link target as part of the query
                     ?link_target       # link target in the KB matching ?query_link_target
                     ?cluster           # the ?cluster linked to ?link_target
                     ?infj_span         # informativeJustification span taken from the ?cluster
                     ?j_cv              # confidenceValue of informativeJustification
                     ?link_target       # query reference KB node linked to a ?cluster
                     ?link_cv           # confidenceValue of asserting that ?cluster is the same as reference KB node ?link_target
              
              WHERE {
                  BIND ("LDC2019E43:80000358" AS ?query_link_target)
              
                  # Find ?cluster linked to "LDC2019E43:80000358"
                  # Find the ?link_cv: confidenceValue of linking to external KB entity
                  ?cluster              a                             aida:SameAsCluster .
                  ?cluster              aida:informativeJustification ?inf_justification .
                  ?cluster              aida:link                     ?ref_kb_link .
                  ?ref_kb_link          a                             aida:LinkAssertion .
                  ?ref_kb_link          aida:linkTarget               ?link_target .
                  ?ref_kb_link          aida:confidence               ?link_confidence .
                  ?link_confidence      aida:confidenceValue          ?link_cv .
                  
                  FILTER(cfn:memberOf(str(?link_target), str(?query_link_target))) .
              
                  # Find mention spans for ?inf_justification
                  ?inf_justification    aida:source          ?doceid .
                  ?inf_justification    aida:sourceDocument  ?docid .
                  ?inf_justification    aida:confidence      ?j_confidence .
                  ?j_confidence         aida:confidenceValue ?j_cv .
              
                  OPTIONAL {
                         ?inf_justification a                           aida:TextJustification .
                         ?inf_justification aida:startOffset            ?so .
                         ?inf_justification aida:endOffsetInclusive     ?eo
                  }
                  OPTIONAL {
                         ?inf_justification a                           aida:ImageJustification .
                         ?inf_justification aida:boundingBox            ?bb1  .
                         ?bb1               aida:boundingBoxUpperLeftX  ?ulx1 .
                         ?bb1               aida:boundingBoxUpperLeftY  ?uly1 .
                         ?bb1               aida:boundingBoxLowerRightX ?lrx1 .
                         ?bb1               aida:boundingBoxLowerRightY ?lry1
                  }
                  OPTIONAL {
                         ?inf_justification a                           aida:KeyFrameVideoJustification .
                         ?inf_justification aida:keyFrame               ?kfid .
                         ?inf_justification aida:boundingBox            ?bb2  .
                         ?bb2               aida:boundingBoxUpperLeftX  ?ulx2 .
                         ?bb2               aida:boundingBoxUpperLeftY  ?uly2 .
                         ?bb2               aida:boundingBoxLowerRightX ?lrx2 .
                         ?bb2               aida:boundingBoxLowerRightY ?lry2
                  }
                  OPTIONAL {
                         ?inf_justification a                           aida:ShotVideoJustification .
                         ?inf_justification aida:shot                   ?sid
                  }
                  OPTIONAL {
                         ?inf_justification a                           aida:AudioJustification .
                         ?inf_justification aida:startTimestamp         ?st .
                         ?inf_justification aida:endTimestamp           ?et
                  }
              
                  BIND( IF( BOUND(?sid), ?sid, "__NULL__") AS ?_sid) .
                  BIND( IF( BOUND(?kfid), ?kfid, "__NULL__") AS ?_kfid) .
                  BIND( IF( BOUND(?so), ?so, "__NULL__") AS ?_so) .
                  BIND( IF( BOUND(?eo), ?eo, "__NULL__") AS ?_eo) .
                  BIND( IF( BOUND(?st), ?st, "__NULL__") AS ?_st) .
                  BIND( IF( BOUND(?et), ?et, "__NULL__") AS ?_et) .
                  BIND( COALESCE(?ulx1, ?ulx2, "__NULL__") AS ?_ulx) .
                  BIND( COALESCE(?uly1, ?uly2, "__NULL__") AS ?_uly) .
                  BIND( COALESCE(?lrx1, ?lrx2, "__NULL__") AS ?_lrx) .
                  BIND( COALESCE(?lry1, ?lry2, "__NULL__") AS ?_lry) .
              
                  BIND( cfn:getSpan(str(?docid), str(?doceid), str(?_sid), str(?_kfid), str(?_so), str(?_eo), str(?_ulx), str(?_uly), str(?_lrx), str(?_lry), str(?_st), str(?_et) ) AS ?infj_span ) .
              }
	]]>
     </sparql>
  </zerohop_query>
  <zerohop_query id="AIDA_TA2_ZH_2019_0031">
    <reference_kbid> LDC2019E43:80000008 </reference_kbid>
    <sparql>
 	<![CDATA[
              PREFIX ldcOnt: <https://tac.nist.gov/tracks/SM-KBP/2019/ontologies/LDCOntology#>
              PREFIX rdf:   <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
              PREFIX aida:  <https://tac.nist.gov/tracks/SM-KBP/2019/ontologies/InterchangeOntology#>
              PREFIX cfn:   <https://verdi.nextcentury.com/custom-function/>
              PREFIX xsd:   <http://www.w3.org/2001/XMLSchema#>
              
              # Query: AIDA_TA2_ZH_2019_0031
              # Query description: Find all informative mentions of entities linked to "LDC2019E43:80000008"
              # NIST default aggregate confidence of ?cluster is a function of
              #      ?link_cv      # confidenceValue of asserting that ?cluster is the same as reference KB node ?link_target
              #      ?j_cv         # confidenceValue of informativeJustification
              
              # ?j_cv is used to rank informative mentions within a cluster for purposes of pooling and AP scoring.
              
              # In M18, we use the ?j_cv (confidence in the justification, e.g., confidence of _:b02) and interpret that confidence
              # as the confidence of linking the justification to the cluster; _:b02 is used *only* to represent an informative
              # mention for some cluster, even though that cluster is not referenced in _:b02. Ideally (in future), there would be
              # an aida:InformativeJustificationAssertion construct (paralleling the structure of an aida:LinkAssertion) that
              # associates a confidence to each aida:informativeJustification, and could represent the confidence of linking an
              # InformativeJustification to a cluster.
              
              # _:b12 a                        aida:TextJustification ;
              #      aida:confidence          [ a                     aida:Confidence ;
              #                                 aida:confidenceValue  "1.0"^^<http://www.w3.org/2001/XMLSchema#double> ;
              #                                 aida:system           ldc:testSystem
              #                               ] ;
              #      aida:endOffsetInclusive  "286"^^<http://www.w3.org/2001/XMLSchema#int> ;
              #      aida:privateData         [ a                 aida:PrivateData ;
              #                                 aida:jsonContent  "{\"mention\":\"M000721\"}" ;
              #                                 aida:system       ldc:testSystem
              #                               ] ;
              #      aida:source              "DE005" ;
              #      aida:sourceDocument      "D0100" ;
              #      aida:startOffset         "260"^^<http://www.w3.org/2001/XMLSchema#int> ;
              #      aida:system              ldc:testSystem .
              #
              # _:b11 a              aida:LinkAssertion ;
              #      aida:confidence [ a                     aida:Confidence ;
              #                        aida:confidenceValue  "0.498"^^xsd:double ;
              #                        aida:system           ldc:testSystem
              #                      ] ;
              #      aida:linkTarget "ldc:E0137" ;
              #      aida:system     ldc:testSystem .
              #
              # _:c12 a               aida:InformativeJustificationAssertion ;
              #       aida:confidence [ a                     aida:Confidence ;
              #                         aida:confidenceValue  "0.498"^^xsd:double ;
              #                         aida:system           ldc:testSystem
              #                       ] ;
              #      aida:informativeJustification _:b12 ;
              #      aida:system     ldc:testSystem .
              #
              # ldc:cluster-E0137     a                             aida:SameAsCluster ;
              #                       aida:informativeJustification _:c12 ;
              #                       aida:link                     _:b11 ;
              #                       aida:system                   ldc:testSystem .
              
              
              SELECT DISTINCT
                     ?docid             # sourceDocument
                     ?query_link_target # link target as part of the query
                     ?link_target       # link target in the KB matching ?query_link_target
                     ?cluster           # the ?cluster linked to ?link_target
                     ?infj_span         # informativeJustification span taken from the ?cluster
                     ?j_cv              # confidenceValue of informativeJustification
                     ?link_target       # query reference KB node linked to a ?cluster
                     ?link_cv           # confidenceValue of asserting that ?cluster is the same as reference KB node ?link_target
              
              WHERE {
                  BIND ("LDC2019E43:80000008" AS ?query_link_target)
              
                  # Find ?cluster linked to "LDC2019E43:80000008"
                  # Find the ?link_cv: confidenceValue of linking to external KB entity
                  ?cluster              a                             aida:SameAsCluster .
                  ?cluster              aida:informativeJustification ?inf_justification .
                  ?cluster              aida:link                     ?ref_kb_link .
                  ?ref_kb_link          a                             aida:LinkAssertion .
                  ?ref_kb_link          aida:linkTarget               ?link_target .
                  ?ref_kb_link          aida:confidence               ?link_confidence .
                  ?link_confidence      aida:confidenceValue          ?link_cv .
                  
                  FILTER(cfn:memberOf(str(?link_target), str(?query_link_target))) .
              
                  # Find mention spans for ?inf_justification
                  ?inf_justification    aida:source          ?doceid .
                  ?inf_justification    aida:sourceDocument  ?docid .
                  ?inf_justification    aida:confidence      ?j_confidence .
                  ?j_confidence         aida:confidenceValue ?j_cv .
              
                  OPTIONAL {
                         ?inf_justification a                           aida:TextJustification .
                         ?inf_justification aida:startOffset            ?so .
                         ?inf_justification aida:endOffsetInclusive     ?eo
                  }
                  OPTIONAL {
                         ?inf_justification a                           aida:ImageJustification .
                         ?inf_justification aida:boundingBox            ?bb1  .
                         ?bb1               aida:boundingBoxUpperLeftX  ?ulx1 .
                         ?bb1               aida:boundingBoxUpperLeftY  ?uly1 .
                         ?bb1               aida:boundingBoxLowerRightX ?lrx1 .
                         ?bb1               aida:boundingBoxLowerRightY ?lry1
                  }
                  OPTIONAL {
                         ?inf_justification a                           aida:KeyFrameVideoJustification .
                         ?inf_justification aida:keyFrame               ?kfid .
                         ?inf_justification aida:boundingBox            ?bb2  .
                         ?bb2               aida:boundingBoxUpperLeftX  ?ulx2 .
                         ?bb2               aida:boundingBoxUpperLeftY  ?uly2 .
                         ?bb2               aida:boundingBoxLowerRightX ?lrx2 .
                         ?bb2               aida:boundingBoxLowerRightY ?lry2
                  }
                  OPTIONAL {
                         ?inf_justification a                           aida:ShotVideoJustification .
                         ?inf_justification aida:shot                   ?sid
                  }
                  OPTIONAL {
                         ?inf_justification a                           aida:AudioJustification .
                         ?inf_justification aida:startTimestamp         ?st .
                         ?inf_justification aida:endTimestamp           ?et
                  }
              
                  BIND( IF( BOUND(?sid), ?sid, "__NULL__") AS ?_sid) .
                  BIND( IF( BOUND(?kfid), ?kfid, "__NULL__") AS ?_kfid) .
                  BIND( IF( BOUND(?so), ?so, "__NULL__") AS ?_so) .
                  BIND( IF( BOUND(?eo), ?eo, "__NULL__") AS ?_eo) .
                  BIND( IF( BOUND(?st), ?st, "__NULL__") AS ?_st) .
                  BIND( IF( BOUND(?et), ?et, "__NULL__") AS ?_et) .
                  BIND( COALESCE(?ulx1, ?ulx2, "__NULL__") AS ?_ulx) .
                  BIND( COALESCE(?uly1, ?uly2, "__NULL__") AS ?_uly) .
                  BIND( COALESCE(?lrx1, ?lrx2, "__NULL__") AS ?_lrx) .
                  BIND( COALESCE(?lry1, ?lry2, "__NULL__") AS ?_lry) .
              
                  BIND( cfn:getSpan(str(?docid), str(?doceid), str(?_sid), str(?_kfid), str(?_so), str(?_eo), str(?_ulx), str(?_uly), str(?_lrx), str(?_lry), str(?_st), str(?_et) ) AS ?infj_span ) .
              }
	]]>
     </sparql>
  </zerohop_query>
  <zerohop_query id="AIDA_TA2_ZH_2019_0032">
    <reference_kbid> LDC2019E43:80000359 </reference_kbid>
    <sparql>
 	<![CDATA[
              PREFIX ldcOnt: <https://tac.nist.gov/tracks/SM-KBP/2019/ontologies/LDCOntology#>
              PREFIX rdf:   <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
              PREFIX aida:  <https://tac.nist.gov/tracks/SM-KBP/2019/ontologies/InterchangeOntology#>
              PREFIX cfn:   <https://verdi.nextcentury.com/custom-function/>
              PREFIX xsd:   <http://www.w3.org/2001/XMLSchema#>
              
              # Query: AIDA_TA2_ZH_2019_0032
              # Query description: Find all informative mentions of entities linked to "LDC2019E43:80000359"
              # NIST default aggregate confidence of ?cluster is a function of
              #      ?link_cv      # confidenceValue of asserting that ?cluster is the same as reference KB node ?link_target
              #      ?j_cv         # confidenceValue of informativeJustification
              
              # ?j_cv is used to rank informative mentions within a cluster for purposes of pooling and AP scoring.
              
              # In M18, we use the ?j_cv (confidence in the justification, e.g., confidence of _:b02) and interpret that confidence
              # as the confidence of linking the justification to the cluster; _:b02 is used *only* to represent an informative
              # mention for some cluster, even though that cluster is not referenced in _:b02. Ideally (in future), there would be
              # an aida:InformativeJustificationAssertion construct (paralleling the structure of an aida:LinkAssertion) that
              # associates a confidence to each aida:informativeJustification, and could represent the confidence of linking an
              # InformativeJustification to a cluster.
              
              # _:b12 a                        aida:TextJustification ;
              #      aida:confidence          [ a                     aida:Confidence ;
              #                                 aida:confidenceValue  "1.0"^^<http://www.w3.org/2001/XMLSchema#double> ;
              #                                 aida:system           ldc:testSystem
              #                               ] ;
              #      aida:endOffsetInclusive  "286"^^<http://www.w3.org/2001/XMLSchema#int> ;
              #      aida:privateData         [ a                 aida:PrivateData ;
              #                                 aida:jsonContent  "{\"mention\":\"M000721\"}" ;
              #                                 aida:system       ldc:testSystem
              #                               ] ;
              #      aida:source              "DE005" ;
              #      aida:sourceDocument      "D0100" ;
              #      aida:startOffset         "260"^^<http://www.w3.org/2001/XMLSchema#int> ;
              #      aida:system              ldc:testSystem .
              #
              # _:b11 a              aida:LinkAssertion ;
              #      aida:confidence [ a                     aida:Confidence ;
              #                        aida:confidenceValue  "0.498"^^xsd:double ;
              #                        aida:system           ldc:testSystem
              #                      ] ;
              #      aida:linkTarget "ldc:E0137" ;
              #      aida:system     ldc:testSystem .
              #
              # _:c12 a               aida:InformativeJustificationAssertion ;
              #       aida:confidence [ a                     aida:Confidence ;
              #                         aida:confidenceValue  "0.498"^^xsd:double ;
              #                         aida:system           ldc:testSystem
              #                       ] ;
              #      aida:informativeJustification _:b12 ;
              #      aida:system     ldc:testSystem .
              #
              # ldc:cluster-E0137     a                             aida:SameAsCluster ;
              #                       aida:informativeJustification _:c12 ;
              #                       aida:link                     _:b11 ;
              #                       aida:system                   ldc:testSystem .
              
              
              SELECT DISTINCT
                     ?docid             # sourceDocument
                     ?query_link_target # link target as part of the query
                     ?link_target       # link target in the KB matching ?query_link_target
                     ?cluster           # the ?cluster linked to ?link_target
                     ?infj_span         # informativeJustification span taken from the ?cluster
                     ?j_cv              # confidenceValue of informativeJustification
                     ?link_target       # query reference KB node linked to a ?cluster
                     ?link_cv           # confidenceValue of asserting that ?cluster is the same as reference KB node ?link_target
              
              WHERE {
                  BIND ("LDC2019E43:80000359" AS ?query_link_target)
              
                  # Find ?cluster linked to "LDC2019E43:80000359"
                  # Find the ?link_cv: confidenceValue of linking to external KB entity
                  ?cluster              a                             aida:SameAsCluster .
                  ?cluster              aida:informativeJustification ?inf_justification .
                  ?cluster              aida:link                     ?ref_kb_link .
                  ?ref_kb_link          a                             aida:LinkAssertion .
                  ?ref_kb_link          aida:linkTarget               ?link_target .
                  ?ref_kb_link          aida:confidence               ?link_confidence .
                  ?link_confidence      aida:confidenceValue          ?link_cv .
                  
                  FILTER(cfn:memberOf(str(?link_target), str(?query_link_target))) .
              
                  # Find mention spans for ?inf_justification
                  ?inf_justification    aida:source          ?doceid .
                  ?inf_justification    aida:sourceDocument  ?docid .
                  ?inf_justification    aida:confidence      ?j_confidence .
                  ?j_confidence         aida:confidenceValue ?j_cv .
              
                  OPTIONAL {
                         ?inf_justification a                           aida:TextJustification .
                         ?inf_justification aida:startOffset            ?so .
                         ?inf_justification aida:endOffsetInclusive     ?eo
                  }
                  OPTIONAL {
                         ?inf_justification a                           aida:ImageJustification .
                         ?inf_justification aida:boundingBox            ?bb1  .
                         ?bb1               aida:boundingBoxUpperLeftX  ?ulx1 .
                         ?bb1               aida:boundingBoxUpperLeftY  ?uly1 .
                         ?bb1               aida:boundingBoxLowerRightX ?lrx1 .
                         ?bb1               aida:boundingBoxLowerRightY ?lry1
                  }
                  OPTIONAL {
                         ?inf_justification a                           aida:KeyFrameVideoJustification .
                         ?inf_justification aida:keyFrame               ?kfid .
                         ?inf_justification aida:boundingBox            ?bb2  .
                         ?bb2               aida:boundingBoxUpperLeftX  ?ulx2 .
                         ?bb2               aida:boundingBoxUpperLeftY  ?uly2 .
                         ?bb2               aida:boundingBoxLowerRightX ?lrx2 .
                         ?bb2               aida:boundingBoxLowerRightY ?lry2
                  }
                  OPTIONAL {
                         ?inf_justification a                           aida:ShotVideoJustification .
                         ?inf_justification aida:shot                   ?sid
                  }
                  OPTIONAL {
                         ?inf_justification a                           aida:AudioJustification .
                         ?inf_justification aida:startTimestamp         ?st .
                         ?inf_justification aida:endTimestamp           ?et
                  }
              
                  BIND( IF( BOUND(?sid), ?sid, "__NULL__") AS ?_sid) .
                  BIND( IF( BOUND(?kfid), ?kfid, "__NULL__") AS ?_kfid) .
                  BIND( IF( BOUND(?so), ?so, "__NULL__") AS ?_so) .
                  BIND( IF( BOUND(?eo), ?eo, "__NULL__") AS ?_eo) .
                  BIND( IF( BOUND(?st), ?st, "__NULL__") AS ?_st) .
                  BIND( IF( BOUND(?et), ?et, "__NULL__") AS ?_et) .
                  BIND( COALESCE(?ulx1, ?ulx2, "__NULL__") AS ?_ulx) .
                  BIND( COALESCE(?uly1, ?uly2, "__NULL__") AS ?_uly) .
                  BIND( COALESCE(?lrx1, ?lrx2, "__NULL__") AS ?_lrx) .
                  BIND( COALESCE(?lry1, ?lry2, "__NULL__") AS ?_lry) .
              
                  BIND( cfn:getSpan(str(?docid), str(?doceid), str(?_sid), str(?_kfid), str(?_so), str(?_eo), str(?_ulx), str(?_uly), str(?_lrx), str(?_lry), str(?_st), str(?_et) ) AS ?infj_span ) .
              }
	]]>
     </sparql>
  </zerohop_query>
  <zerohop_query id="AIDA_TA2_ZH_2019_0033">
    <reference_kbid> LDC2019E43:858911|LDC2019E43:80000037 </reference_kbid>
    <sparql>
 	<![CDATA[
              PREFIX ldcOnt: <https://tac.nist.gov/tracks/SM-KBP/2019/ontologies/LDCOntology#>
              PREFIX rdf:   <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
              PREFIX aida:  <https://tac.nist.gov/tracks/SM-KBP/2019/ontologies/InterchangeOntology#>
              PREFIX cfn:   <https://verdi.nextcentury.com/custom-function/>
              PREFIX xsd:   <http://www.w3.org/2001/XMLSchema#>
              
              # Query: AIDA_TA2_ZH_2019_0033
              # Query description: Find all informative mentions of entities linked to "LDC2019E43:858911|LDC2019E43:80000037"
              # NIST default aggregate confidence of ?cluster is a function of
              #      ?link_cv      # confidenceValue of asserting that ?cluster is the same as reference KB node ?link_target
              #      ?j_cv         # confidenceValue of informativeJustification
              
              # ?j_cv is used to rank informative mentions within a cluster for purposes of pooling and AP scoring.
              
              # In M18, we use the ?j_cv (confidence in the justification, e.g., confidence of _:b02) and interpret that confidence
              # as the confidence of linking the justification to the cluster; _:b02 is used *only* to represent an informative
              # mention for some cluster, even though that cluster is not referenced in _:b02. Ideally (in future), there would be
              # an aida:InformativeJustificationAssertion construct (paralleling the structure of an aida:LinkAssertion) that
              # associates a confidence to each aida:informativeJustification, and could represent the confidence of linking an
              # InformativeJustification to a cluster.
              
              # _:b12 a                        aida:TextJustification ;
              #      aida:confidence          [ a                     aida:Confidence ;
              #                                 aida:confidenceValue  "1.0"^^<http://www.w3.org/2001/XMLSchema#double> ;
              #                                 aida:system           ldc:testSystem
              #                               ] ;
              #      aida:endOffsetInclusive  "286"^^<http://www.w3.org/2001/XMLSchema#int> ;
              #      aida:privateData         [ a                 aida:PrivateData ;
              #                                 aida:jsonContent  "{\"mention\":\"M000721\"}" ;
              #                                 aida:system       ldc:testSystem
              #                               ] ;
              #      aida:source              "DE005" ;
              #      aida:sourceDocument      "D0100" ;
              #      aida:startOffset         "260"^^<http://www.w3.org/2001/XMLSchema#int> ;
              #      aida:system              ldc:testSystem .
              #
              # _:b11 a              aida:LinkAssertion ;
              #      aida:confidence [ a                     aida:Confidence ;
              #                        aida:confidenceValue  "0.498"^^xsd:double ;
              #                        aida:system           ldc:testSystem
              #                      ] ;
              #      aida:linkTarget "ldc:E0137" ;
              #      aida:system     ldc:testSystem .
              #
              # _:c12 a               aida:InformativeJustificationAssertion ;
              #       aida:confidence [ a                     aida:Confidence ;
              #                         aida:confidenceValue  "0.498"^^xsd:double ;
              #                         aida:system           ldc:testSystem
              #                       ] ;
              #      aida:informativeJustification _:b12 ;
              #      aida:system     ldc:testSystem .
              #
              # ldc:cluster-E0137     a                             aida:SameAsCluster ;
              #                       aida:informativeJustification _:c12 ;
              #                       aida:link                     _:b11 ;
              #                       aida:system                   ldc:testSystem .
              
              
              SELECT DISTINCT
                     ?docid             # sourceDocument
                     ?query_link_target # link target as part of the query
                     ?link_target       # link target in the KB matching ?query_link_target
                     ?cluster           # the ?cluster linked to ?link_target
                     ?infj_span         # informativeJustification span taken from the ?cluster
                     ?j_cv              # confidenceValue of informativeJustification
                     ?link_target       # query reference KB node linked to a ?cluster
                     ?link_cv           # confidenceValue of asserting that ?cluster is the same as reference KB node ?link_target
              
              WHERE {
                  BIND ("LDC2019E43:858911|LDC2019E43:80000037" AS ?query_link_target)
              
                  # Find ?cluster linked to "LDC2019E43:858911|LDC2019E43:80000037"
                  # Find the ?link_cv: confidenceValue of linking to external KB entity
                  ?cluster              a                             aida:SameAsCluster .
                  ?cluster              aida:informativeJustification ?inf_justification .
                  ?cluster              aida:link                     ?ref_kb_link .
                  ?ref_kb_link          a                             aida:LinkAssertion .
                  ?ref_kb_link          aida:linkTarget               ?link_target .
                  ?ref_kb_link          aida:confidence               ?link_confidence .
                  ?link_confidence      aida:confidenceValue          ?link_cv .
                  
                  FILTER(cfn:memberOf(str(?link_target), str(?query_link_target))) .
              
                  # Find mention spans for ?inf_justification
                  ?inf_justification    aida:source          ?doceid .
                  ?inf_justification    aida:sourceDocument  ?docid .
                  ?inf_justification    aida:confidence      ?j_confidence .
                  ?j_confidence         aida:confidenceValue ?j_cv .
              
                  OPTIONAL {
                         ?inf_justification a                           aida:TextJustification .
                         ?inf_justification aida:startOffset            ?so .
                         ?inf_justification aida:endOffsetInclusive     ?eo
                  }
                  OPTIONAL {
                         ?inf_justification a                           aida:ImageJustification .
                         ?inf_justification aida:boundingBox            ?bb1  .
                         ?bb1               aida:boundingBoxUpperLeftX  ?ulx1 .
                         ?bb1               aida:boundingBoxUpperLeftY  ?uly1 .
                         ?bb1               aida:boundingBoxLowerRightX ?lrx1 .
                         ?bb1               aida:boundingBoxLowerRightY ?lry1
                  }
                  OPTIONAL {
                         ?inf_justification a                           aida:KeyFrameVideoJustification .
                         ?inf_justification aida:keyFrame               ?kfid .
                         ?inf_justification aida:boundingBox            ?bb2  .
                         ?bb2               aida:boundingBoxUpperLeftX  ?ulx2 .
                         ?bb2               aida:boundingBoxUpperLeftY  ?uly2 .
                         ?bb2               aida:boundingBoxLowerRightX ?lrx2 .
                         ?bb2               aida:boundingBoxLowerRightY ?lry2
                  }
                  OPTIONAL {
                         ?inf_justification a                           aida:ShotVideoJustification .
                         ?inf_justification aida:shot                   ?sid
                  }
                  OPTIONAL {
                         ?inf_justification a                           aida:AudioJustification .
                         ?inf_justification aida:startTimestamp         ?st .
                         ?inf_justification aida:endTimestamp           ?et
                  }
              
                  BIND( IF( BOUND(?sid), ?sid, "__NULL__") AS ?_sid) .
                  BIND( IF( BOUND(?kfid), ?kfid, "__NULL__") AS ?_kfid) .
                  BIND( IF( BOUND(?so), ?so, "__NULL__") AS ?_so) .
                  BIND( IF( BOUND(?eo), ?eo, "__NULL__") AS ?_eo) .
                  BIND( IF( BOUND(?st), ?st, "__NULL__") AS ?_st) .
                  BIND( IF( BOUND(?et), ?et, "__NULL__") AS ?_et) .
                  BIND( COALESCE(?ulx1, ?ulx2, "__NULL__") AS ?_ulx) .
                  BIND( COALESCE(?uly1, ?uly2, "__NULL__") AS ?_uly) .
                  BIND( COALESCE(?lrx1, ?lrx2, "__NULL__") AS ?_lrx) .
                  BIND( COALESCE(?lry1, ?lry2, "__NULL__") AS ?_lry) .
              
                  BIND( cfn:getSpan(str(?docid), str(?doceid), str(?_sid), str(?_kfid), str(?_so), str(?_eo), str(?_ulx), str(?_uly), str(?_lrx), str(?_lry), str(?_st), str(?_et) ) AS ?infj_span ) .
              }
	]]>
     </sparql>
  </zerohop_query>
  <zerohop_query id="AIDA_TA2_ZH_2019_0034">
    <reference_kbid> LDC2019E43:80000130 </reference_kbid>
    <sparql>
 	<![CDATA[
              PREFIX ldcOnt: <https://tac.nist.gov/tracks/SM-KBP/2019/ontologies/LDCOntology#>
              PREFIX rdf:   <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
              PREFIX aida:  <https://tac.nist.gov/tracks/SM-KBP/2019/ontologies/InterchangeOntology#>
              PREFIX cfn:   <https://verdi.nextcentury.com/custom-function/>
              PREFIX xsd:   <http://www.w3.org/2001/XMLSchema#>
              
              # Query: AIDA_TA2_ZH_2019_0034
              # Query description: Find all informative mentions of entities linked to "LDC2019E43:80000130"
              # NIST default aggregate confidence of ?cluster is a function of
              #      ?link_cv      # confidenceValue of asserting that ?cluster is the same as reference KB node ?link_target
              #      ?j_cv         # confidenceValue of informativeJustification
              
              # ?j_cv is used to rank informative mentions within a cluster for purposes of pooling and AP scoring.
              
              # In M18, we use the ?j_cv (confidence in the justification, e.g., confidence of _:b02) and interpret that confidence
              # as the confidence of linking the justification to the cluster; _:b02 is used *only* to represent an informative
              # mention for some cluster, even though that cluster is not referenced in _:b02. Ideally (in future), there would be
              # an aida:InformativeJustificationAssertion construct (paralleling the structure of an aida:LinkAssertion) that
              # associates a confidence to each aida:informativeJustification, and could represent the confidence of linking an
              # InformativeJustification to a cluster.
              
              # _:b12 a                        aida:TextJustification ;
              #      aida:confidence          [ a                     aida:Confidence ;
              #                                 aida:confidenceValue  "1.0"^^<http://www.w3.org/2001/XMLSchema#double> ;
              #                                 aida:system           ldc:testSystem
              #                               ] ;
              #      aida:endOffsetInclusive  "286"^^<http://www.w3.org/2001/XMLSchema#int> ;
              #      aida:privateData         [ a                 aida:PrivateData ;
              #                                 aida:jsonContent  "{\"mention\":\"M000721\"}" ;
              #                                 aida:system       ldc:testSystem
              #                               ] ;
              #      aida:source              "DE005" ;
              #      aida:sourceDocument      "D0100" ;
              #      aida:startOffset         "260"^^<http://www.w3.org/2001/XMLSchema#int> ;
              #      aida:system              ldc:testSystem .
              #
              # _:b11 a              aida:LinkAssertion ;
              #      aida:confidence [ a                     aida:Confidence ;
              #                        aida:confidenceValue  "0.498"^^xsd:double ;
              #                        aida:system           ldc:testSystem
              #                      ] ;
              #      aida:linkTarget "ldc:E0137" ;
              #      aida:system     ldc:testSystem .
              #
              # _:c12 a               aida:InformativeJustificationAssertion ;
              #       aida:confidence [ a                     aida:Confidence ;
              #                         aida:confidenceValue  "0.498"^^xsd:double ;
              #                         aida:system           ldc:testSystem
              #                       ] ;
              #      aida:informativeJustification _:b12 ;
              #      aida:system     ldc:testSystem .
              #
              # ldc:cluster-E0137     a                             aida:SameAsCluster ;
              #                       aida:informativeJustification _:c12 ;
              #                       aida:link                     _:b11 ;
              #                       aida:system                   ldc:testSystem .
              
              
              SELECT DISTINCT
                     ?docid             # sourceDocument
                     ?query_link_target # link target as part of the query
                     ?link_target       # link target in the KB matching ?query_link_target
                     ?cluster           # the ?cluster linked to ?link_target
                     ?infj_span         # informativeJustification span taken from the ?cluster
                     ?j_cv              # confidenceValue of informativeJustification
                     ?link_target       # query reference KB node linked to a ?cluster
                     ?link_cv           # confidenceValue of asserting that ?cluster is the same as reference KB node ?link_target
              
              WHERE {
                  BIND ("LDC2019E43:80000130" AS ?query_link_target)
              
                  # Find ?cluster linked to "LDC2019E43:80000130"
                  # Find the ?link_cv: confidenceValue of linking to external KB entity
                  ?cluster              a                             aida:SameAsCluster .
                  ?cluster              aida:informativeJustification ?inf_justification .
                  ?cluster              aida:link                     ?ref_kb_link .
                  ?ref_kb_link          a                             aida:LinkAssertion .
                  ?ref_kb_link          aida:linkTarget               ?link_target .
                  ?ref_kb_link          aida:confidence               ?link_confidence .
                  ?link_confidence      aida:confidenceValue          ?link_cv .
                  
                  FILTER(cfn:memberOf(str(?link_target), str(?query_link_target))) .
              
                  # Find mention spans for ?inf_justification
                  ?inf_justification    aida:source          ?doceid .
                  ?inf_justification    aida:sourceDocument  ?docid .
                  ?inf_justification    aida:confidence      ?j_confidence .
                  ?j_confidence         aida:confidenceValue ?j_cv .
              
                  OPTIONAL {
                         ?inf_justification a                           aida:TextJustification .
                         ?inf_justification aida:startOffset            ?so .
                         ?inf_justification aida:endOffsetInclusive     ?eo
                  }
                  OPTIONAL {
                         ?inf_justification a                           aida:ImageJustification .
                         ?inf_justification aida:boundingBox            ?bb1  .
                         ?bb1               aida:boundingBoxUpperLeftX  ?ulx1 .
                         ?bb1               aida:boundingBoxUpperLeftY  ?uly1 .
                         ?bb1               aida:boundingBoxLowerRightX ?lrx1 .
                         ?bb1               aida:boundingBoxLowerRightY ?lry1
                  }
                  OPTIONAL {
                         ?inf_justification a                           aida:KeyFrameVideoJustification .
                         ?inf_justification aida:keyFrame               ?kfid .
                         ?inf_justification aida:boundingBox            ?bb2  .
                         ?bb2               aida:boundingBoxUpperLeftX  ?ulx2 .
                         ?bb2               aida:boundingBoxUpperLeftY  ?uly2 .
                         ?bb2               aida:boundingBoxLowerRightX ?lrx2 .
                         ?bb2               aida:boundingBoxLowerRightY ?lry2
                  }
                  OPTIONAL {
                         ?inf_justification a                           aida:ShotVideoJustification .
                         ?inf_justification aida:shot                   ?sid
                  }
                  OPTIONAL {
                         ?inf_justification a                           aida:AudioJustification .
                         ?inf_justification aida:startTimestamp         ?st .
                         ?inf_justification aida:endTimestamp           ?et
                  }
              
                  BIND( IF( BOUND(?sid), ?sid, "__NULL__") AS ?_sid) .
                  BIND( IF( BOUND(?kfid), ?kfid, "__NULL__") AS ?_kfid) .
                  BIND( IF( BOUND(?so), ?so, "__NULL__") AS ?_so) .
                  BIND( IF( BOUND(?eo), ?eo, "__NULL__") AS ?_eo) .
                  BIND( IF( BOUND(?st), ?st, "__NULL__") AS ?_st) .
                  BIND( IF( BOUND(?et), ?et, "__NULL__") AS ?_et) .
                  BIND( COALESCE(?ulx1, ?ulx2, "__NULL__") AS ?_ulx) .
                  BIND( COALESCE(?uly1, ?uly2, "__NULL__") AS ?_uly) .
                  BIND( COALESCE(?lrx1, ?lrx2, "__NULL__") AS ?_lrx) .
                  BIND( COALESCE(?lry1, ?lry2, "__NULL__") AS ?_lry) .
              
                  BIND( cfn:getSpan(str(?docid), str(?doceid), str(?_sid), str(?_kfid), str(?_so), str(?_eo), str(?_ulx), str(?_uly), str(?_lrx), str(?_lry), str(?_st), str(?_et) ) AS ?infj_span ) .
              }
	]]>
     </sparql>
  </zerohop_query>
  <zerohop_query id="AIDA_TA2_ZH_2019_0035">
    <reference_kbid> LDC2019E43:80000127 </reference_kbid>
    <sparql>
 	<![CDATA[
              PREFIX ldcOnt: <https://tac.nist.gov/tracks/SM-KBP/2019/ontologies/LDCOntology#>
              PREFIX rdf:   <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
              PREFIX aida:  <https://tac.nist.gov/tracks/SM-KBP/2019/ontologies/InterchangeOntology#>
              PREFIX cfn:   <https://verdi.nextcentury.com/custom-function/>
              PREFIX xsd:   <http://www.w3.org/2001/XMLSchema#>
              
              # Query: AIDA_TA2_ZH_2019_0035
              # Query description: Find all informative mentions of entities linked to "LDC2019E43:80000127"
              # NIST default aggregate confidence of ?cluster is a function of
              #      ?link_cv      # confidenceValue of asserting that ?cluster is the same as reference KB node ?link_target
              #      ?j_cv         # confidenceValue of informativeJustification
              
              # ?j_cv is used to rank informative mentions within a cluster for purposes of pooling and AP scoring.
              
              # In M18, we use the ?j_cv (confidence in the justification, e.g., confidence of _:b02) and interpret that confidence
              # as the confidence of linking the justification to the cluster; _:b02 is used *only* to represent an informative
              # mention for some cluster, even though that cluster is not referenced in _:b02. Ideally (in future), there would be
              # an aida:InformativeJustificationAssertion construct (paralleling the structure of an aida:LinkAssertion) that
              # associates a confidence to each aida:informativeJustification, and could represent the confidence of linking an
              # InformativeJustification to a cluster.
              
              # _:b12 a                        aida:TextJustification ;
              #      aida:confidence          [ a                     aida:Confidence ;
              #                                 aida:confidenceValue  "1.0"^^<http://www.w3.org/2001/XMLSchema#double> ;
              #                                 aida:system           ldc:testSystem
              #                               ] ;
              #      aida:endOffsetInclusive  "286"^^<http://www.w3.org/2001/XMLSchema#int> ;
              #      aida:privateData         [ a                 aida:PrivateData ;
              #                                 aida:jsonContent  "{\"mention\":\"M000721\"}" ;
              #                                 aida:system       ldc:testSystem
              #                               ] ;
              #      aida:source              "DE005" ;
              #      aida:sourceDocument      "D0100" ;
              #      aida:startOffset         "260"^^<http://www.w3.org/2001/XMLSchema#int> ;
              #      aida:system              ldc:testSystem .
              #
              # _:b11 a              aida:LinkAssertion ;
              #      aida:confidence [ a                     aida:Confidence ;
              #                        aida:confidenceValue  "0.498"^^xsd:double ;
              #                        aida:system           ldc:testSystem
              #                      ] ;
              #      aida:linkTarget "ldc:E0137" ;
              #      aida:system     ldc:testSystem .
              #
              # _:c12 a               aida:InformativeJustificationAssertion ;
              #       aida:confidence [ a                     aida:Confidence ;
              #                         aida:confidenceValue  "0.498"^^xsd:double ;
              #                         aida:system           ldc:testSystem
              #                       ] ;
              #      aida:informativeJustification _:b12 ;
              #      aida:system     ldc:testSystem .
              #
              # ldc:cluster-E0137     a                             aida:SameAsCluster ;
              #                       aida:informativeJustification _:c12 ;
              #                       aida:link                     _:b11 ;
              #                       aida:system                   ldc:testSystem .
              
              
              SELECT DISTINCT
                     ?docid             # sourceDocument
                     ?query_link_target # link target as part of the query
                     ?link_target       # link target in the KB matching ?query_link_target
                     ?cluster           # the ?cluster linked to ?link_target
                     ?infj_span         # informativeJustification span taken from the ?cluster
                     ?j_cv              # confidenceValue of informativeJustification
                     ?link_target       # query reference KB node linked to a ?cluster
                     ?link_cv           # confidenceValue of asserting that ?cluster is the same as reference KB node ?link_target
              
              WHERE {
                  BIND ("LDC2019E43:80000127" AS ?query_link_target)
              
                  # Find ?cluster linked to "LDC2019E43:80000127"
                  # Find the ?link_cv: confidenceValue of linking to external KB entity
                  ?cluster              a                             aida:SameAsCluster .
                  ?cluster              aida:informativeJustification ?inf_justification .
                  ?cluster              aida:link                     ?ref_kb_link .
                  ?ref_kb_link          a                             aida:LinkAssertion .
                  ?ref_kb_link          aida:linkTarget               ?link_target .
                  ?ref_kb_link          aida:confidence               ?link_confidence .
                  ?link_confidence      aida:confidenceValue          ?link_cv .
                  
                  FILTER(cfn:memberOf(str(?link_target), str(?query_link_target))) .
              
                  # Find mention spans for ?inf_justification
                  ?inf_justification    aida:source          ?doceid .
                  ?inf_justification    aida:sourceDocument  ?docid .
                  ?inf_justification    aida:confidence      ?j_confidence .
                  ?j_confidence         aida:confidenceValue ?j_cv .
              
                  OPTIONAL {
                         ?inf_justification a                           aida:TextJustification .
                         ?inf_justification aida:startOffset            ?so .
                         ?inf_justification aida:endOffsetInclusive     ?eo
                  }
                  OPTIONAL {
                         ?inf_justification a                           aida:ImageJustification .
                         ?inf_justification aida:boundingBox            ?bb1  .
                         ?bb1               aida:boundingBoxUpperLeftX  ?ulx1 .
                         ?bb1               aida:boundingBoxUpperLeftY  ?uly1 .
                         ?bb1               aida:boundingBoxLowerRightX ?lrx1 .
                         ?bb1               aida:boundingBoxLowerRightY ?lry1
                  }
                  OPTIONAL {
                         ?inf_justification a                           aida:KeyFrameVideoJustification .
                         ?inf_justification aida:keyFrame               ?kfid .
                         ?inf_justification aida:boundingBox            ?bb2  .
                         ?bb2               aida:boundingBoxUpperLeftX  ?ulx2 .
                         ?bb2               aida:boundingBoxUpperLeftY  ?uly2 .
                         ?bb2               aida:boundingBoxLowerRightX ?lrx2 .
                         ?bb2               aida:boundingBoxLowerRightY ?lry2
                  }
                  OPTIONAL {
                         ?inf_justification a                           aida:ShotVideoJustification .
                         ?inf_justification aida:shot                   ?sid
                  }
                  OPTIONAL {
                         ?inf_justification a                           aida:AudioJustification .
                         ?inf_justification aida:startTimestamp         ?st .
                         ?inf_justification aida:endTimestamp           ?et
                  }
              
                  BIND( IF( BOUND(?sid), ?sid, "__NULL__") AS ?_sid) .
                  BIND( IF( BOUND(?kfid), ?kfid, "__NULL__") AS ?_kfid) .
                  BIND( IF( BOUND(?so), ?so, "__NULL__") AS ?_so) .
                  BIND( IF( BOUND(?eo), ?eo, "__NULL__") AS ?_eo) .
                  BIND( IF( BOUND(?st), ?st, "__NULL__") AS ?_st) .
                  BIND( IF( BOUND(?et), ?et, "__NULL__") AS ?_et) .
                  BIND( COALESCE(?ulx1, ?ulx2, "__NULL__") AS ?_ulx) .
                  BIND( COALESCE(?uly1, ?uly2, "__NULL__") AS ?_uly) .
                  BIND( COALESCE(?lrx1, ?lrx2, "__NULL__") AS ?_lrx) .
                  BIND( COALESCE(?lry1, ?lry2, "__NULL__") AS ?_lry) .
              
                  BIND( cfn:getSpan(str(?docid), str(?doceid), str(?_sid), str(?_kfid), str(?_so), str(?_eo), str(?_ulx), str(?_uly), str(?_lrx), str(?_lry), str(?_st), str(?_et) ) AS ?infj_span ) .
              }
	]]>
     </sparql>
  </zerohop_query>
  <zerohop_query id="AIDA_TA2_ZH_2019_0036">
    <reference_kbid> LDC2019E43:80000364 </reference_kbid>
    <sparql>
 	<![CDATA[
              PREFIX ldcOnt: <https://tac.nist.gov/tracks/SM-KBP/2019/ontologies/LDCOntology#>
              PREFIX rdf:   <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
              PREFIX aida:  <https://tac.nist.gov/tracks/SM-KBP/2019/ontologies/InterchangeOntology#>
              PREFIX cfn:   <https://verdi.nextcentury.com/custom-function/>
              PREFIX xsd:   <http://www.w3.org/2001/XMLSchema#>
              
              # Query: AIDA_TA2_ZH_2019_0036
              # Query description: Find all informative mentions of entities linked to "LDC2019E43:80000364"
              # NIST default aggregate confidence of ?cluster is a function of
              #      ?link_cv      # confidenceValue of asserting that ?cluster is the same as reference KB node ?link_target
              #      ?j_cv         # confidenceValue of informativeJustification
              
              # ?j_cv is used to rank informative mentions within a cluster for purposes of pooling and AP scoring.
              
              # In M18, we use the ?j_cv (confidence in the justification, e.g., confidence of _:b02) and interpret that confidence
              # as the confidence of linking the justification to the cluster; _:b02 is used *only* to represent an informative
              # mention for some cluster, even though that cluster is not referenced in _:b02. Ideally (in future), there would be
              # an aida:InformativeJustificationAssertion construct (paralleling the structure of an aida:LinkAssertion) that
              # associates a confidence to each aida:informativeJustification, and could represent the confidence of linking an
              # InformativeJustification to a cluster.
              
              # _:b12 a                        aida:TextJustification ;
              #      aida:confidence          [ a                     aida:Confidence ;
              #                                 aida:confidenceValue  "1.0"^^<http://www.w3.org/2001/XMLSchema#double> ;
              #                                 aida:system           ldc:testSystem
              #                               ] ;
              #      aida:endOffsetInclusive  "286"^^<http://www.w3.org/2001/XMLSchema#int> ;
              #      aida:privateData         [ a                 aida:PrivateData ;
              #                                 aida:jsonContent  "{\"mention\":\"M000721\"}" ;
              #                                 aida:system       ldc:testSystem
              #                               ] ;
              #      aida:source              "DE005" ;
              #      aida:sourceDocument      "D0100" ;
              #      aida:startOffset         "260"^^<http://www.w3.org/2001/XMLSchema#int> ;
              #      aida:system              ldc:testSystem .
              #
              # _:b11 a              aida:LinkAssertion ;
              #      aida:confidence [ a                     aida:Confidence ;
              #                        aida:confidenceValue  "0.498"^^xsd:double ;
              #                        aida:system           ldc:testSystem
              #                      ] ;
              #      aida:linkTarget "ldc:E0137" ;
              #      aida:system     ldc:testSystem .
              #
              # _:c12 a               aida:InformativeJustificationAssertion ;
              #       aida:confidence [ a                     aida:Confidence ;
              #                         aida:confidenceValue  "0.498"^^xsd:double ;
              #                         aida:system           ldc:testSystem
              #                       ] ;
              #      aida:informativeJustification _:b12 ;
              #      aida:system     ldc:testSystem .
              #
              # ldc:cluster-E0137     a                             aida:SameAsCluster ;
              #                       aida:informativeJustification _:c12 ;
              #                       aida:link                     _:b11 ;
              #                       aida:system                   ldc:testSystem .
              
              
              SELECT DISTINCT
                     ?docid             # sourceDocument
                     ?query_link_target # link target as part of the query
                     ?link_target       # link target in the KB matching ?query_link_target
                     ?cluster           # the ?cluster linked to ?link_target
                     ?infj_span         # informativeJustification span taken from the ?cluster
                     ?j_cv              # confidenceValue of informativeJustification
                     ?link_target       # query reference KB node linked to a ?cluster
                     ?link_cv           # confidenceValue of asserting that ?cluster is the same as reference KB node ?link_target
              
              WHERE {
                  BIND ("LDC2019E43:80000364" AS ?query_link_target)
              
                  # Find ?cluster linked to "LDC2019E43:80000364"
                  # Find the ?link_cv: confidenceValue of linking to external KB entity
                  ?cluster              a                             aida:SameAsCluster .
                  ?cluster              aida:informativeJustification ?inf_justification .
                  ?cluster              aida:link                     ?ref_kb_link .
                  ?ref_kb_link          a                             aida:LinkAssertion .
                  ?ref_kb_link          aida:linkTarget               ?link_target .
                  ?ref_kb_link          aida:confidence               ?link_confidence .
                  ?link_confidence      aida:confidenceValue          ?link_cv .
                  
                  FILTER(cfn:memberOf(str(?link_target), str(?query_link_target))) .
              
                  # Find mention spans for ?inf_justification
                  ?inf_justification    aida:source          ?doceid .
                  ?inf_justification    aida:sourceDocument  ?docid .
                  ?inf_justification    aida:confidence      ?j_confidence .
                  ?j_confidence         aida:confidenceValue ?j_cv .
              
                  OPTIONAL {
                         ?inf_justification a                           aida:TextJustification .
                         ?inf_justification aida:startOffset            ?so .
                         ?inf_justification aida:endOffsetInclusive     ?eo
                  }
                  OPTIONAL {
                         ?inf_justification a                           aida:ImageJustification .
                         ?inf_justification aida:boundingBox            ?bb1  .
                         ?bb1               aida:boundingBoxUpperLeftX  ?ulx1 .
                         ?bb1               aida:boundingBoxUpperLeftY  ?uly1 .
                         ?bb1               aida:boundingBoxLowerRightX ?lrx1 .
                         ?bb1               aida:boundingBoxLowerRightY ?lry1
                  }
                  OPTIONAL {
                         ?inf_justification a                           aida:KeyFrameVideoJustification .
                         ?inf_justification aida:keyFrame               ?kfid .
                         ?inf_justification aida:boundingBox            ?bb2  .
                         ?bb2               aida:boundingBoxUpperLeftX  ?ulx2 .
                         ?bb2               aida:boundingBoxUpperLeftY  ?uly2 .
                         ?bb2               aida:boundingBoxLowerRightX ?lrx2 .
                         ?bb2               aida:boundingBoxLowerRightY ?lry2
                  }
                  OPTIONAL {
                         ?inf_justification a                           aida:ShotVideoJustification .
                         ?inf_justification aida:shot                   ?sid
                  }
                  OPTIONAL {
                         ?inf_justification a                           aida:AudioJustification .
                         ?inf_justification aida:startTimestamp         ?st .
                         ?inf_justification aida:endTimestamp           ?et
                  }
              
                  BIND( IF( BOUND(?sid), ?sid, "__NULL__") AS ?_sid) .
                  BIND( IF( BOUND(?kfid), ?kfid, "__NULL__") AS ?_kfid) .
                  BIND( IF( BOUND(?so), ?so, "__NULL__") AS ?_so) .
                  BIND( IF( BOUND(?eo), ?eo, "__NULL__") AS ?_eo) .
                  BIND( IF( BOUND(?st), ?st, "__NULL__") AS ?_st) .
                  BIND( IF( BOUND(?et), ?et, "__NULL__") AS ?_et) .
                  BIND( COALESCE(?ulx1, ?ulx2, "__NULL__") AS ?_ulx) .
                  BIND( COALESCE(?uly1, ?uly2, "__NULL__") AS ?_uly) .
                  BIND( COALESCE(?lrx1, ?lrx2, "__NULL__") AS ?_lrx) .
                  BIND( COALESCE(?lry1, ?lry2, "__NULL__") AS ?_lry) .
              
                  BIND( cfn:getSpan(str(?docid), str(?doceid), str(?_sid), str(?_kfid), str(?_so), str(?_eo), str(?_ulx), str(?_uly), str(?_lrx), str(?_lry), str(?_st), str(?_et) ) AS ?infj_span ) .
              }
	]]>
     </sparql>
  </zerohop_query>
  <zerohop_query id="AIDA_TA2_ZH_2019_0037">
    <reference_kbid> LDC2019E43:80000360 </reference_kbid>
    <sparql>
 	<![CDATA[
              PREFIX ldcOnt: <https://tac.nist.gov/tracks/SM-KBP/2019/ontologies/LDCOntology#>
              PREFIX rdf:   <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
              PREFIX aida:  <https://tac.nist.gov/tracks/SM-KBP/2019/ontologies/InterchangeOntology#>
              PREFIX cfn:   <https://verdi.nextcentury.com/custom-function/>
              PREFIX xsd:   <http://www.w3.org/2001/XMLSchema#>
              
              # Query: AIDA_TA2_ZH_2019_0037
              # Query description: Find all informative mentions of entities linked to "LDC2019E43:80000360"
              # NIST default aggregate confidence of ?cluster is a function of
              #      ?link_cv      # confidenceValue of asserting that ?cluster is the same as reference KB node ?link_target
              #      ?j_cv         # confidenceValue of informativeJustification
              
              # ?j_cv is used to rank informative mentions within a cluster for purposes of pooling and AP scoring.
              
              # In M18, we use the ?j_cv (confidence in the justification, e.g., confidence of _:b02) and interpret that confidence
              # as the confidence of linking the justification to the cluster; _:b02 is used *only* to represent an informative
              # mention for some cluster, even though that cluster is not referenced in _:b02. Ideally (in future), there would be
              # an aida:InformativeJustificationAssertion construct (paralleling the structure of an aida:LinkAssertion) that
              # associates a confidence to each aida:informativeJustification, and could represent the confidence of linking an
              # InformativeJustification to a cluster.
              
              # _:b12 a                        aida:TextJustification ;
              #      aida:confidence          [ a                     aida:Confidence ;
              #                                 aida:confidenceValue  "1.0"^^<http://www.w3.org/2001/XMLSchema#double> ;
              #                                 aida:system           ldc:testSystem
              #                               ] ;
              #      aida:endOffsetInclusive  "286"^^<http://www.w3.org/2001/XMLSchema#int> ;
              #      aida:privateData         [ a                 aida:PrivateData ;
              #                                 aida:jsonContent  "{\"mention\":\"M000721\"}" ;
              #                                 aida:system       ldc:testSystem
              #                               ] ;
              #      aida:source              "DE005" ;
              #      aida:sourceDocument      "D0100" ;
              #      aida:startOffset         "260"^^<http://www.w3.org/2001/XMLSchema#int> ;
              #      aida:system              ldc:testSystem .
              #
              # _:b11 a              aida:LinkAssertion ;
              #      aida:confidence [ a                     aida:Confidence ;
              #                        aida:confidenceValue  "0.498"^^xsd:double ;
              #                        aida:system           ldc:testSystem
              #                      ] ;
              #      aida:linkTarget "ldc:E0137" ;
              #      aida:system     ldc:testSystem .
              #
              # _:c12 a               aida:InformativeJustificationAssertion ;
              #       aida:confidence [ a                     aida:Confidence ;
              #                         aida:confidenceValue  "0.498"^^xsd:double ;
              #                         aida:system           ldc:testSystem
              #                       ] ;
              #      aida:informativeJustification _:b12 ;
              #      aida:system     ldc:testSystem .
              #
              # ldc:cluster-E0137     a                             aida:SameAsCluster ;
              #                       aida:informativeJustification _:c12 ;
              #                       aida:link                     _:b11 ;
              #                       aida:system                   ldc:testSystem .
              
              
              SELECT DISTINCT
                     ?docid             # sourceDocument
                     ?query_link_target # link target as part of the query
                     ?link_target       # link target in the KB matching ?query_link_target
                     ?cluster           # the ?cluster linked to ?link_target
                     ?infj_span         # informativeJustification span taken from the ?cluster
                     ?j_cv              # confidenceValue of informativeJustification
                     ?link_target       # query reference KB node linked to a ?cluster
                     ?link_cv           # confidenceValue of asserting that ?cluster is the same as reference KB node ?link_target
              
              WHERE {
                  BIND ("LDC2019E43:80000360" AS ?query_link_target)
              
                  # Find ?cluster linked to "LDC2019E43:80000360"
                  # Find the ?link_cv: confidenceValue of linking to external KB entity
                  ?cluster              a                             aida:SameAsCluster .
                  ?cluster              aida:informativeJustification ?inf_justification .
                  ?cluster              aida:link                     ?ref_kb_link .
                  ?ref_kb_link          a                             aida:LinkAssertion .
                  ?ref_kb_link          aida:linkTarget               ?link_target .
                  ?ref_kb_link          aida:confidence               ?link_confidence .
                  ?link_confidence      aida:confidenceValue          ?link_cv .
                  
                  FILTER(cfn:memberOf(str(?link_target), str(?query_link_target))) .
              
                  # Find mention spans for ?inf_justification
                  ?inf_justification    aida:source          ?doceid .
                  ?inf_justification    aida:sourceDocument  ?docid .
                  ?inf_justification    aida:confidence      ?j_confidence .
                  ?j_confidence         aida:confidenceValue ?j_cv .
              
                  OPTIONAL {
                         ?inf_justification a                           aida:TextJustification .
                         ?inf_justification aida:startOffset            ?so .
                         ?inf_justification aida:endOffsetInclusive     ?eo
                  }
                  OPTIONAL {
                         ?inf_justification a                           aida:ImageJustification .
                         ?inf_justification aida:boundingBox            ?bb1  .
                         ?bb1               aida:boundingBoxUpperLeftX  ?ulx1 .
                         ?bb1               aida:boundingBoxUpperLeftY  ?uly1 .
                         ?bb1               aida:boundingBoxLowerRightX ?lrx1 .
                         ?bb1               aida:boundingBoxLowerRightY ?lry1
                  }
                  OPTIONAL {
                         ?inf_justification a                           aida:KeyFrameVideoJustification .
                         ?inf_justification aida:keyFrame               ?kfid .
                         ?inf_justification aida:boundingBox            ?bb2  .
                         ?bb2               aida:boundingBoxUpperLeftX  ?ulx2 .
                         ?bb2               aida:boundingBoxUpperLeftY  ?uly2 .
                         ?bb2               aida:boundingBoxLowerRightX ?lrx2 .
                         ?bb2               aida:boundingBoxLowerRightY ?lry2
                  }
                  OPTIONAL {
                         ?inf_justification a                           aida:ShotVideoJustification .
                         ?inf_justification aida:shot                   ?sid
                  }
                  OPTIONAL {
                         ?inf_justification a                           aida:AudioJustification .
                         ?inf_justification aida:startTimestamp         ?st .
                         ?inf_justification aida:endTimestamp           ?et
                  }
              
                  BIND( IF( BOUND(?sid), ?sid, "__NULL__") AS ?_sid) .
                  BIND( IF( BOUND(?kfid), ?kfid, "__NULL__") AS ?_kfid) .
                  BIND( IF( BOUND(?so), ?so, "__NULL__") AS ?_so) .
                  BIND( IF( BOUND(?eo), ?eo, "__NULL__") AS ?_eo) .
                  BIND( IF( BOUND(?st), ?st, "__NULL__") AS ?_st) .
                  BIND( IF( BOUND(?et), ?et, "__NULL__") AS ?_et) .
                  BIND( COALESCE(?ulx1, ?ulx2, "__NULL__") AS ?_ulx) .
                  BIND( COALESCE(?uly1, ?uly2, "__NULL__") AS ?_uly) .
                  BIND( COALESCE(?lrx1, ?lrx2, "__NULL__") AS ?_lrx) .
                  BIND( COALESCE(?lry1, ?lry2, "__NULL__") AS ?_lry) .
              
                  BIND( cfn:getSpan(str(?docid), str(?doceid), str(?_sid), str(?_kfid), str(?_so), str(?_eo), str(?_ulx), str(?_uly), str(?_lrx), str(?_lry), str(?_st), str(?_et) ) AS ?infj_span ) .
              }
	]]>
     </sparql>
  </zerohop_query>
  <zerohop_query id="AIDA_TA2_ZH_2019_0038">
    <reference_kbid> LDC2019E43:80000319 </reference_kbid>
    <sparql>
 	<![CDATA[
              PREFIX ldcOnt: <https://tac.nist.gov/tracks/SM-KBP/2019/ontologies/LDCOntology#>
              PREFIX rdf:   <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
              PREFIX aida:  <https://tac.nist.gov/tracks/SM-KBP/2019/ontologies/InterchangeOntology#>
              PREFIX cfn:   <https://verdi.nextcentury.com/custom-function/>
              PREFIX xsd:   <http://www.w3.org/2001/XMLSchema#>
              
              # Query: AIDA_TA2_ZH_2019_0038
              # Query description: Find all informative mentions of entities linked to "LDC2019E43:80000319"
              # NIST default aggregate confidence of ?cluster is a function of
              #      ?link_cv      # confidenceValue of asserting that ?cluster is the same as reference KB node ?link_target
              #      ?j_cv         # confidenceValue of informativeJustification
              
              # ?j_cv is used to rank informative mentions within a cluster for purposes of pooling and AP scoring.
              
              # In M18, we use the ?j_cv (confidence in the justification, e.g., confidence of _:b02) and interpret that confidence
              # as the confidence of linking the justification to the cluster; _:b02 is used *only* to represent an informative
              # mention for some cluster, even though that cluster is not referenced in _:b02. Ideally (in future), there would be
              # an aida:InformativeJustificationAssertion construct (paralleling the structure of an aida:LinkAssertion) that
              # associates a confidence to each aida:informativeJustification, and could represent the confidence of linking an
              # InformativeJustification to a cluster.
              
              # _:b12 a                        aida:TextJustification ;
              #      aida:confidence          [ a                     aida:Confidence ;
              #                                 aida:confidenceValue  "1.0"^^<http://www.w3.org/2001/XMLSchema#double> ;
              #                                 aida:system           ldc:testSystem
              #                               ] ;
              #      aida:endOffsetInclusive  "286"^^<http://www.w3.org/2001/XMLSchema#int> ;
              #      aida:privateData         [ a                 aida:PrivateData ;
              #                                 aida:jsonContent  "{\"mention\":\"M000721\"}" ;
              #                                 aida:system       ldc:testSystem
              #                               ] ;
              #      aida:source              "DE005" ;
              #      aida:sourceDocument      "D0100" ;
              #      aida:startOffset         "260"^^<http://www.w3.org/2001/XMLSchema#int> ;
              #      aida:system              ldc:testSystem .
              #
              # _:b11 a              aida:LinkAssertion ;
              #      aida:confidence [ a                     aida:Confidence ;
              #                        aida:confidenceValue  "0.498"^^xsd:double ;
              #                        aida:system           ldc:testSystem
              #                      ] ;
              #      aida:linkTarget "ldc:E0137" ;
              #      aida:system     ldc:testSystem .
              #
              # _:c12 a               aida:InformativeJustificationAssertion ;
              #       aida:confidence [ a                     aida:Confidence ;
              #                         aida:confidenceValue  "0.498"^^xsd:double ;
              #                         aida:system           ldc:testSystem
              #                       ] ;
              #      aida:informativeJustification _:b12 ;
              #      aida:system     ldc:testSystem .
              #
              # ldc:cluster-E0137     a                             aida:SameAsCluster ;
              #                       aida:informativeJustification _:c12 ;
              #                       aida:link                     _:b11 ;
              #                       aida:system                   ldc:testSystem .
              
              
              SELECT DISTINCT
                     ?docid             # sourceDocument
                     ?query_link_target # link target as part of the query
                     ?link_target       # link target in the KB matching ?query_link_target
                     ?cluster           # the ?cluster linked to ?link_target
                     ?infj_span         # informativeJustification span taken from the ?cluster
                     ?j_cv              # confidenceValue of informativeJustification
                     ?link_target       # query reference KB node linked to a ?cluster
                     ?link_cv           # confidenceValue of asserting that ?cluster is the same as reference KB node ?link_target
              
              WHERE {
                  BIND ("LDC2019E43:80000319" AS ?query_link_target)
              
                  # Find ?cluster linked to "LDC2019E43:80000319"
                  # Find the ?link_cv: confidenceValue of linking to external KB entity
                  ?cluster              a                             aida:SameAsCluster .
                  ?cluster              aida:informativeJustification ?inf_justification .
                  ?cluster              aida:link                     ?ref_kb_link .
                  ?ref_kb_link          a                             aida:LinkAssertion .
                  ?ref_kb_link          aida:linkTarget               ?link_target .
                  ?ref_kb_link          aida:confidence               ?link_confidence .
                  ?link_confidence      aida:confidenceValue          ?link_cv .
                  
                  FILTER(cfn:memberOf(str(?link_target), str(?query_link_target))) .
              
                  # Find mention spans for ?inf_justification
                  ?inf_justification    aida:source          ?doceid .
                  ?inf_justification    aida:sourceDocument  ?docid .
                  ?inf_justification    aida:confidence      ?j_confidence .
                  ?j_confidence         aida:confidenceValue ?j_cv .
              
                  OPTIONAL {
                         ?inf_justification a                           aida:TextJustification .
                         ?inf_justification aida:startOffset            ?so .
                         ?inf_justification aida:endOffsetInclusive     ?eo
                  }
                  OPTIONAL {
                         ?inf_justification a                           aida:ImageJustification .
                         ?inf_justification aida:boundingBox            ?bb1  .
                         ?bb1               aida:boundingBoxUpperLeftX  ?ulx1 .
                         ?bb1               aida:boundingBoxUpperLeftY  ?uly1 .
                         ?bb1               aida:boundingBoxLowerRightX ?lrx1 .
                         ?bb1               aida:boundingBoxLowerRightY ?lry1
                  }
                  OPTIONAL {
                         ?inf_justification a                           aida:KeyFrameVideoJustification .
                         ?inf_justification aida:keyFrame               ?kfid .
                         ?inf_justification aida:boundingBox            ?bb2  .
                         ?bb2               aida:boundingBoxUpperLeftX  ?ulx2 .
                         ?bb2               aida:boundingBoxUpperLeftY  ?uly2 .
                         ?bb2               aida:boundingBoxLowerRightX ?lrx2 .
                         ?bb2               aida:boundingBoxLowerRightY ?lry2
                  }
                  OPTIONAL {
                         ?inf_justification a                           aida:ShotVideoJustification .
                         ?inf_justification aida:shot                   ?sid
                  }
                  OPTIONAL {
                         ?inf_justification a                           aida:AudioJustification .
                         ?inf_justification aida:startTimestamp         ?st .
                         ?inf_justification aida:endTimestamp           ?et
                  }
              
                  BIND( IF( BOUND(?sid), ?sid, "__NULL__") AS ?_sid) .
                  BIND( IF( BOUND(?kfid), ?kfid, "__NULL__") AS ?_kfid) .
                  BIND( IF( BOUND(?so), ?so, "__NULL__") AS ?_so) .
                  BIND( IF( BOUND(?eo), ?eo, "__NULL__") AS ?_eo) .
                  BIND( IF( BOUND(?st), ?st, "__NULL__") AS ?_st) .
                  BIND( IF( BOUND(?et), ?et, "__NULL__") AS ?_et) .
                  BIND( COALESCE(?ulx1, ?ulx2, "__NULL__") AS ?_ulx) .
                  BIND( COALESCE(?uly1, ?uly2, "__NULL__") AS ?_uly) .
                  BIND( COALESCE(?lrx1, ?lrx2, "__NULL__") AS ?_lrx) .
                  BIND( COALESCE(?lry1, ?lry2, "__NULL__") AS ?_lry) .
              
                  BIND( cfn:getSpan(str(?docid), str(?doceid), str(?_sid), str(?_kfid), str(?_so), str(?_eo), str(?_ulx), str(?_uly), str(?_lrx), str(?_lry), str(?_st), str(?_et) ) AS ?infj_span ) .
              }
	]]>
     </sparql>
  </zerohop_query>
  <zerohop_query id="AIDA_TA2_ZH_2019_0039">
    <reference_kbid> LDC2019E43:80000003 </reference_kbid>
    <sparql>
 	<![CDATA[
              PREFIX ldcOnt: <https://tac.nist.gov/tracks/SM-KBP/2019/ontologies/LDCOntology#>
              PREFIX rdf:   <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
              PREFIX aida:  <https://tac.nist.gov/tracks/SM-KBP/2019/ontologies/InterchangeOntology#>
              PREFIX cfn:   <https://verdi.nextcentury.com/custom-function/>
              PREFIX xsd:   <http://www.w3.org/2001/XMLSchema#>
              
              # Query: AIDA_TA2_ZH_2019_0039
              # Query description: Find all informative mentions of entities linked to "LDC2019E43:80000003"
              # NIST default aggregate confidence of ?cluster is a function of
              #      ?link_cv      # confidenceValue of asserting that ?cluster is the same as reference KB node ?link_target
              #      ?j_cv         # confidenceValue of informativeJustification
              
              # ?j_cv is used to rank informative mentions within a cluster for purposes of pooling and AP scoring.
              
              # In M18, we use the ?j_cv (confidence in the justification, e.g., confidence of _:b02) and interpret that confidence
              # as the confidence of linking the justification to the cluster; _:b02 is used *only* to represent an informative
              # mention for some cluster, even though that cluster is not referenced in _:b02. Ideally (in future), there would be
              # an aida:InformativeJustificationAssertion construct (paralleling the structure of an aida:LinkAssertion) that
              # associates a confidence to each aida:informativeJustification, and could represent the confidence of linking an
              # InformativeJustification to a cluster.
              
              # _:b12 a                        aida:TextJustification ;
              #      aida:confidence          [ a                     aida:Confidence ;
              #                                 aida:confidenceValue  "1.0"^^<http://www.w3.org/2001/XMLSchema#double> ;
              #                                 aida:system           ldc:testSystem
              #                               ] ;
              #      aida:endOffsetInclusive  "286"^^<http://www.w3.org/2001/XMLSchema#int> ;
              #      aida:privateData         [ a                 aida:PrivateData ;
              #                                 aida:jsonContent  "{\"mention\":\"M000721\"}" ;
              #                                 aida:system       ldc:testSystem
              #                               ] ;
              #      aida:source              "DE005" ;
              #      aida:sourceDocument      "D0100" ;
              #      aida:startOffset         "260"^^<http://www.w3.org/2001/XMLSchema#int> ;
              #      aida:system              ldc:testSystem .
              #
              # _:b11 a              aida:LinkAssertion ;
              #      aida:confidence [ a                     aida:Confidence ;
              #                        aida:confidenceValue  "0.498"^^xsd:double ;
              #                        aida:system           ldc:testSystem
              #                      ] ;
              #      aida:linkTarget "ldc:E0137" ;
              #      aida:system     ldc:testSystem .
              #
              # _:c12 a               aida:InformativeJustificationAssertion ;
              #       aida:confidence [ a                     aida:Confidence ;
              #                         aida:confidenceValue  "0.498"^^xsd:double ;
              #                         aida:system           ldc:testSystem
              #                       ] ;
              #      aida:informativeJustification _:b12 ;
              #      aida:system     ldc:testSystem .
              #
              # ldc:cluster-E0137     a                             aida:SameAsCluster ;
              #                       aida:informativeJustification _:c12 ;
              #                       aida:link                     _:b11 ;
              #                       aida:system                   ldc:testSystem .
              
              
              SELECT DISTINCT
                     ?docid             # sourceDocument
                     ?query_link_target # link target as part of the query
                     ?link_target       # link target in the KB matching ?query_link_target
                     ?cluster           # the ?cluster linked to ?link_target
                     ?infj_span         # informativeJustification span taken from the ?cluster
                     ?j_cv              # confidenceValue of informativeJustification
                     ?link_target       # query reference KB node linked to a ?cluster
                     ?link_cv           # confidenceValue of asserting that ?cluster is the same as reference KB node ?link_target
              
              WHERE {
                  BIND ("LDC2019E43:80000003" AS ?query_link_target)
              
                  # Find ?cluster linked to "LDC2019E43:80000003"
                  # Find the ?link_cv: confidenceValue of linking to external KB entity
                  ?cluster              a                             aida:SameAsCluster .
                  ?cluster              aida:informativeJustification ?inf_justification .
                  ?cluster              aida:link                     ?ref_kb_link .
                  ?ref_kb_link          a                             aida:LinkAssertion .
                  ?ref_kb_link          aida:linkTarget               ?link_target .
                  ?ref_kb_link          aida:confidence               ?link_confidence .
                  ?link_confidence      aida:confidenceValue          ?link_cv .
                  
                  FILTER(cfn:memberOf(str(?link_target), str(?query_link_target))) .
              
                  # Find mention spans for ?inf_justification
                  ?inf_justification    aida:source          ?doceid .
                  ?inf_justification    aida:sourceDocument  ?docid .
                  ?inf_justification    aida:confidence      ?j_confidence .
                  ?j_confidence         aida:confidenceValue ?j_cv .
              
                  OPTIONAL {
                         ?inf_justification a                           aida:TextJustification .
                         ?inf_justification aida:startOffset            ?so .
                         ?inf_justification aida:endOffsetInclusive     ?eo
                  }
                  OPTIONAL {
                         ?inf_justification a                           aida:ImageJustification .
                         ?inf_justification aida:boundingBox            ?bb1  .
                         ?bb1               aida:boundingBoxUpperLeftX  ?ulx1 .
                         ?bb1               aida:boundingBoxUpperLeftY  ?uly1 .
                         ?bb1               aida:boundingBoxLowerRightX ?lrx1 .
                         ?bb1               aida:boundingBoxLowerRightY ?lry1
                  }
                  OPTIONAL {
                         ?inf_justification a                           aida:KeyFrameVideoJustification .
                         ?inf_justification aida:keyFrame               ?kfid .
                         ?inf_justification aida:boundingBox            ?bb2  .
                         ?bb2               aida:boundingBoxUpperLeftX  ?ulx2 .
                         ?bb2               aida:boundingBoxUpperLeftY  ?uly2 .
                         ?bb2               aida:boundingBoxLowerRightX ?lrx2 .
                         ?bb2               aida:boundingBoxLowerRightY ?lry2
                  }
                  OPTIONAL {
                         ?inf_justification a                           aida:ShotVideoJustification .
                         ?inf_justification aida:shot                   ?sid
                  }
                  OPTIONAL {
                         ?inf_justification a                           aida:AudioJustification .
                         ?inf_justification aida:startTimestamp         ?st .
                         ?inf_justification aida:endTimestamp           ?et
                  }
              
                  BIND( IF( BOUND(?sid), ?sid, "__NULL__") AS ?_sid) .
                  BIND( IF( BOUND(?kfid), ?kfid, "__NULL__") AS ?_kfid) .
                  BIND( IF( BOUND(?so), ?so, "__NULL__") AS ?_so) .
                  BIND( IF( BOUND(?eo), ?eo, "__NULL__") AS ?_eo) .
                  BIND( IF( BOUND(?st), ?st, "__NULL__") AS ?_st) .
                  BIND( IF( BOUND(?et), ?et, "__NULL__") AS ?_et) .
                  BIND( COALESCE(?ulx1, ?ulx2, "__NULL__") AS ?_ulx) .
                  BIND( COALESCE(?uly1, ?uly2, "__NULL__") AS ?_uly) .
                  BIND( COALESCE(?lrx1, ?lrx2, "__NULL__") AS ?_lrx) .
                  BIND( COALESCE(?lry1, ?lry2, "__NULL__") AS ?_lry) .
              
                  BIND( cfn:getSpan(str(?docid), str(?doceid), str(?_sid), str(?_kfid), str(?_so), str(?_eo), str(?_ulx), str(?_uly), str(?_lrx), str(?_lry), str(?_st), str(?_et) ) AS ?infj_span ) .
              }
	]]>
     </sparql>
  </zerohop_query>
  <zerohop_query id="AIDA_TA2_ZH_2019_0040">
    <reference_kbid> LDC2019E43:80000006 </reference_kbid>
    <sparql>
 	<![CDATA[
              PREFIX ldcOnt: <https://tac.nist.gov/tracks/SM-KBP/2019/ontologies/LDCOntology#>
              PREFIX rdf:   <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
              PREFIX aida:  <https://tac.nist.gov/tracks/SM-KBP/2019/ontologies/InterchangeOntology#>
              PREFIX cfn:   <https://verdi.nextcentury.com/custom-function/>
              PREFIX xsd:   <http://www.w3.org/2001/XMLSchema#>
              
              # Query: AIDA_TA2_ZH_2019_0040
              # Query description: Find all informative mentions of entities linked to "LDC2019E43:80000006"
              # NIST default aggregate confidence of ?cluster is a function of
              #      ?link_cv      # confidenceValue of asserting that ?cluster is the same as reference KB node ?link_target
              #      ?j_cv         # confidenceValue of informativeJustification
              
              # ?j_cv is used to rank informative mentions within a cluster for purposes of pooling and AP scoring.
              
              # In M18, we use the ?j_cv (confidence in the justification, e.g., confidence of _:b02) and interpret that confidence
              # as the confidence of linking the justification to the cluster; _:b02 is used *only* to represent an informative
              # mention for some cluster, even though that cluster is not referenced in _:b02. Ideally (in future), there would be
              # an aida:InformativeJustificationAssertion construct (paralleling the structure of an aida:LinkAssertion) that
              # associates a confidence to each aida:informativeJustification, and could represent the confidence of linking an
              # InformativeJustification to a cluster.
              
              # _:b12 a                        aida:TextJustification ;
              #      aida:confidence          [ a                     aida:Confidence ;
              #                                 aida:confidenceValue  "1.0"^^<http://www.w3.org/2001/XMLSchema#double> ;
              #                                 aida:system           ldc:testSystem
              #                               ] ;
              #      aida:endOffsetInclusive  "286"^^<http://www.w3.org/2001/XMLSchema#int> ;
              #      aida:privateData         [ a                 aida:PrivateData ;
              #                                 aida:jsonContent  "{\"mention\":\"M000721\"}" ;
              #                                 aida:system       ldc:testSystem
              #                               ] ;
              #      aida:source              "DE005" ;
              #      aida:sourceDocument      "D0100" ;
              #      aida:startOffset         "260"^^<http://www.w3.org/2001/XMLSchema#int> ;
              #      aida:system              ldc:testSystem .
              #
              # _:b11 a              aida:LinkAssertion ;
              #      aida:confidence [ a                     aida:Confidence ;
              #                        aida:confidenceValue  "0.498"^^xsd:double ;
              #                        aida:system           ldc:testSystem
              #                      ] ;
              #      aida:linkTarget "ldc:E0137" ;
              #      aida:system     ldc:testSystem .
              #
              # _:c12 a               aida:InformativeJustificationAssertion ;
              #       aida:confidence [ a                     aida:Confidence ;
              #                         aida:confidenceValue  "0.498"^^xsd:double ;
              #                         aida:system           ldc:testSystem
              #                       ] ;
              #      aida:informativeJustification _:b12 ;
              #      aida:system     ldc:testSystem .
              #
              # ldc:cluster-E0137     a                             aida:SameAsCluster ;
              #                       aida:informativeJustification _:c12 ;
              #                       aida:link                     _:b11 ;
              #                       aida:system                   ldc:testSystem .
              
              
              SELECT DISTINCT
                     ?docid             # sourceDocument
                     ?query_link_target # link target as part of the query
                     ?link_target       # link target in the KB matching ?query_link_target
                     ?cluster           # the ?cluster linked to ?link_target
                     ?infj_span         # informativeJustification span taken from the ?cluster
                     ?j_cv              # confidenceValue of informativeJustification
                     ?link_target       # query reference KB node linked to a ?cluster
                     ?link_cv           # confidenceValue of asserting that ?cluster is the same as reference KB node ?link_target
              
              WHERE {
                  BIND ("LDC2019E43:80000006" AS ?query_link_target)
              
                  # Find ?cluster linked to "LDC2019E43:80000006"
                  # Find the ?link_cv: confidenceValue of linking to external KB entity
                  ?cluster              a                             aida:SameAsCluster .
                  ?cluster              aida:informativeJustification ?inf_justification .
                  ?cluster              aida:link                     ?ref_kb_link .
                  ?ref_kb_link          a                             aida:LinkAssertion .
                  ?ref_kb_link          aida:linkTarget               ?link_target .
                  ?ref_kb_link          aida:confidence               ?link_confidence .
                  ?link_confidence      aida:confidenceValue          ?link_cv .
                  
                  FILTER(cfn:memberOf(str(?link_target), str(?query_link_target))) .
              
                  # Find mention spans for ?inf_justification
                  ?inf_justification    aida:source          ?doceid .
                  ?inf_justification    aida:sourceDocument  ?docid .
                  ?inf_justification    aida:confidence      ?j_confidence .
                  ?j_confidence         aida:confidenceValue ?j_cv .
              
                  OPTIONAL {
                         ?inf_justification a                           aida:TextJustification .
                         ?inf_justification aida:startOffset            ?so .
                         ?inf_justification aida:endOffsetInclusive     ?eo
                  }
                  OPTIONAL {
                         ?inf_justification a                           aida:ImageJustification .
                         ?inf_justification aida:boundingBox            ?bb1  .
                         ?bb1               aida:boundingBoxUpperLeftX  ?ulx1 .
                         ?bb1               aida:boundingBoxUpperLeftY  ?uly1 .
                         ?bb1               aida:boundingBoxLowerRightX ?lrx1 .
                         ?bb1               aida:boundingBoxLowerRightY ?lry1
                  }
                  OPTIONAL {
                         ?inf_justification a                           aida:KeyFrameVideoJustification .
                         ?inf_justification aida:keyFrame               ?kfid .
                         ?inf_justification aida:boundingBox            ?bb2  .
                         ?bb2               aida:boundingBoxUpperLeftX  ?ulx2 .
                         ?bb2               aida:boundingBoxUpperLeftY  ?uly2 .
                         ?bb2               aida:boundingBoxLowerRightX ?lrx2 .
                         ?bb2               aida:boundingBoxLowerRightY ?lry2
                  }
                  OPTIONAL {
                         ?inf_justification a                           aida:ShotVideoJustification .
                         ?inf_justification aida:shot                   ?sid
                  }
                  OPTIONAL {
                         ?inf_justification a                           aida:AudioJustification .
                         ?inf_justification aida:startTimestamp         ?st .
                         ?inf_justification aida:endTimestamp           ?et
                  }
              
                  BIND( IF( BOUND(?sid), ?sid, "__NULL__") AS ?_sid) .
                  BIND( IF( BOUND(?kfid), ?kfid, "__NULL__") AS ?_kfid) .
                  BIND( IF( BOUND(?so), ?so, "__NULL__") AS ?_so) .
                  BIND( IF( BOUND(?eo), ?eo, "__NULL__") AS ?_eo) .
                  BIND( IF( BOUND(?st), ?st, "__NULL__") AS ?_st) .
                  BIND( IF( BOUND(?et), ?et, "__NULL__") AS ?_et) .
                  BIND( COALESCE(?ulx1, ?ulx2, "__NULL__") AS ?_ulx) .
                  BIND( COALESCE(?uly1, ?uly2, "__NULL__") AS ?_uly) .
                  BIND( COALESCE(?lrx1, ?lrx2, "__NULL__") AS ?_lrx) .
                  BIND( COALESCE(?lry1, ?lry2, "__NULL__") AS ?_lry) .
              
                  BIND( cfn:getSpan(str(?docid), str(?doceid), str(?_sid), str(?_kfid), str(?_so), str(?_eo), str(?_ulx), str(?_uly), str(?_lrx), str(?_lry), str(?_st), str(?_et) ) AS ?infj_span ) .
              }
	]]>
     </sparql>
  </zerohop_query>
  <zerohop_query id="AIDA_TA2_ZH_2019_0041">
    <reference_kbid> LDC2019E43:80000069 </reference_kbid>
    <sparql>
 	<![CDATA[
              PREFIX ldcOnt: <https://tac.nist.gov/tracks/SM-KBP/2019/ontologies/LDCOntology#>
              PREFIX rdf:   <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
              PREFIX aida:  <https://tac.nist.gov/tracks/SM-KBP/2019/ontologies/InterchangeOntology#>
              PREFIX cfn:   <https://verdi.nextcentury.com/custom-function/>
              PREFIX xsd:   <http://www.w3.org/2001/XMLSchema#>
              
              # Query: AIDA_TA2_ZH_2019_0041
              # Query description: Find all informative mentions of entities linked to "LDC2019E43:80000069"
              # NIST default aggregate confidence of ?cluster is a function of
              #      ?link_cv      # confidenceValue of asserting that ?cluster is the same as reference KB node ?link_target
              #      ?j_cv         # confidenceValue of informativeJustification
              
              # ?j_cv is used to rank informative mentions within a cluster for purposes of pooling and AP scoring.
              
              # In M18, we use the ?j_cv (confidence in the justification, e.g., confidence of _:b02) and interpret that confidence
              # as the confidence of linking the justification to the cluster; _:b02 is used *only* to represent an informative
              # mention for some cluster, even though that cluster is not referenced in _:b02. Ideally (in future), there would be
              # an aida:InformativeJustificationAssertion construct (paralleling the structure of an aida:LinkAssertion) that
              # associates a confidence to each aida:informativeJustification, and could represent the confidence of linking an
              # InformativeJustification to a cluster.
              
              # _:b12 a                        aida:TextJustification ;
              #      aida:confidence          [ a                     aida:Confidence ;
              #                                 aida:confidenceValue  "1.0"^^<http://www.w3.org/2001/XMLSchema#double> ;
              #                                 aida:system           ldc:testSystem
              #                               ] ;
              #      aida:endOffsetInclusive  "286"^^<http://www.w3.org/2001/XMLSchema#int> ;
              #      aida:privateData         [ a                 aida:PrivateData ;
              #                                 aida:jsonContent  "{\"mention\":\"M000721\"}" ;
              #                                 aida:system       ldc:testSystem
              #                               ] ;
              #      aida:source              "DE005" ;
              #      aida:sourceDocument      "D0100" ;
              #      aida:startOffset         "260"^^<http://www.w3.org/2001/XMLSchema#int> ;
              #      aida:system              ldc:testSystem .
              #
              # _:b11 a              aida:LinkAssertion ;
              #      aida:confidence [ a                     aida:Confidence ;
              #                        aida:confidenceValue  "0.498"^^xsd:double ;
              #                        aida:system           ldc:testSystem
              #                      ] ;
              #      aida:linkTarget "ldc:E0137" ;
              #      aida:system     ldc:testSystem .
              #
              # _:c12 a               aida:InformativeJustificationAssertion ;
              #       aida:confidence [ a                     aida:Confidence ;
              #                         aida:confidenceValue  "0.498"^^xsd:double ;
              #                         aida:system           ldc:testSystem
              #                       ] ;
              #      aida:informativeJustification _:b12 ;
              #      aida:system     ldc:testSystem .
              #
              # ldc:cluster-E0137     a                             aida:SameAsCluster ;
              #                       aida:informativeJustification _:c12 ;
              #                       aida:link                     _:b11 ;
              #                       aida:system                   ldc:testSystem .
              
              
              SELECT DISTINCT
                     ?docid             # sourceDocument
                     ?query_link_target # link target as part of the query
                     ?link_target       # link target in the KB matching ?query_link_target
                     ?cluster           # the ?cluster linked to ?link_target
                     ?infj_span         # informativeJustification span taken from the ?cluster
                     ?j_cv              # confidenceValue of informativeJustification
                     ?link_target       # query reference KB node linked to a ?cluster
                     ?link_cv           # confidenceValue of asserting that ?cluster is the same as reference KB node ?link_target
              
              WHERE {
                  BIND ("LDC2019E43:80000069" AS ?query_link_target)
              
                  # Find ?cluster linked to "LDC2019E43:80000069"
                  # Find the ?link_cv: confidenceValue of linking to external KB entity
                  ?cluster              a                             aida:SameAsCluster .
                  ?cluster              aida:informativeJustification ?inf_justification .
                  ?cluster              aida:link                     ?ref_kb_link .
                  ?ref_kb_link          a                             aida:LinkAssertion .
                  ?ref_kb_link          aida:linkTarget               ?link_target .
                  ?ref_kb_link          aida:confidence               ?link_confidence .
                  ?link_confidence      aida:confidenceValue          ?link_cv .
                  
                  FILTER(cfn:memberOf(str(?link_target), str(?query_link_target))) .
              
                  # Find mention spans for ?inf_justification
                  ?inf_justification    aida:source          ?doceid .
                  ?inf_justification    aida:sourceDocument  ?docid .
                  ?inf_justification    aida:confidence      ?j_confidence .
                  ?j_confidence         aida:confidenceValue ?j_cv .
              
                  OPTIONAL {
                         ?inf_justification a                           aida:TextJustification .
                         ?inf_justification aida:startOffset            ?so .
                         ?inf_justification aida:endOffsetInclusive     ?eo
                  }
                  OPTIONAL {
                         ?inf_justification a                           aida:ImageJustification .
                         ?inf_justification aida:boundingBox            ?bb1  .
                         ?bb1               aida:boundingBoxUpperLeftX  ?ulx1 .
                         ?bb1               aida:boundingBoxUpperLeftY  ?uly1 .
                         ?bb1               aida:boundingBoxLowerRightX ?lrx1 .
                         ?bb1               aida:boundingBoxLowerRightY ?lry1
                  }
                  OPTIONAL {
                         ?inf_justification a                           aida:KeyFrameVideoJustification .
                         ?inf_justification aida:keyFrame               ?kfid .
                         ?inf_justification aida:boundingBox            ?bb2  .
                         ?bb2               aida:boundingBoxUpperLeftX  ?ulx2 .
                         ?bb2               aida:boundingBoxUpperLeftY  ?uly2 .
                         ?bb2               aida:boundingBoxLowerRightX ?lrx2 .
                         ?bb2               aida:boundingBoxLowerRightY ?lry2
                  }
                  OPTIONAL {
                         ?inf_justification a                           aida:ShotVideoJustification .
                         ?inf_justification aida:shot                   ?sid
                  }
                  OPTIONAL {
                         ?inf_justification a                           aida:AudioJustification .
                         ?inf_justification aida:startTimestamp         ?st .
                         ?inf_justification aida:endTimestamp           ?et
                  }
              
                  BIND( IF( BOUND(?sid), ?sid, "__NULL__") AS ?_sid) .
                  BIND( IF( BOUND(?kfid), ?kfid, "__NULL__") AS ?_kfid) .
                  BIND( IF( BOUND(?so), ?so, "__NULL__") AS ?_so) .
                  BIND( IF( BOUND(?eo), ?eo, "__NULL__") AS ?_eo) .
                  BIND( IF( BOUND(?st), ?st, "__NULL__") AS ?_st) .
                  BIND( IF( BOUND(?et), ?et, "__NULL__") AS ?_et) .
                  BIND( COALESCE(?ulx1, ?ulx2, "__NULL__") AS ?_ulx) .
                  BIND( COALESCE(?uly1, ?uly2, "__NULL__") AS ?_uly) .
                  BIND( COALESCE(?lrx1, ?lrx2, "__NULL__") AS ?_lrx) .
                  BIND( COALESCE(?lry1, ?lry2, "__NULL__") AS ?_lry) .
              
                  BIND( cfn:getSpan(str(?docid), str(?doceid), str(?_sid), str(?_kfid), str(?_so), str(?_eo), str(?_ulx), str(?_uly), str(?_lrx), str(?_lry), str(?_st), str(?_et) ) AS ?infj_span ) .
              }
	]]>
     </sparql>
  </zerohop_query>
  <zerohop_query id="AIDA_TA2_ZH_2019_0042">
    <reference_kbid> LDC2019E43:6252001|LDC2019E43:80000038 </reference_kbid>
    <sparql>
 	<![CDATA[
              PREFIX ldcOnt: <https://tac.nist.gov/tracks/SM-KBP/2019/ontologies/LDCOntology#>
              PREFIX rdf:   <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
              PREFIX aida:  <https://tac.nist.gov/tracks/SM-KBP/2019/ontologies/InterchangeOntology#>
              PREFIX cfn:   <https://verdi.nextcentury.com/custom-function/>
              PREFIX xsd:   <http://www.w3.org/2001/XMLSchema#>
              
              # Query: AIDA_TA2_ZH_2019_0042
              # Query description: Find all informative mentions of entities linked to "LDC2019E43:6252001|LDC2019E43:80000038"
              # NIST default aggregate confidence of ?cluster is a function of
              #      ?link_cv      # confidenceValue of asserting that ?cluster is the same as reference KB node ?link_target
              #      ?j_cv         # confidenceValue of informativeJustification
              
              # ?j_cv is used to rank informative mentions within a cluster for purposes of pooling and AP scoring.
              
              # In M18, we use the ?j_cv (confidence in the justification, e.g., confidence of _:b02) and interpret that confidence
              # as the confidence of linking the justification to the cluster; _:b02 is used *only* to represent an informative
              # mention for some cluster, even though that cluster is not referenced in _:b02. Ideally (in future), there would be
              # an aida:InformativeJustificationAssertion construct (paralleling the structure of an aida:LinkAssertion) that
              # associates a confidence to each aida:informativeJustification, and could represent the confidence of linking an
              # InformativeJustification to a cluster.
              
              # _:b12 a                        aida:TextJustification ;
              #      aida:confidence          [ a                     aida:Confidence ;
              #                                 aida:confidenceValue  "1.0"^^<http://www.w3.org/2001/XMLSchema#double> ;
              #                                 aida:system           ldc:testSystem
              #                               ] ;
              #      aida:endOffsetInclusive  "286"^^<http://www.w3.org/2001/XMLSchema#int> ;
              #      aida:privateData         [ a                 aida:PrivateData ;
              #                                 aida:jsonContent  "{\"mention\":\"M000721\"}" ;
              #                                 aida:system       ldc:testSystem
              #                               ] ;
              #      aida:source              "DE005" ;
              #      aida:sourceDocument      "D0100" ;
              #      aida:startOffset         "260"^^<http://www.w3.org/2001/XMLSchema#int> ;
              #      aida:system              ldc:testSystem .
              #
              # _:b11 a              aida:LinkAssertion ;
              #      aida:confidence [ a                     aida:Confidence ;
              #                        aida:confidenceValue  "0.498"^^xsd:double ;
              #                        aida:system           ldc:testSystem
              #                      ] ;
              #      aida:linkTarget "ldc:E0137" ;
              #      aida:system     ldc:testSystem .
              #
              # _:c12 a               aida:InformativeJustificationAssertion ;
              #       aida:confidence [ a                     aida:Confidence ;
              #                         aida:confidenceValue  "0.498"^^xsd:double ;
              #                         aida:system           ldc:testSystem
              #                       ] ;
              #      aida:informativeJustification _:b12 ;
              #      aida:system     ldc:testSystem .
              #
              # ldc:cluster-E0137     a                             aida:SameAsCluster ;
              #                       aida:informativeJustification _:c12 ;
              #                       aida:link                     _:b11 ;
              #                       aida:system                   ldc:testSystem .
              
              
              SELECT DISTINCT
                     ?docid             # sourceDocument
                     ?query_link_target # link target as part of the query
                     ?link_target       # link target in the KB matching ?query_link_target
                     ?cluster           # the ?cluster linked to ?link_target
                     ?infj_span         # informativeJustification span taken from the ?cluster
                     ?j_cv              # confidenceValue of informativeJustification
                     ?link_target       # query reference KB node linked to a ?cluster
                     ?link_cv           # confidenceValue of asserting that ?cluster is the same as reference KB node ?link_target
              
              WHERE {
                  BIND ("LDC2019E43:6252001|LDC2019E43:80000038" AS ?query_link_target)
              
                  # Find ?cluster linked to "LDC2019E43:6252001|LDC2019E43:80000038"
                  # Find the ?link_cv: confidenceValue of linking to external KB entity
                  ?cluster              a                             aida:SameAsCluster .
                  ?cluster              aida:informativeJustification ?inf_justification .
                  ?cluster              aida:link                     ?ref_kb_link .
                  ?ref_kb_link          a                             aida:LinkAssertion .
                  ?ref_kb_link          aida:linkTarget               ?link_target .
                  ?ref_kb_link          aida:confidence               ?link_confidence .
                  ?link_confidence      aida:confidenceValue          ?link_cv .
                  
                  FILTER(cfn:memberOf(str(?link_target), str(?query_link_target))) .
              
                  # Find mention spans for ?inf_justification
                  ?inf_justification    aida:source          ?doceid .
                  ?inf_justification    aida:sourceDocument  ?docid .
                  ?inf_justification    aida:confidence      ?j_confidence .
                  ?j_confidence         aida:confidenceValue ?j_cv .
              
                  OPTIONAL {
                         ?inf_justification a                           aida:TextJustification .
                         ?inf_justification aida:startOffset            ?so .
                         ?inf_justification aida:endOffsetInclusive     ?eo
                  }
                  OPTIONAL {
                         ?inf_justification a                           aida:ImageJustification .
                         ?inf_justification aida:boundingBox            ?bb1  .
                         ?bb1               aida:boundingBoxUpperLeftX  ?ulx1 .
                         ?bb1               aida:boundingBoxUpperLeftY  ?uly1 .
                         ?bb1               aida:boundingBoxLowerRightX ?lrx1 .
                         ?bb1               aida:boundingBoxLowerRightY ?lry1
                  }
                  OPTIONAL {
                         ?inf_justification a                           aida:KeyFrameVideoJustification .
                         ?inf_justification aida:keyFrame               ?kfid .
                         ?inf_justification aida:boundingBox            ?bb2  .
                         ?bb2               aida:boundingBoxUpperLeftX  ?ulx2 .
                         ?bb2               aida:boundingBoxUpperLeftY  ?uly2 .
                         ?bb2               aida:boundingBoxLowerRightX ?lrx2 .
                         ?bb2               aida:boundingBoxLowerRightY ?lry2
                  }
                  OPTIONAL {
                         ?inf_justification a                           aida:ShotVideoJustification .
                         ?inf_justification aida:shot                   ?sid
                  }
                  OPTIONAL {
                         ?inf_justification a                           aida:AudioJustification .
                         ?inf_justification aida:startTimestamp         ?st .
                         ?inf_justification aida:endTimestamp           ?et
                  }
              
                  BIND( IF( BOUND(?sid), ?sid, "__NULL__") AS ?_sid) .
                  BIND( IF( BOUND(?kfid), ?kfid, "__NULL__") AS ?_kfid) .
                  BIND( IF( BOUND(?so), ?so, "__NULL__") AS ?_so) .
                  BIND( IF( BOUND(?eo), ?eo, "__NULL__") AS ?_eo) .
                  BIND( IF( BOUND(?st), ?st, "__NULL__") AS ?_st) .
                  BIND( IF( BOUND(?et), ?et, "__NULL__") AS ?_et) .
                  BIND( COALESCE(?ulx1, ?ulx2, "__NULL__") AS ?_ulx) .
                  BIND( COALESCE(?uly1, ?uly2, "__NULL__") AS ?_uly) .
                  BIND( COALESCE(?lrx1, ?lrx2, "__NULL__") AS ?_lrx) .
                  BIND( COALESCE(?lry1, ?lry2, "__NULL__") AS ?_lry) .
              
                  BIND( cfn:getSpan(str(?docid), str(?doceid), str(?_sid), str(?_kfid), str(?_so), str(?_eo), str(?_ulx), str(?_uly), str(?_lrx), str(?_lry), str(?_st), str(?_et) ) AS ?infj_span ) .
              }
	]]>
     </sparql>
  </zerohop_query>
  <zerohop_query id="AIDA_TA2_ZH_2019_0043">
    <reference_kbid> LDC2019E43:80000320 </reference_kbid>
    <sparql>
 	<![CDATA[
              PREFIX ldcOnt: <https://tac.nist.gov/tracks/SM-KBP/2019/ontologies/LDCOntology#>
              PREFIX rdf:   <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
              PREFIX aida:  <https://tac.nist.gov/tracks/SM-KBP/2019/ontologies/InterchangeOntology#>
              PREFIX cfn:   <https://verdi.nextcentury.com/custom-function/>
              PREFIX xsd:   <http://www.w3.org/2001/XMLSchema#>
              
              # Query: AIDA_TA2_ZH_2019_0043
              # Query description: Find all informative mentions of entities linked to "LDC2019E43:80000320"
              # NIST default aggregate confidence of ?cluster is a function of
              #      ?link_cv      # confidenceValue of asserting that ?cluster is the same as reference KB node ?link_target
              #      ?j_cv         # confidenceValue of informativeJustification
              
              # ?j_cv is used to rank informative mentions within a cluster for purposes of pooling and AP scoring.
              
              # In M18, we use the ?j_cv (confidence in the justification, e.g., confidence of _:b02) and interpret that confidence
              # as the confidence of linking the justification to the cluster; _:b02 is used *only* to represent an informative
              # mention for some cluster, even though that cluster is not referenced in _:b02. Ideally (in future), there would be
              # an aida:InformativeJustificationAssertion construct (paralleling the structure of an aida:LinkAssertion) that
              # associates a confidence to each aida:informativeJustification, and could represent the confidence of linking an
              # InformativeJustification to a cluster.
              
              # _:b12 a                        aida:TextJustification ;
              #      aida:confidence          [ a                     aida:Confidence ;
              #                                 aida:confidenceValue  "1.0"^^<http://www.w3.org/2001/XMLSchema#double> ;
              #                                 aida:system           ldc:testSystem
              #                               ] ;
              #      aida:endOffsetInclusive  "286"^^<http://www.w3.org/2001/XMLSchema#int> ;
              #      aida:privateData         [ a                 aida:PrivateData ;
              #                                 aida:jsonContent  "{\"mention\":\"M000721\"}" ;
              #                                 aida:system       ldc:testSystem
              #                               ] ;
              #      aida:source              "DE005" ;
              #      aida:sourceDocument      "D0100" ;
              #      aida:startOffset         "260"^^<http://www.w3.org/2001/XMLSchema#int> ;
              #      aida:system              ldc:testSystem .
              #
              # _:b11 a              aida:LinkAssertion ;
              #      aida:confidence [ a                     aida:Confidence ;
              #                        aida:confidenceValue  "0.498"^^xsd:double ;
              #                        aida:system           ldc:testSystem
              #                      ] ;
              #      aida:linkTarget "ldc:E0137" ;
              #      aida:system     ldc:testSystem .
              #
              # _:c12 a               aida:InformativeJustificationAssertion ;
              #       aida:confidence [ a                     aida:Confidence ;
              #                         aida:confidenceValue  "0.498"^^xsd:double ;
              #                         aida:system           ldc:testSystem
              #                       ] ;
              #      aida:informativeJustification _:b12 ;
              #      aida:system     ldc:testSystem .
              #
              # ldc:cluster-E0137     a                             aida:SameAsCluster ;
              #                       aida:informativeJustification _:c12 ;
              #                       aida:link                     _:b11 ;
              #                       aida:system                   ldc:testSystem .
              
              
              SELECT DISTINCT
                     ?docid             # sourceDocument
                     ?query_link_target # link target as part of the query
                     ?link_target       # link target in the KB matching ?query_link_target
                     ?cluster           # the ?cluster linked to ?link_target
                     ?infj_span         # informativeJustification span taken from the ?cluster
                     ?j_cv              # confidenceValue of informativeJustification
                     ?link_target       # query reference KB node linked to a ?cluster
                     ?link_cv           # confidenceValue of asserting that ?cluster is the same as reference KB node ?link_target
              
              WHERE {
                  BIND ("LDC2019E43:80000320" AS ?query_link_target)
              
                  # Find ?cluster linked to "LDC2019E43:80000320"
                  # Find the ?link_cv: confidenceValue of linking to external KB entity
                  ?cluster              a                             aida:SameAsCluster .
                  ?cluster              aida:informativeJustification ?inf_justification .
                  ?cluster              aida:link                     ?ref_kb_link .
                  ?ref_kb_link          a                             aida:LinkAssertion .
                  ?ref_kb_link          aida:linkTarget               ?link_target .
                  ?ref_kb_link          aida:confidence               ?link_confidence .
                  ?link_confidence      aida:confidenceValue          ?link_cv .
                  
                  FILTER(cfn:memberOf(str(?link_target), str(?query_link_target))) .
              
                  # Find mention spans for ?inf_justification
                  ?inf_justification    aida:source          ?doceid .
                  ?inf_justification    aida:sourceDocument  ?docid .
                  ?inf_justification    aida:confidence      ?j_confidence .
                  ?j_confidence         aida:confidenceValue ?j_cv .
              
                  OPTIONAL {
                         ?inf_justification a                           aida:TextJustification .
                         ?inf_justification aida:startOffset            ?so .
                         ?inf_justification aida:endOffsetInclusive     ?eo
                  }
                  OPTIONAL {
                         ?inf_justification a                           aida:ImageJustification .
                         ?inf_justification aida:boundingBox            ?bb1  .
                         ?bb1               aida:boundingBoxUpperLeftX  ?ulx1 .
                         ?bb1               aida:boundingBoxUpperLeftY  ?uly1 .
                         ?bb1               aida:boundingBoxLowerRightX ?lrx1 .
                         ?bb1               aida:boundingBoxLowerRightY ?lry1
                  }
                  OPTIONAL {
                         ?inf_justification a                           aida:KeyFrameVideoJustification .
                         ?inf_justification aida:keyFrame               ?kfid .
                         ?inf_justification aida:boundingBox            ?bb2  .
                         ?bb2               aida:boundingBoxUpperLeftX  ?ulx2 .
                         ?bb2               aida:boundingBoxUpperLeftY  ?uly2 .
                         ?bb2               aida:boundingBoxLowerRightX ?lrx2 .
                         ?bb2               aida:boundingBoxLowerRightY ?lry2
                  }
                  OPTIONAL {
                         ?inf_justification a                           aida:ShotVideoJustification .
                         ?inf_justification aida:shot                   ?sid
                  }
                  OPTIONAL {
                         ?inf_justification a                           aida:AudioJustification .
                         ?inf_justification aida:startTimestamp         ?st .
                         ?inf_justification aida:endTimestamp           ?et
                  }
              
                  BIND( IF( BOUND(?sid), ?sid, "__NULL__") AS ?_sid) .
                  BIND( IF( BOUND(?kfid), ?kfid, "__NULL__") AS ?_kfid) .
                  BIND( IF( BOUND(?so), ?so, "__NULL__") AS ?_so) .
                  BIND( IF( BOUND(?eo), ?eo, "__NULL__") AS ?_eo) .
                  BIND( IF( BOUND(?st), ?st, "__NULL__") AS ?_st) .
                  BIND( IF( BOUND(?et), ?et, "__NULL__") AS ?_et) .
                  BIND( COALESCE(?ulx1, ?ulx2, "__NULL__") AS ?_ulx) .
                  BIND( COALESCE(?uly1, ?uly2, "__NULL__") AS ?_uly) .
                  BIND( COALESCE(?lrx1, ?lrx2, "__NULL__") AS ?_lrx) .
                  BIND( COALESCE(?lry1, ?lry2, "__NULL__") AS ?_lry) .
              
                  BIND( cfn:getSpan(str(?docid), str(?doceid), str(?_sid), str(?_kfid), str(?_so), str(?_eo), str(?_ulx), str(?_uly), str(?_lrx), str(?_lry), str(?_st), str(?_et) ) AS ?infj_span ) .
              }
	]]>
     </sparql>
  </zerohop_query>
  <zerohop_query id="AIDA_TA2_ZH_2019_0044">
    <reference_kbid> LDC2019E43:80000361 </reference_kbid>
    <sparql>
 	<![CDATA[
              PREFIX ldcOnt: <https://tac.nist.gov/tracks/SM-KBP/2019/ontologies/LDCOntology#>
              PREFIX rdf:   <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
              PREFIX aida:  <https://tac.nist.gov/tracks/SM-KBP/2019/ontologies/InterchangeOntology#>
              PREFIX cfn:   <https://verdi.nextcentury.com/custom-function/>
              PREFIX xsd:   <http://www.w3.org/2001/XMLSchema#>
              
              # Query: AIDA_TA2_ZH_2019_0044
              # Query description: Find all informative mentions of entities linked to "LDC2019E43:80000361"
              # NIST default aggregate confidence of ?cluster is a function of
              #      ?link_cv      # confidenceValue of asserting that ?cluster is the same as reference KB node ?link_target
              #      ?j_cv         # confidenceValue of informativeJustification
              
              # ?j_cv is used to rank informative mentions within a cluster for purposes of pooling and AP scoring.
              
              # In M18, we use the ?j_cv (confidence in the justification, e.g., confidence of _:b02) and interpret that confidence
              # as the confidence of linking the justification to the cluster; _:b02 is used *only* to represent an informative
              # mention for some cluster, even though that cluster is not referenced in _:b02. Ideally (in future), there would be
              # an aida:InformativeJustificationAssertion construct (paralleling the structure of an aida:LinkAssertion) that
              # associates a confidence to each aida:informativeJustification, and could represent the confidence of linking an
              # InformativeJustification to a cluster.
              
              # _:b12 a                        aida:TextJustification ;
              #      aida:confidence          [ a                     aida:Confidence ;
              #                                 aida:confidenceValue  "1.0"^^<http://www.w3.org/2001/XMLSchema#double> ;
              #                                 aida:system           ldc:testSystem
              #                               ] ;
              #      aida:endOffsetInclusive  "286"^^<http://www.w3.org/2001/XMLSchema#int> ;
              #      aida:privateData         [ a                 aida:PrivateData ;
              #                                 aida:jsonContent  "{\"mention\":\"M000721\"}" ;
              #                                 aida:system       ldc:testSystem
              #                               ] ;
              #      aida:source              "DE005" ;
              #      aida:sourceDocument      "D0100" ;
              #      aida:startOffset         "260"^^<http://www.w3.org/2001/XMLSchema#int> ;
              #      aida:system              ldc:testSystem .
              #
              # _:b11 a              aida:LinkAssertion ;
              #      aida:confidence [ a                     aida:Confidence ;
              #                        aida:confidenceValue  "0.498"^^xsd:double ;
              #                        aida:system           ldc:testSystem
              #                      ] ;
              #      aida:linkTarget "ldc:E0137" ;
              #      aida:system     ldc:testSystem .
              #
              # _:c12 a               aida:InformativeJustificationAssertion ;
              #       aida:confidence [ a                     aida:Confidence ;
              #                         aida:confidenceValue  "0.498"^^xsd:double ;
              #                         aida:system           ldc:testSystem
              #                       ] ;
              #      aida:informativeJustification _:b12 ;
              #      aida:system     ldc:testSystem .
              #
              # ldc:cluster-E0137     a                             aida:SameAsCluster ;
              #                       aida:informativeJustification _:c12 ;
              #                       aida:link                     _:b11 ;
              #                       aida:system                   ldc:testSystem .
              
              
              SELECT DISTINCT
                     ?docid             # sourceDocument
                     ?query_link_target # link target as part of the query
                     ?link_target       # link target in the KB matching ?query_link_target
                     ?cluster           # the ?cluster linked to ?link_target
                     ?infj_span         # informativeJustification span taken from the ?cluster
                     ?j_cv              # confidenceValue of informativeJustification
                     ?link_target       # query reference KB node linked to a ?cluster
                     ?link_cv           # confidenceValue of asserting that ?cluster is the same as reference KB node ?link_target
              
              WHERE {
                  BIND ("LDC2019E43:80000361" AS ?query_link_target)
              
                  # Find ?cluster linked to "LDC2019E43:80000361"
                  # Find the ?link_cv: confidenceValue of linking to external KB entity
                  ?cluster              a                             aida:SameAsCluster .
                  ?cluster              aida:informativeJustification ?inf_justification .
                  ?cluster              aida:link                     ?ref_kb_link .
                  ?ref_kb_link          a                             aida:LinkAssertion .
                  ?ref_kb_link          aida:linkTarget               ?link_target .
                  ?ref_kb_link          aida:confidence               ?link_confidence .
                  ?link_confidence      aida:confidenceValue          ?link_cv .
                  
                  FILTER(cfn:memberOf(str(?link_target), str(?query_link_target))) .
              
                  # Find mention spans for ?inf_justification
                  ?inf_justification    aida:source          ?doceid .
                  ?inf_justification    aida:sourceDocument  ?docid .
                  ?inf_justification    aida:confidence      ?j_confidence .
                  ?j_confidence         aida:confidenceValue ?j_cv .
              
                  OPTIONAL {
                         ?inf_justification a                           aida:TextJustification .
                         ?inf_justification aida:startOffset            ?so .
                         ?inf_justification aida:endOffsetInclusive     ?eo
                  }
                  OPTIONAL {
                         ?inf_justification a                           aida:ImageJustification .
                         ?inf_justification aida:boundingBox            ?bb1  .
                         ?bb1               aida:boundingBoxUpperLeftX  ?ulx1 .
                         ?bb1               aida:boundingBoxUpperLeftY  ?uly1 .
                         ?bb1               aida:boundingBoxLowerRightX ?lrx1 .
                         ?bb1               aida:boundingBoxLowerRightY ?lry1
                  }
                  OPTIONAL {
                         ?inf_justification a                           aida:KeyFrameVideoJustification .
                         ?inf_justification aida:keyFrame               ?kfid .
                         ?inf_justification aida:boundingBox            ?bb2  .
                         ?bb2               aida:boundingBoxUpperLeftX  ?ulx2 .
                         ?bb2               aida:boundingBoxUpperLeftY  ?uly2 .
                         ?bb2               aida:boundingBoxLowerRightX ?lrx2 .
                         ?bb2               aida:boundingBoxLowerRightY ?lry2
                  }
                  OPTIONAL {
                         ?inf_justification a                           aida:ShotVideoJustification .
                         ?inf_justification aida:shot                   ?sid
                  }
                  OPTIONAL {
                         ?inf_justification a                           aida:AudioJustification .
                         ?inf_justification aida:startTimestamp         ?st .
                         ?inf_justification aida:endTimestamp           ?et
                  }
              
                  BIND( IF( BOUND(?sid), ?sid, "__NULL__") AS ?_sid) .
                  BIND( IF( BOUND(?kfid), ?kfid, "__NULL__") AS ?_kfid) .
                  BIND( IF( BOUND(?so), ?so, "__NULL__") AS ?_so) .
                  BIND( IF( BOUND(?eo), ?eo, "__NULL__") AS ?_eo) .
                  BIND( IF( BOUND(?st), ?st, "__NULL__") AS ?_st) .
                  BIND( IF( BOUND(?et), ?et, "__NULL__") AS ?_et) .
                  BIND( COALESCE(?ulx1, ?ulx2, "__NULL__") AS ?_ulx) .
                  BIND( COALESCE(?uly1, ?uly2, "__NULL__") AS ?_uly) .
                  BIND( COALESCE(?lrx1, ?lrx2, "__NULL__") AS ?_lrx) .
                  BIND( COALESCE(?lry1, ?lry2, "__NULL__") AS ?_lry) .
              
                  BIND( cfn:getSpan(str(?docid), str(?doceid), str(?_sid), str(?_kfid), str(?_so), str(?_eo), str(?_ulx), str(?_uly), str(?_lrx), str(?_lry), str(?_st), str(?_et) ) AS ?infj_span ) .
              }
	]]>
     </sparql>
  </zerohop_query>
  <zerohop_query id="AIDA_TA2_ZH_2019_0045">
    <reference_kbid> LDC2019E43:80000353 </reference_kbid>
    <sparql>
 	<![CDATA[
              PREFIX ldcOnt: <https://tac.nist.gov/tracks/SM-KBP/2019/ontologies/LDCOntology#>
              PREFIX rdf:   <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
              PREFIX aida:  <https://tac.nist.gov/tracks/SM-KBP/2019/ontologies/InterchangeOntology#>
              PREFIX cfn:   <https://verdi.nextcentury.com/custom-function/>
              PREFIX xsd:   <http://www.w3.org/2001/XMLSchema#>
              
              # Query: AIDA_TA2_ZH_2019_0045
              # Query description: Find all informative mentions of entities linked to "LDC2019E43:80000353"
              # NIST default aggregate confidence of ?cluster is a function of
              #      ?link_cv      # confidenceValue of asserting that ?cluster is the same as reference KB node ?link_target
              #      ?j_cv         # confidenceValue of informativeJustification
              
              # ?j_cv is used to rank informative mentions within a cluster for purposes of pooling and AP scoring.
              
              # In M18, we use the ?j_cv (confidence in the justification, e.g., confidence of _:b02) and interpret that confidence
              # as the confidence of linking the justification to the cluster; _:b02 is used *only* to represent an informative
              # mention for some cluster, even though that cluster is not referenced in _:b02. Ideally (in future), there would be
              # an aida:InformativeJustificationAssertion construct (paralleling the structure of an aida:LinkAssertion) that
              # associates a confidence to each aida:informativeJustification, and could represent the confidence of linking an
              # InformativeJustification to a cluster.
              
              # _:b12 a                        aida:TextJustification ;
              #      aida:confidence          [ a                     aida:Confidence ;
              #                                 aida:confidenceValue  "1.0"^^<http://www.w3.org/2001/XMLSchema#double> ;
              #                                 aida:system           ldc:testSystem
              #                               ] ;
              #      aida:endOffsetInclusive  "286"^^<http://www.w3.org/2001/XMLSchema#int> ;
              #      aida:privateData         [ a                 aida:PrivateData ;
              #                                 aida:jsonContent  "{\"mention\":\"M000721\"}" ;
              #                                 aida:system       ldc:testSystem
              #                               ] ;
              #      aida:source              "DE005" ;
              #      aida:sourceDocument      "D0100" ;
              #      aida:startOffset         "260"^^<http://www.w3.org/2001/XMLSchema#int> ;
              #      aida:system              ldc:testSystem .
              #
              # _:b11 a              aida:LinkAssertion ;
              #      aida:confidence [ a                     aida:Confidence ;
              #                        aida:confidenceValue  "0.498"^^xsd:double ;
              #                        aida:system           ldc:testSystem
              #                      ] ;
              #      aida:linkTarget "ldc:E0137" ;
              #      aida:system     ldc:testSystem .
              #
              # _:c12 a               aida:InformativeJustificationAssertion ;
              #       aida:confidence [ a                     aida:Confidence ;
              #                         aida:confidenceValue  "0.498"^^xsd:double ;
              #                         aida:system           ldc:testSystem
              #                       ] ;
              #      aida:informativeJustification _:b12 ;
              #      aida:system     ldc:testSystem .
              #
              # ldc:cluster-E0137     a                             aida:SameAsCluster ;
              #                       aida:informativeJustification _:c12 ;
              #                       aida:link                     _:b11 ;
              #                       aida:system                   ldc:testSystem .
              
              
              SELECT DISTINCT
                     ?docid             # sourceDocument
                     ?query_link_target # link target as part of the query
                     ?link_target       # link target in the KB matching ?query_link_target
                     ?cluster           # the ?cluster linked to ?link_target
                     ?infj_span         # informativeJustification span taken from the ?cluster
                     ?j_cv              # confidenceValue of informativeJustification
                     ?link_target       # query reference KB node linked to a ?cluster
                     ?link_cv           # confidenceValue of asserting that ?cluster is the same as reference KB node ?link_target
              
              WHERE {
                  BIND ("LDC2019E43:80000353" AS ?query_link_target)
              
                  # Find ?cluster linked to "LDC2019E43:80000353"
                  # Find the ?link_cv: confidenceValue of linking to external KB entity
                  ?cluster              a                             aida:SameAsCluster .
                  ?cluster              aida:informativeJustification ?inf_justification .
                  ?cluster              aida:link                     ?ref_kb_link .
                  ?ref_kb_link          a                             aida:LinkAssertion .
                  ?ref_kb_link          aida:linkTarget               ?link_target .
                  ?ref_kb_link          aida:confidence               ?link_confidence .
                  ?link_confidence      aida:confidenceValue          ?link_cv .
                  
                  FILTER(cfn:memberOf(str(?link_target), str(?query_link_target))) .
              
                  # Find mention spans for ?inf_justification
                  ?inf_justification    aida:source          ?doceid .
                  ?inf_justification    aida:sourceDocument  ?docid .
                  ?inf_justification    aida:confidence      ?j_confidence .
                  ?j_confidence         aida:confidenceValue ?j_cv .
              
                  OPTIONAL {
                         ?inf_justification a                           aida:TextJustification .
                         ?inf_justification aida:startOffset            ?so .
                         ?inf_justification aida:endOffsetInclusive     ?eo
                  }
                  OPTIONAL {
                         ?inf_justification a                           aida:ImageJustification .
                         ?inf_justification aida:boundingBox            ?bb1  .
                         ?bb1               aida:boundingBoxUpperLeftX  ?ulx1 .
                         ?bb1               aida:boundingBoxUpperLeftY  ?uly1 .
                         ?bb1               aida:boundingBoxLowerRightX ?lrx1 .
                         ?bb1               aida:boundingBoxLowerRightY ?lry1
                  }
                  OPTIONAL {
                         ?inf_justification a                           aida:KeyFrameVideoJustification .
                         ?inf_justification aida:keyFrame               ?kfid .
                         ?inf_justification aida:boundingBox            ?bb2  .
                         ?bb2               aida:boundingBoxUpperLeftX  ?ulx2 .
                         ?bb2               aida:boundingBoxUpperLeftY  ?uly2 .
                         ?bb2               aida:boundingBoxLowerRightX ?lrx2 .
                         ?bb2               aida:boundingBoxLowerRightY ?lry2
                  }
                  OPTIONAL {
                         ?inf_justification a                           aida:ShotVideoJustification .
                         ?inf_justification aida:shot                   ?sid
                  }
                  OPTIONAL {
                         ?inf_justification a                           aida:AudioJustification .
                         ?inf_justification aida:startTimestamp         ?st .
                         ?inf_justification aida:endTimestamp           ?et
                  }
              
                  BIND( IF( BOUND(?sid), ?sid, "__NULL__") AS ?_sid) .
                  BIND( IF( BOUND(?kfid), ?kfid, "__NULL__") AS ?_kfid) .
                  BIND( IF( BOUND(?so), ?so, "__NULL__") AS ?_so) .
                  BIND( IF( BOUND(?eo), ?eo, "__NULL__") AS ?_eo) .
                  BIND( IF( BOUND(?st), ?st, "__NULL__") AS ?_st) .
                  BIND( IF( BOUND(?et), ?et, "__NULL__") AS ?_et) .
                  BIND( COALESCE(?ulx1, ?ulx2, "__NULL__") AS ?_ulx) .
                  BIND( COALESCE(?uly1, ?uly2, "__NULL__") AS ?_uly) .
                  BIND( COALESCE(?lrx1, ?lrx2, "__NULL__") AS ?_lrx) .
                  BIND( COALESCE(?lry1, ?lry2, "__NULL__") AS ?_lry) .
              
                  BIND( cfn:getSpan(str(?docid), str(?doceid), str(?_sid), str(?_kfid), str(?_so), str(?_eo), str(?_ulx), str(?_uly), str(?_lrx), str(?_lry), str(?_st), str(?_et) ) AS ?infj_span ) .
              }
	]]>
     </sparql>
  </zerohop_query>
  <zerohop_query id="AIDA_TA2_ZH_2019_0046">
    <reference_kbid> LDC2019E43:693468|LDC2019E43:80000043 </reference_kbid>
    <sparql>
 	<![CDATA[
              PREFIX ldcOnt: <https://tac.nist.gov/tracks/SM-KBP/2019/ontologies/LDCOntology#>
              PREFIX rdf:   <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
              PREFIX aida:  <https://tac.nist.gov/tracks/SM-KBP/2019/ontologies/InterchangeOntology#>
              PREFIX cfn:   <https://verdi.nextcentury.com/custom-function/>
              PREFIX xsd:   <http://www.w3.org/2001/XMLSchema#>
              
              # Query: AIDA_TA2_ZH_2019_0046
              # Query description: Find all informative mentions of entities linked to "LDC2019E43:693468|LDC2019E43:80000043"
              # NIST default aggregate confidence of ?cluster is a function of
              #      ?link_cv      # confidenceValue of asserting that ?cluster is the same as reference KB node ?link_target
              #      ?j_cv         # confidenceValue of informativeJustification
              
              # ?j_cv is used to rank informative mentions within a cluster for purposes of pooling and AP scoring.
              
              # In M18, we use the ?j_cv (confidence in the justification, e.g., confidence of _:b02) and interpret that confidence
              # as the confidence of linking the justification to the cluster; _:b02 is used *only* to represent an informative
              # mention for some cluster, even though that cluster is not referenced in _:b02. Ideally (in future), there would be
              # an aida:InformativeJustificationAssertion construct (paralleling the structure of an aida:LinkAssertion) that
              # associates a confidence to each aida:informativeJustification, and could represent the confidence of linking an
              # InformativeJustification to a cluster.
              
              # _:b12 a                        aida:TextJustification ;
              #      aida:confidence          [ a                     aida:Confidence ;
              #                                 aida:confidenceValue  "1.0"^^<http://www.w3.org/2001/XMLSchema#double> ;
              #                                 aida:system           ldc:testSystem
              #                               ] ;
              #      aida:endOffsetInclusive  "286"^^<http://www.w3.org/2001/XMLSchema#int> ;
              #      aida:privateData         [ a                 aida:PrivateData ;
              #                                 aida:jsonContent  "{\"mention\":\"M000721\"}" ;
              #                                 aida:system       ldc:testSystem
              #                               ] ;
              #      aida:source              "DE005" ;
              #      aida:sourceDocument      "D0100" ;
              #      aida:startOffset         "260"^^<http://www.w3.org/2001/XMLSchema#int> ;
              #      aida:system              ldc:testSystem .
              #
              # _:b11 a              aida:LinkAssertion ;
              #      aida:confidence [ a                     aida:Confidence ;
              #                        aida:confidenceValue  "0.498"^^xsd:double ;
              #                        aida:system           ldc:testSystem
              #                      ] ;
              #      aida:linkTarget "ldc:E0137" ;
              #      aida:system     ldc:testSystem .
              #
              # _:c12 a               aida:InformativeJustificationAssertion ;
              #       aida:confidence [ a                     aida:Confidence ;
              #                         aida:confidenceValue  "0.498"^^xsd:double ;
              #                         aida:system           ldc:testSystem
              #                       ] ;
              #      aida:informativeJustification _:b12 ;
              #      aida:system     ldc:testSystem .
              #
              # ldc:cluster-E0137     a                             aida:SameAsCluster ;
              #                       aida:informativeJustification _:c12 ;
              #                       aida:link                     _:b11 ;
              #                       aida:system                   ldc:testSystem .
              
              
              SELECT DISTINCT
                     ?docid             # sourceDocument
                     ?query_link_target # link target as part of the query
                     ?link_target       # link target in the KB matching ?query_link_target
                     ?cluster           # the ?cluster linked to ?link_target
                     ?infj_span         # informativeJustification span taken from the ?cluster
                     ?j_cv              # confidenceValue of informativeJustification
                     ?link_target       # query reference KB node linked to a ?cluster
                     ?link_cv           # confidenceValue of asserting that ?cluster is the same as reference KB node ?link_target
              
              WHERE {
                  BIND ("LDC2019E43:693468|LDC2019E43:80000043" AS ?query_link_target)
              
                  # Find ?cluster linked to "LDC2019E43:693468|LDC2019E43:80000043"
                  # Find the ?link_cv: confidenceValue of linking to external KB entity
                  ?cluster              a                             aida:SameAsCluster .
                  ?cluster              aida:informativeJustification ?inf_justification .
                  ?cluster              aida:link                     ?ref_kb_link .
                  ?ref_kb_link          a                             aida:LinkAssertion .
                  ?ref_kb_link          aida:linkTarget               ?link_target .
                  ?ref_kb_link          aida:confidence               ?link_confidence .
                  ?link_confidence      aida:confidenceValue          ?link_cv .
                  
                  FILTER(cfn:memberOf(str(?link_target), str(?query_link_target))) .
              
                  # Find mention spans for ?inf_justification
                  ?inf_justification    aida:source          ?doceid .
                  ?inf_justification    aida:sourceDocument  ?docid .
                  ?inf_justification    aida:confidence      ?j_confidence .
                  ?j_confidence         aida:confidenceValue ?j_cv .
              
                  OPTIONAL {
                         ?inf_justification a                           aida:TextJustification .
                         ?inf_justification aida:startOffset            ?so .
                         ?inf_justification aida:endOffsetInclusive     ?eo
                  }
                  OPTIONAL {
                         ?inf_justification a                           aida:ImageJustification .
                         ?inf_justification aida:boundingBox            ?bb1  .
                         ?bb1               aida:boundingBoxUpperLeftX  ?ulx1 .
                         ?bb1               aida:boundingBoxUpperLeftY  ?uly1 .
                         ?bb1               aida:boundingBoxLowerRightX ?lrx1 .
                         ?bb1               aida:boundingBoxLowerRightY ?lry1
                  }
                  OPTIONAL {
                         ?inf_justification a                           aida:KeyFrameVideoJustification .
                         ?inf_justification aida:keyFrame               ?kfid .
                         ?inf_justification aida:boundingBox            ?bb2  .
                         ?bb2               aida:boundingBoxUpperLeftX  ?ulx2 .
                         ?bb2               aida:boundingBoxUpperLeftY  ?uly2 .
                         ?bb2               aida:boundingBoxLowerRightX ?lrx2 .
                         ?bb2               aida:boundingBoxLowerRightY ?lry2
                  }
                  OPTIONAL {
                         ?inf_justification a                           aida:ShotVideoJustification .
                         ?inf_justification aida:shot                   ?sid
                  }
                  OPTIONAL {
                         ?inf_justification a                           aida:AudioJustification .
                         ?inf_justification aida:startTimestamp         ?st .
                         ?inf_justification aida:endTimestamp           ?et
                  }
              
                  BIND( IF( BOUND(?sid), ?sid, "__NULL__") AS ?_sid) .
                  BIND( IF( BOUND(?kfid), ?kfid, "__NULL__") AS ?_kfid) .
                  BIND( IF( BOUND(?so), ?so, "__NULL__") AS ?_so) .
                  BIND( IF( BOUND(?eo), ?eo, "__NULL__") AS ?_eo) .
                  BIND( IF( BOUND(?st), ?st, "__NULL__") AS ?_st) .
                  BIND( IF( BOUND(?et), ?et, "__NULL__") AS ?_et) .
                  BIND( COALESCE(?ulx1, ?ulx2, "__NULL__") AS ?_ulx) .
                  BIND( COALESCE(?uly1, ?uly2, "__NULL__") AS ?_uly) .
                  BIND( COALESCE(?lrx1, ?lrx2, "__NULL__") AS ?_lrx) .
                  BIND( COALESCE(?lry1, ?lry2, "__NULL__") AS ?_lry) .
              
                  BIND( cfn:getSpan(str(?docid), str(?doceid), str(?_sid), str(?_kfid), str(?_so), str(?_eo), str(?_ulx), str(?_uly), str(?_lrx), str(?_lry), str(?_st), str(?_et) ) AS ?infj_span ) .
              }
	]]>
     </sparql>
  </zerohop_query>
  <zerohop_query id="AIDA_TA2_ZH_2019_0047">
    <reference_kbid> LDC2019E43:80000307 </reference_kbid>
    <sparql>
 	<![CDATA[
              PREFIX ldcOnt: <https://tac.nist.gov/tracks/SM-KBP/2019/ontologies/LDCOntology#>
              PREFIX rdf:   <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
              PREFIX aida:  <https://tac.nist.gov/tracks/SM-KBP/2019/ontologies/InterchangeOntology#>
              PREFIX cfn:   <https://verdi.nextcentury.com/custom-function/>
              PREFIX xsd:   <http://www.w3.org/2001/XMLSchema#>
              
              # Query: AIDA_TA2_ZH_2019_0047
              # Query description: Find all informative mentions of entities linked to "LDC2019E43:80000307"
              # NIST default aggregate confidence of ?cluster is a function of
              #      ?link_cv      # confidenceValue of asserting that ?cluster is the same as reference KB node ?link_target
              #      ?j_cv         # confidenceValue of informativeJustification
              
              # ?j_cv is used to rank informative mentions within a cluster for purposes of pooling and AP scoring.
              
              # In M18, we use the ?j_cv (confidence in the justification, e.g., confidence of _:b02) and interpret that confidence
              # as the confidence of linking the justification to the cluster; _:b02 is used *only* to represent an informative
              # mention for some cluster, even though that cluster is not referenced in _:b02. Ideally (in future), there would be
              # an aida:InformativeJustificationAssertion construct (paralleling the structure of an aida:LinkAssertion) that
              # associates a confidence to each aida:informativeJustification, and could represent the confidence of linking an
              # InformativeJustification to a cluster.
              
              # _:b12 a                        aida:TextJustification ;
              #      aida:confidence          [ a                     aida:Confidence ;
              #                                 aida:confidenceValue  "1.0"^^<http://www.w3.org/2001/XMLSchema#double> ;
              #                                 aida:system           ldc:testSystem
              #                               ] ;
              #      aida:endOffsetInclusive  "286"^^<http://www.w3.org/2001/XMLSchema#int> ;
              #      aida:privateData         [ a                 aida:PrivateData ;
              #                                 aida:jsonContent  "{\"mention\":\"M000721\"}" ;
              #                                 aida:system       ldc:testSystem
              #                               ] ;
              #      aida:source              "DE005" ;
              #      aida:sourceDocument      "D0100" ;
              #      aida:startOffset         "260"^^<http://www.w3.org/2001/XMLSchema#int> ;
              #      aida:system              ldc:testSystem .
              #
              # _:b11 a              aida:LinkAssertion ;
              #      aida:confidence [ a                     aida:Confidence ;
              #                        aida:confidenceValue  "0.498"^^xsd:double ;
              #                        aida:system           ldc:testSystem
              #                      ] ;
              #      aida:linkTarget "ldc:E0137" ;
              #      aida:system     ldc:testSystem .
              #
              # _:c12 a               aida:InformativeJustificationAssertion ;
              #       aida:confidence [ a                     aida:Confidence ;
              #                         aida:confidenceValue  "0.498"^^xsd:double ;
              #                         aida:system           ldc:testSystem
              #                       ] ;
              #      aida:informativeJustification _:b12 ;
              #      aida:system     ldc:testSystem .
              #
              # ldc:cluster-E0137     a                             aida:SameAsCluster ;
              #                       aida:informativeJustification _:c12 ;
              #                       aida:link                     _:b11 ;
              #                       aida:system                   ldc:testSystem .
              
              
              SELECT DISTINCT
                     ?docid             # sourceDocument
                     ?query_link_target # link target as part of the query
                     ?link_target       # link target in the KB matching ?query_link_target
                     ?cluster           # the ?cluster linked to ?link_target
                     ?infj_span         # informativeJustification span taken from the ?cluster
                     ?j_cv              # confidenceValue of informativeJustification
                     ?link_target       # query reference KB node linked to a ?cluster
                     ?link_cv           # confidenceValue of asserting that ?cluster is the same as reference KB node ?link_target
              
              WHERE {
                  BIND ("LDC2019E43:80000307" AS ?query_link_target)
              
                  # Find ?cluster linked to "LDC2019E43:80000307"
                  # Find the ?link_cv: confidenceValue of linking to external KB entity
                  ?cluster              a                             aida:SameAsCluster .
                  ?cluster              aida:informativeJustification ?inf_justification .
                  ?cluster              aida:link                     ?ref_kb_link .
                  ?ref_kb_link          a                             aida:LinkAssertion .
                  ?ref_kb_link          aida:linkTarget               ?link_target .
                  ?ref_kb_link          aida:confidence               ?link_confidence .
                  ?link_confidence      aida:confidenceValue          ?link_cv .
                  
                  FILTER(cfn:memberOf(str(?link_target), str(?query_link_target))) .
              
                  # Find mention spans for ?inf_justification
                  ?inf_justification    aida:source          ?doceid .
                  ?inf_justification    aida:sourceDocument  ?docid .
                  ?inf_justification    aida:confidence      ?j_confidence .
                  ?j_confidence         aida:confidenceValue ?j_cv .
              
                  OPTIONAL {
                         ?inf_justification a                           aida:TextJustification .
                         ?inf_justification aida:startOffset            ?so .
                         ?inf_justification aida:endOffsetInclusive     ?eo
                  }
                  OPTIONAL {
                         ?inf_justification a                           aida:ImageJustification .
                         ?inf_justification aida:boundingBox            ?bb1  .
                         ?bb1               aida:boundingBoxUpperLeftX  ?ulx1 .
                         ?bb1               aida:boundingBoxUpperLeftY  ?uly1 .
                         ?bb1               aida:boundingBoxLowerRightX ?lrx1 .
                         ?bb1               aida:boundingBoxLowerRightY ?lry1
                  }
                  OPTIONAL {
                         ?inf_justification a                           aida:KeyFrameVideoJustification .
                         ?inf_justification aida:keyFrame               ?kfid .
                         ?inf_justification aida:boundingBox            ?bb2  .
                         ?bb2               aida:boundingBoxUpperLeftX  ?ulx2 .
                         ?bb2               aida:boundingBoxUpperLeftY  ?uly2 .
                         ?bb2               aida:boundingBoxLowerRightX ?lrx2 .
                         ?bb2               aida:boundingBoxLowerRightY ?lry2
                  }
                  OPTIONAL {
                         ?inf_justification a                           aida:ShotVideoJustification .
                         ?inf_justification aida:shot                   ?sid
                  }
                  OPTIONAL {
                         ?inf_justification a                           aida:AudioJustification .
                         ?inf_justification aida:startTimestamp         ?st .
                         ?inf_justification aida:endTimestamp           ?et
                  }
              
                  BIND( IF( BOUND(?sid), ?sid, "__NULL__") AS ?_sid) .
                  BIND( IF( BOUND(?kfid), ?kfid, "__NULL__") AS ?_kfid) .
                  BIND( IF( BOUND(?so), ?so, "__NULL__") AS ?_so) .
                  BIND( IF( BOUND(?eo), ?eo, "__NULL__") AS ?_eo) .
                  BIND( IF( BOUND(?st), ?st, "__NULL__") AS ?_st) .
                  BIND( IF( BOUND(?et), ?et, "__NULL__") AS ?_et) .
                  BIND( COALESCE(?ulx1, ?ulx2, "__NULL__") AS ?_ulx) .
                  BIND( COALESCE(?uly1, ?uly2, "__NULL__") AS ?_uly) .
                  BIND( COALESCE(?lrx1, ?lrx2, "__NULL__") AS ?_lrx) .
                  BIND( COALESCE(?lry1, ?lry2, "__NULL__") AS ?_lry) .
              
                  BIND( cfn:getSpan(str(?docid), str(?doceid), str(?_sid), str(?_kfid), str(?_so), str(?_eo), str(?_ulx), str(?_uly), str(?_lrx), str(?_lry), str(?_st), str(?_et) ) AS ?infj_span ) .
              }
	]]>
     </sparql>
  </zerohop_query>
  <zerohop_query id="AIDA_TA2_ZH_2019_0048">
    <reference_kbid> LDC2019E43:80000078 </reference_kbid>
    <sparql>
 	<![CDATA[
              PREFIX ldcOnt: <https://tac.nist.gov/tracks/SM-KBP/2019/ontologies/LDCOntology#>
              PREFIX rdf:   <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
              PREFIX aida:  <https://tac.nist.gov/tracks/SM-KBP/2019/ontologies/InterchangeOntology#>
              PREFIX cfn:   <https://verdi.nextcentury.com/custom-function/>
              PREFIX xsd:   <http://www.w3.org/2001/XMLSchema#>
              
              # Query: AIDA_TA2_ZH_2019_0048
              # Query description: Find all informative mentions of entities linked to "LDC2019E43:80000078"
              # NIST default aggregate confidence of ?cluster is a function of
              #      ?link_cv      # confidenceValue of asserting that ?cluster is the same as reference KB node ?link_target
              #      ?j_cv         # confidenceValue of informativeJustification
              
              # ?j_cv is used to rank informative mentions within a cluster for purposes of pooling and AP scoring.
              
              # In M18, we use the ?j_cv (confidence in the justification, e.g., confidence of _:b02) and interpret that confidence
              # as the confidence of linking the justification to the cluster; _:b02 is used *only* to represent an informative
              # mention for some cluster, even though that cluster is not referenced in _:b02. Ideally (in future), there would be
              # an aida:InformativeJustificationAssertion construct (paralleling the structure of an aida:LinkAssertion) that
              # associates a confidence to each aida:informativeJustification, and could represent the confidence of linking an
              # InformativeJustification to a cluster.
              
              # _:b12 a                        aida:TextJustification ;
              #      aida:confidence          [ a                     aida:Confidence ;
              #                                 aida:confidenceValue  "1.0"^^<http://www.w3.org/2001/XMLSchema#double> ;
              #                                 aida:system           ldc:testSystem
              #                               ] ;
              #      aida:endOffsetInclusive  "286"^^<http://www.w3.org/2001/XMLSchema#int> ;
              #      aida:privateData         [ a                 aida:PrivateData ;
              #                                 aida:jsonContent  "{\"mention\":\"M000721\"}" ;
              #                                 aida:system       ldc:testSystem
              #                               ] ;
              #      aida:source              "DE005" ;
              #      aida:sourceDocument      "D0100" ;
              #      aida:startOffset         "260"^^<http://www.w3.org/2001/XMLSchema#int> ;
              #      aida:system              ldc:testSystem .
              #
              # _:b11 a              aida:LinkAssertion ;
              #      aida:confidence [ a                     aida:Confidence ;
              #                        aida:confidenceValue  "0.498"^^xsd:double ;
              #                        aida:system           ldc:testSystem
              #                      ] ;
              #      aida:linkTarget "ldc:E0137" ;
              #      aida:system     ldc:testSystem .
              #
              # _:c12 a               aida:InformativeJustificationAssertion ;
              #       aida:confidence [ a                     aida:Confidence ;
              #                         aida:confidenceValue  "0.498"^^xsd:double ;
              #                         aida:system           ldc:testSystem
              #                       ] ;
              #      aida:informativeJustification _:b12 ;
              #      aida:system     ldc:testSystem .
              #
              # ldc:cluster-E0137     a                             aida:SameAsCluster ;
              #                       aida:informativeJustification _:c12 ;
              #                       aida:link                     _:b11 ;
              #                       aida:system                   ldc:testSystem .
              
              
              SELECT DISTINCT
                     ?docid             # sourceDocument
                     ?query_link_target # link target as part of the query
                     ?link_target       # link target in the KB matching ?query_link_target
                     ?cluster           # the ?cluster linked to ?link_target
                     ?infj_span         # informativeJustification span taken from the ?cluster
                     ?j_cv              # confidenceValue of informativeJustification
                     ?link_target       # query reference KB node linked to a ?cluster
                     ?link_cv           # confidenceValue of asserting that ?cluster is the same as reference KB node ?link_target
              
              WHERE {
                  BIND ("LDC2019E43:80000078" AS ?query_link_target)
              
                  # Find ?cluster linked to "LDC2019E43:80000078"
                  # Find the ?link_cv: confidenceValue of linking to external KB entity
                  ?cluster              a                             aida:SameAsCluster .
                  ?cluster              aida:informativeJustification ?inf_justification .
                  ?cluster              aida:link                     ?ref_kb_link .
                  ?ref_kb_link          a                             aida:LinkAssertion .
                  ?ref_kb_link          aida:linkTarget               ?link_target .
                  ?ref_kb_link          aida:confidence               ?link_confidence .
                  ?link_confidence      aida:confidenceValue          ?link_cv .
                  
                  FILTER(cfn:memberOf(str(?link_target), str(?query_link_target))) .
              
                  # Find mention spans for ?inf_justification
                  ?inf_justification    aida:source          ?doceid .
                  ?inf_justification    aida:sourceDocument  ?docid .
                  ?inf_justification    aida:confidence      ?j_confidence .
                  ?j_confidence         aida:confidenceValue ?j_cv .
              
                  OPTIONAL {
                         ?inf_justification a                           aida:TextJustification .
                         ?inf_justification aida:startOffset            ?so .
                         ?inf_justification aida:endOffsetInclusive     ?eo
                  }
                  OPTIONAL {
                         ?inf_justification a                           aida:ImageJustification .
                         ?inf_justification aida:boundingBox            ?bb1  .
                         ?bb1               aida:boundingBoxUpperLeftX  ?ulx1 .
                         ?bb1               aida:boundingBoxUpperLeftY  ?uly1 .
                         ?bb1               aida:boundingBoxLowerRightX ?lrx1 .
                         ?bb1               aida:boundingBoxLowerRightY ?lry1
                  }
                  OPTIONAL {
                         ?inf_justification a                           aida:KeyFrameVideoJustification .
                         ?inf_justification aida:keyFrame               ?kfid .
                         ?inf_justification aida:boundingBox            ?bb2  .
                         ?bb2               aida:boundingBoxUpperLeftX  ?ulx2 .
                         ?bb2               aida:boundingBoxUpperLeftY  ?uly2 .
                         ?bb2               aida:boundingBoxLowerRightX ?lrx2 .
                         ?bb2               aida:boundingBoxLowerRightY ?lry2
                  }
                  OPTIONAL {
                         ?inf_justification a                           aida:ShotVideoJustification .
                         ?inf_justification aida:shot                   ?sid
                  }
                  OPTIONAL {
                         ?inf_justification a                           aida:AudioJustification .
                         ?inf_justification aida:startTimestamp         ?st .
                         ?inf_justification aida:endTimestamp           ?et
                  }
              
                  BIND( IF( BOUND(?sid), ?sid, "__NULL__") AS ?_sid) .
                  BIND( IF( BOUND(?kfid), ?kfid, "__NULL__") AS ?_kfid) .
                  BIND( IF( BOUND(?so), ?so, "__NULL__") AS ?_so) .
                  BIND( IF( BOUND(?eo), ?eo, "__NULL__") AS ?_eo) .
                  BIND( IF( BOUND(?st), ?st, "__NULL__") AS ?_st) .
                  BIND( IF( BOUND(?et), ?et, "__NULL__") AS ?_et) .
                  BIND( COALESCE(?ulx1, ?ulx2, "__NULL__") AS ?_ulx) .
                  BIND( COALESCE(?uly1, ?uly2, "__NULL__") AS ?_uly) .
                  BIND( COALESCE(?lrx1, ?lrx2, "__NULL__") AS ?_lrx) .
                  BIND( COALESCE(?lry1, ?lry2, "__NULL__") AS ?_lry) .
              
                  BIND( cfn:getSpan(str(?docid), str(?doceid), str(?_sid), str(?_kfid), str(?_so), str(?_eo), str(?_ulx), str(?_uly), str(?_lrx), str(?_lry), str(?_st), str(?_et) ) AS ?infj_span ) .
              }
	]]>
     </sparql>
  </zerohop_query>
  <zerohop_query id="AIDA_TA2_ZH_2019_0049">
    <reference_kbid> LDC2019E43:7731189|LDC2019E43:80000009 </reference_kbid>
    <sparql>
 	<![CDATA[
              PREFIX ldcOnt: <https://tac.nist.gov/tracks/SM-KBP/2019/ontologies/LDCOntology#>
              PREFIX rdf:   <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
              PREFIX aida:  <https://tac.nist.gov/tracks/SM-KBP/2019/ontologies/InterchangeOntology#>
              PREFIX cfn:   <https://verdi.nextcentury.com/custom-function/>
              PREFIX xsd:   <http://www.w3.org/2001/XMLSchema#>
              
              # Query: AIDA_TA2_ZH_2019_0049
              # Query description: Find all informative mentions of entities linked to "LDC2019E43:7731189|LDC2019E43:80000009"
              # NIST default aggregate confidence of ?cluster is a function of
              #      ?link_cv      # confidenceValue of asserting that ?cluster is the same as reference KB node ?link_target
              #      ?j_cv         # confidenceValue of informativeJustification
              
              # ?j_cv is used to rank informative mentions within a cluster for purposes of pooling and AP scoring.
              
              # In M18, we use the ?j_cv (confidence in the justification, e.g., confidence of _:b02) and interpret that confidence
              # as the confidence of linking the justification to the cluster; _:b02 is used *only* to represent an informative
              # mention for some cluster, even though that cluster is not referenced in _:b02. Ideally (in future), there would be
              # an aida:InformativeJustificationAssertion construct (paralleling the structure of an aida:LinkAssertion) that
              # associates a confidence to each aida:informativeJustification, and could represent the confidence of linking an
              # InformativeJustification to a cluster.
              
              # _:b12 a                        aida:TextJustification ;
              #      aida:confidence          [ a                     aida:Confidence ;
              #                                 aida:confidenceValue  "1.0"^^<http://www.w3.org/2001/XMLSchema#double> ;
              #                                 aida:system           ldc:testSystem
              #                               ] ;
              #      aida:endOffsetInclusive  "286"^^<http://www.w3.org/2001/XMLSchema#int> ;
              #      aida:privateData         [ a                 aida:PrivateData ;
              #                                 aida:jsonContent  "{\"mention\":\"M000721\"}" ;
              #                                 aida:system       ldc:testSystem
              #                               ] ;
              #      aida:source              "DE005" ;
              #      aida:sourceDocument      "D0100" ;
              #      aida:startOffset         "260"^^<http://www.w3.org/2001/XMLSchema#int> ;
              #      aida:system              ldc:testSystem .
              #
              # _:b11 a              aida:LinkAssertion ;
              #      aida:confidence [ a                     aida:Confidence ;
              #                        aida:confidenceValue  "0.498"^^xsd:double ;
              #                        aida:system           ldc:testSystem
              #                      ] ;
              #      aida:linkTarget "ldc:E0137" ;
              #      aida:system     ldc:testSystem .
              #
              # _:c12 a               aida:InformativeJustificationAssertion ;
              #       aida:confidence [ a                     aida:Confidence ;
              #                         aida:confidenceValue  "0.498"^^xsd:double ;
              #                         aida:system           ldc:testSystem
              #                       ] ;
              #      aida:informativeJustification _:b12 ;
              #      aida:system     ldc:testSystem .
              #
              # ldc:cluster-E0137     a                             aida:SameAsCluster ;
              #                       aida:informativeJustification _:c12 ;
              #                       aida:link                     _:b11 ;
              #                       aida:system                   ldc:testSystem .
              
              
              SELECT DISTINCT
                     ?docid             # sourceDocument
                     ?query_link_target # link target as part of the query
                     ?link_target       # link target in the KB matching ?query_link_target
                     ?cluster           # the ?cluster linked to ?link_target
                     ?infj_span         # informativeJustification span taken from the ?cluster
                     ?j_cv              # confidenceValue of informativeJustification
                     ?link_target       # query reference KB node linked to a ?cluster
                     ?link_cv           # confidenceValue of asserting that ?cluster is the same as reference KB node ?link_target
              
              WHERE {
                  BIND ("LDC2019E43:7731189|LDC2019E43:80000009" AS ?query_link_target)
              
                  # Find ?cluster linked to "LDC2019E43:7731189|LDC2019E43:80000009"
                  # Find the ?link_cv: confidenceValue of linking to external KB entity
                  ?cluster              a                             aida:SameAsCluster .
                  ?cluster              aida:informativeJustification ?inf_justification .
                  ?cluster              aida:link                     ?ref_kb_link .
                  ?ref_kb_link          a                             aida:LinkAssertion .
                  ?ref_kb_link          aida:linkTarget               ?link_target .
                  ?ref_kb_link          aida:confidence               ?link_confidence .
                  ?link_confidence      aida:confidenceValue          ?link_cv .
                  
                  FILTER(cfn:memberOf(str(?link_target), str(?query_link_target))) .
              
                  # Find mention spans for ?inf_justification
                  ?inf_justification    aida:source          ?doceid .
                  ?inf_justification    aida:sourceDocument  ?docid .
                  ?inf_justification    aida:confidence      ?j_confidence .
                  ?j_confidence         aida:confidenceValue ?j_cv .
              
                  OPTIONAL {
                         ?inf_justification a                           aida:TextJustification .
                         ?inf_justification aida:startOffset            ?so .
                         ?inf_justification aida:endOffsetInclusive     ?eo
                  }
                  OPTIONAL {
                         ?inf_justification a                           aida:ImageJustification .
                         ?inf_justification aida:boundingBox            ?bb1  .
                         ?bb1               aida:boundingBoxUpperLeftX  ?ulx1 .
                         ?bb1               aida:boundingBoxUpperLeftY  ?uly1 .
                         ?bb1               aida:boundingBoxLowerRightX ?lrx1 .
                         ?bb1               aida:boundingBoxLowerRightY ?lry1
                  }
                  OPTIONAL {
                         ?inf_justification a                           aida:KeyFrameVideoJustification .
                         ?inf_justification aida:keyFrame               ?kfid .
                         ?inf_justification aida:boundingBox            ?bb2  .
                         ?bb2               aida:boundingBoxUpperLeftX  ?ulx2 .
                         ?bb2               aida:boundingBoxUpperLeftY  ?uly2 .
                         ?bb2               aida:boundingBoxLowerRightX ?lrx2 .
                         ?bb2               aida:boundingBoxLowerRightY ?lry2
                  }
                  OPTIONAL {
                         ?inf_justification a                           aida:ShotVideoJustification .
                         ?inf_justification aida:shot                   ?sid
                  }
                  OPTIONAL {
                         ?inf_justification a                           aida:AudioJustification .
                         ?inf_justification aida:startTimestamp         ?st .
                         ?inf_justification aida:endTimestamp           ?et
                  }
              
                  BIND( IF( BOUND(?sid), ?sid, "__NULL__") AS ?_sid) .
                  BIND( IF( BOUND(?kfid), ?kfid, "__NULL__") AS ?_kfid) .
                  BIND( IF( BOUND(?so), ?so, "__NULL__") AS ?_so) .
                  BIND( IF( BOUND(?eo), ?eo, "__NULL__") AS ?_eo) .
                  BIND( IF( BOUND(?st), ?st, "__NULL__") AS ?_st) .
                  BIND( IF( BOUND(?et), ?et, "__NULL__") AS ?_et) .
                  BIND( COALESCE(?ulx1, ?ulx2, "__NULL__") AS ?_ulx) .
                  BIND( COALESCE(?uly1, ?uly2, "__NULL__") AS ?_uly) .
                  BIND( COALESCE(?lrx1, ?lrx2, "__NULL__") AS ?_lrx) .
                  BIND( COALESCE(?lry1, ?lry2, "__NULL__") AS ?_lry) .
              
                  BIND( cfn:getSpan(str(?docid), str(?doceid), str(?_sid), str(?_kfid), str(?_so), str(?_eo), str(?_ulx), str(?_uly), str(?_lrx), str(?_lry), str(?_st), str(?_et) ) AS ?infj_span ) .
              }
	]]>
     </sparql>
  </zerohop_query>
  <zerohop_query id="AIDA_TA2_ZH_2019_0050">
    <reference_kbid> LDC2019E43:704508|LDC2019E43:80000042 </reference_kbid>
    <sparql>
 	<![CDATA[
              PREFIX ldcOnt: <https://tac.nist.gov/tracks/SM-KBP/2019/ontologies/LDCOntology#>
              PREFIX rdf:   <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
              PREFIX aida:  <https://tac.nist.gov/tracks/SM-KBP/2019/ontologies/InterchangeOntology#>
              PREFIX cfn:   <https://verdi.nextcentury.com/custom-function/>
              PREFIX xsd:   <http://www.w3.org/2001/XMLSchema#>
              
              # Query: AIDA_TA2_ZH_2019_0050
              # Query description: Find all informative mentions of entities linked to "LDC2019E43:704508|LDC2019E43:80000042"
              # NIST default aggregate confidence of ?cluster is a function of
              #      ?link_cv      # confidenceValue of asserting that ?cluster is the same as reference KB node ?link_target
              #      ?j_cv         # confidenceValue of informativeJustification
              
              # ?j_cv is used to rank informative mentions within a cluster for purposes of pooling and AP scoring.
              
              # In M18, we use the ?j_cv (confidence in the justification, e.g., confidence of _:b02) and interpret that confidence
              # as the confidence of linking the justification to the cluster; _:b02 is used *only* to represent an informative
              # mention for some cluster, even though that cluster is not referenced in _:b02. Ideally (in future), there would be
              # an aida:InformativeJustificationAssertion construct (paralleling the structure of an aida:LinkAssertion) that
              # associates a confidence to each aida:informativeJustification, and could represent the confidence of linking an
              # InformativeJustification to a cluster.
              
              # _:b12 a                        aida:TextJustification ;
              #      aida:confidence          [ a                     aida:Confidence ;
              #                                 aida:confidenceValue  "1.0"^^<http://www.w3.org/2001/XMLSchema#double> ;
              #                                 aida:system           ldc:testSystem
              #                               ] ;
              #      aida:endOffsetInclusive  "286"^^<http://www.w3.org/2001/XMLSchema#int> ;
              #      aida:privateData         [ a                 aida:PrivateData ;
              #                                 aida:jsonContent  "{\"mention\":\"M000721\"}" ;
              #                                 aida:system       ldc:testSystem
              #                               ] ;
              #      aida:source              "DE005" ;
              #      aida:sourceDocument      "D0100" ;
              #      aida:startOffset         "260"^^<http://www.w3.org/2001/XMLSchema#int> ;
              #      aida:system              ldc:testSystem .
              #
              # _:b11 a              aida:LinkAssertion ;
              #      aida:confidence [ a                     aida:Confidence ;
              #                        aida:confidenceValue  "0.498"^^xsd:double ;
              #                        aida:system           ldc:testSystem
              #                      ] ;
              #      aida:linkTarget "ldc:E0137" ;
              #      aida:system     ldc:testSystem .
              #
              # _:c12 a               aida:InformativeJustificationAssertion ;
              #       aida:confidence [ a                     aida:Confidence ;
              #                         aida:confidenceValue  "0.498"^^xsd:double ;
              #                         aida:system           ldc:testSystem
              #                       ] ;
              #      aida:informativeJustification _:b12 ;
              #      aida:system     ldc:testSystem .
              #
              # ldc:cluster-E0137     a                             aida:SameAsCluster ;
              #                       aida:informativeJustification _:c12 ;
              #                       aida:link                     _:b11 ;
              #                       aida:system                   ldc:testSystem .
              
              
              SELECT DISTINCT
                     ?docid             # sourceDocument
                     ?query_link_target # link target as part of the query
                     ?link_target       # link target in the KB matching ?query_link_target
                     ?cluster           # the ?cluster linked to ?link_target
                     ?infj_span         # informativeJustification span taken from the ?cluster
                     ?j_cv              # confidenceValue of informativeJustification
                     ?link_target       # query reference KB node linked to a ?cluster
                     ?link_cv           # confidenceValue of asserting that ?cluster is the same as reference KB node ?link_target
              
              WHERE {
                  BIND ("LDC2019E43:704508|LDC2019E43:80000042" AS ?query_link_target)
              
                  # Find ?cluster linked to "LDC2019E43:704508|LDC2019E43:80000042"
                  # Find the ?link_cv: confidenceValue of linking to external KB entity
                  ?cluster              a                             aida:SameAsCluster .
                  ?cluster              aida:informativeJustification ?inf_justification .
                  ?cluster              aida:link                     ?ref_kb_link .
                  ?ref_kb_link          a                             aida:LinkAssertion .
                  ?ref_kb_link          aida:linkTarget               ?link_target .
                  ?ref_kb_link          aida:confidence               ?link_confidence .
                  ?link_confidence      aida:confidenceValue          ?link_cv .
                  
                  FILTER(cfn:memberOf(str(?link_target), str(?query_link_target))) .
              
                  # Find mention spans for ?inf_justification
                  ?inf_justification    aida:source          ?doceid .
                  ?inf_justification    aida:sourceDocument  ?docid .
                  ?inf_justification    aida:confidence      ?j_confidence .
                  ?j_confidence         aida:confidenceValue ?j_cv .
              
                  OPTIONAL {
                         ?inf_justification a                           aida:TextJustification .
                         ?inf_justification aida:startOffset            ?so .
                         ?inf_justification aida:endOffsetInclusive     ?eo
                  }
                  OPTIONAL {
                         ?inf_justification a                           aida:ImageJustification .
                         ?inf_justification aida:boundingBox            ?bb1  .
                         ?bb1               aida:boundingBoxUpperLeftX  ?ulx1 .
                         ?bb1               aida:boundingBoxUpperLeftY  ?uly1 .
                         ?bb1               aida:boundingBoxLowerRightX ?lrx1 .
                         ?bb1               aida:boundingBoxLowerRightY ?lry1
                  }
                  OPTIONAL {
                         ?inf_justification a                           aida:KeyFrameVideoJustification .
                         ?inf_justification aida:keyFrame               ?kfid .
                         ?inf_justification aida:boundingBox            ?bb2  .
                         ?bb2               aida:boundingBoxUpperLeftX  ?ulx2 .
                         ?bb2               aida:boundingBoxUpperLeftY  ?uly2 .
                         ?bb2               aida:boundingBoxLowerRightX ?lrx2 .
                         ?bb2               aida:boundingBoxLowerRightY ?lry2
                  }
                  OPTIONAL {
                         ?inf_justification a                           aida:ShotVideoJustification .
                         ?inf_justification aida:shot                   ?sid
                  }
                  OPTIONAL {
                         ?inf_justification a                           aida:AudioJustification .
                         ?inf_justification aida:startTimestamp         ?st .
                         ?inf_justification aida:endTimestamp           ?et
                  }
              
                  BIND( IF( BOUND(?sid), ?sid, "__NULL__") AS ?_sid) .
                  BIND( IF( BOUND(?kfid), ?kfid, "__NULL__") AS ?_kfid) .
                  BIND( IF( BOUND(?so), ?so, "__NULL__") AS ?_so) .
                  BIND( IF( BOUND(?eo), ?eo, "__NULL__") AS ?_eo) .
                  BIND( IF( BOUND(?st), ?st, "__NULL__") AS ?_st) .
                  BIND( IF( BOUND(?et), ?et, "__NULL__") AS ?_et) .
                  BIND( COALESCE(?ulx1, ?ulx2, "__NULL__") AS ?_ulx) .
                  BIND( COALESCE(?uly1, ?uly2, "__NULL__") AS ?_uly) .
                  BIND( COALESCE(?lrx1, ?lrx2, "__NULL__") AS ?_lrx) .
                  BIND( COALESCE(?lry1, ?lry2, "__NULL__") AS ?_lry) .
              
                  BIND( cfn:getSpan(str(?docid), str(?doceid), str(?_sid), str(?_kfid), str(?_so), str(?_eo), str(?_ulx), str(?_uly), str(?_lrx), str(?_lry), str(?_st), str(?_et) ) AS ?infj_span ) .
              }
	]]>
     </sparql>
  </zerohop_query>
  <zerohop_query id="AIDA_TA2_ZH_2019_0051">
    <reference_kbid> LDC2019E43:80000014 </reference_kbid>
    <sparql>
 	<![CDATA[
              PREFIX ldcOnt: <https://tac.nist.gov/tracks/SM-KBP/2019/ontologies/LDCOntology#>
              PREFIX rdf:   <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
              PREFIX aida:  <https://tac.nist.gov/tracks/SM-KBP/2019/ontologies/InterchangeOntology#>
              PREFIX cfn:   <https://verdi.nextcentury.com/custom-function/>
              PREFIX xsd:   <http://www.w3.org/2001/XMLSchema#>
              
              # Query: AIDA_TA2_ZH_2019_0051
              # Query description: Find all informative mentions of entities linked to "LDC2019E43:80000014"
              # NIST default aggregate confidence of ?cluster is a function of
              #      ?link_cv      # confidenceValue of asserting that ?cluster is the same as reference KB node ?link_target
              #      ?j_cv         # confidenceValue of informativeJustification
              
              # ?j_cv is used to rank informative mentions within a cluster for purposes of pooling and AP scoring.
              
              # In M18, we use the ?j_cv (confidence in the justification, e.g., confidence of _:b02) and interpret that confidence
              # as the confidence of linking the justification to the cluster; _:b02 is used *only* to represent an informative
              # mention for some cluster, even though that cluster is not referenced in _:b02. Ideally (in future), there would be
              # an aida:InformativeJustificationAssertion construct (paralleling the structure of an aida:LinkAssertion) that
              # associates a confidence to each aida:informativeJustification, and could represent the confidence of linking an
              # InformativeJustification to a cluster.
              
              # _:b12 a                        aida:TextJustification ;
              #      aida:confidence          [ a                     aida:Confidence ;
              #                                 aida:confidenceValue  "1.0"^^<http://www.w3.org/2001/XMLSchema#double> ;
              #                                 aida:system           ldc:testSystem
              #                               ] ;
              #      aida:endOffsetInclusive  "286"^^<http://www.w3.org/2001/XMLSchema#int> ;
              #      aida:privateData         [ a                 aida:PrivateData ;
              #                                 aida:jsonContent  "{\"mention\":\"M000721\"}" ;
              #                                 aida:system       ldc:testSystem
              #                               ] ;
              #      aida:source              "DE005" ;
              #      aida:sourceDocument      "D0100" ;
              #      aida:startOffset         "260"^^<http://www.w3.org/2001/XMLSchema#int> ;
              #      aida:system              ldc:testSystem .
              #
              # _:b11 a              aida:LinkAssertion ;
              #      aida:confidence [ a                     aida:Confidence ;
              #                        aida:confidenceValue  "0.498"^^xsd:double ;
              #                        aida:system           ldc:testSystem
              #                      ] ;
              #      aida:linkTarget "ldc:E0137" ;
              #      aida:system     ldc:testSystem .
              #
              # _:c12 a               aida:InformativeJustificationAssertion ;
              #       aida:confidence [ a                     aida:Confidence ;
              #                         aida:confidenceValue  "0.498"^^xsd:double ;
              #                         aida:system           ldc:testSystem
              #                       ] ;
              #      aida:informativeJustification _:b12 ;
              #      aida:system     ldc:testSystem .
              #
              # ldc:cluster-E0137     a                             aida:SameAsCluster ;
              #                       aida:informativeJustification _:c12 ;
              #                       aida:link                     _:b11 ;
              #                       aida:system                   ldc:testSystem .
              
              
              SELECT DISTINCT
                     ?docid             # sourceDocument
                     ?query_link_target # link target as part of the query
                     ?link_target       # link target in the KB matching ?query_link_target
                     ?cluster           # the ?cluster linked to ?link_target
                     ?infj_span         # informativeJustification span taken from the ?cluster
                     ?j_cv              # confidenceValue of informativeJustification
                     ?link_target       # query reference KB node linked to a ?cluster
                     ?link_cv           # confidenceValue of asserting that ?cluster is the same as reference KB node ?link_target
              
              WHERE {
                  BIND ("LDC2019E43:80000014" AS ?query_link_target)
              
                  # Find ?cluster linked to "LDC2019E43:80000014"
                  # Find the ?link_cv: confidenceValue of linking to external KB entity
                  ?cluster              a                             aida:SameAsCluster .
                  ?cluster              aida:informativeJustification ?inf_justification .
                  ?cluster              aida:link                     ?ref_kb_link .
                  ?ref_kb_link          a                             aida:LinkAssertion .
                  ?ref_kb_link          aida:linkTarget               ?link_target .
                  ?ref_kb_link          aida:confidence               ?link_confidence .
                  ?link_confidence      aida:confidenceValue          ?link_cv .
                  
                  FILTER(cfn:memberOf(str(?link_target), str(?query_link_target))) .
              
                  # Find mention spans for ?inf_justification
                  ?inf_justification    aida:source          ?doceid .
                  ?inf_justification    aida:sourceDocument  ?docid .
                  ?inf_justification    aida:confidence      ?j_confidence .
                  ?j_confidence         aida:confidenceValue ?j_cv .
              
                  OPTIONAL {
                         ?inf_justification a                           aida:TextJustification .
                         ?inf_justification aida:startOffset            ?so .
                         ?inf_justification aida:endOffsetInclusive     ?eo
                  }
                  OPTIONAL {
                         ?inf_justification a                           aida:ImageJustification .
                         ?inf_justification aida:boundingBox            ?bb1  .
                         ?bb1               aida:boundingBoxUpperLeftX  ?ulx1 .
                         ?bb1               aida:boundingBoxUpperLeftY  ?uly1 .
                         ?bb1               aida:boundingBoxLowerRightX ?lrx1 .
                         ?bb1               aida:boundingBoxLowerRightY ?lry1
                  }
                  OPTIONAL {
                         ?inf_justification a                           aida:KeyFrameVideoJustification .
                         ?inf_justification aida:keyFrame               ?kfid .
                         ?inf_justification aida:boundingBox            ?bb2  .
                         ?bb2               aida:boundingBoxUpperLeftX  ?ulx2 .
                         ?bb2               aida:boundingBoxUpperLeftY  ?uly2 .
                         ?bb2               aida:boundingBoxLowerRightX ?lrx2 .
                         ?bb2               aida:boundingBoxLowerRightY ?lry2
                  }
                  OPTIONAL {
                         ?inf_justification a                           aida:ShotVideoJustification .
                         ?inf_justification aida:shot                   ?sid
                  }
                  OPTIONAL {
                         ?inf_justification a                           aida:AudioJustification .
                         ?inf_justification aida:startTimestamp         ?st .
                         ?inf_justification aida:endTimestamp           ?et
                  }
              
                  BIND( IF( BOUND(?sid), ?sid, "__NULL__") AS ?_sid) .
                  BIND( IF( BOUND(?kfid), ?kfid, "__NULL__") AS ?_kfid) .
                  BIND( IF( BOUND(?so), ?so, "__NULL__") AS ?_so) .
                  BIND( IF( BOUND(?eo), ?eo, "__NULL__") AS ?_eo) .
                  BIND( IF( BOUND(?st), ?st, "__NULL__") AS ?_st) .
                  BIND( IF( BOUND(?et), ?et, "__NULL__") AS ?_et) .
                  BIND( COALESCE(?ulx1, ?ulx2, "__NULL__") AS ?_ulx) .
                  BIND( COALESCE(?uly1, ?uly2, "__NULL__") AS ?_uly) .
                  BIND( COALESCE(?lrx1, ?lrx2, "__NULL__") AS ?_lrx) .
                  BIND( COALESCE(?lry1, ?lry2, "__NULL__") AS ?_lry) .
              
                  BIND( cfn:getSpan(str(?docid), str(?doceid), str(?_sid), str(?_kfid), str(?_so), str(?_eo), str(?_ulx), str(?_uly), str(?_lrx), str(?_lry), str(?_st), str(?_et) ) AS ?infj_span ) .
              }
	]]>
     </sparql>
  </zerohop_query>
  <zerohop_query id="AIDA_TA2_ZH_2019_0052">
    <reference_kbid> LDC2019E43:80000011 </reference_kbid>
    <sparql>
 	<![CDATA[
              PREFIX ldcOnt: <https://tac.nist.gov/tracks/SM-KBP/2019/ontologies/LDCOntology#>
              PREFIX rdf:   <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
              PREFIX aida:  <https://tac.nist.gov/tracks/SM-KBP/2019/ontologies/InterchangeOntology#>
              PREFIX cfn:   <https://verdi.nextcentury.com/custom-function/>
              PREFIX xsd:   <http://www.w3.org/2001/XMLSchema#>
              
              # Query: AIDA_TA2_ZH_2019_0052
              # Query description: Find all informative mentions of entities linked to "LDC2019E43:80000011"
              # NIST default aggregate confidence of ?cluster is a function of
              #      ?link_cv      # confidenceValue of asserting that ?cluster is the same as reference KB node ?link_target
              #      ?j_cv         # confidenceValue of informativeJustification
              
              # ?j_cv is used to rank informative mentions within a cluster for purposes of pooling and AP scoring.
              
              # In M18, we use the ?j_cv (confidence in the justification, e.g., confidence of _:b02) and interpret that confidence
              # as the confidence of linking the justification to the cluster; _:b02 is used *only* to represent an informative
              # mention for some cluster, even though that cluster is not referenced in _:b02. Ideally (in future), there would be
              # an aida:InformativeJustificationAssertion construct (paralleling the structure of an aida:LinkAssertion) that
              # associates a confidence to each aida:informativeJustification, and could represent the confidence of linking an
              # InformativeJustification to a cluster.
              
              # _:b12 a                        aida:TextJustification ;
              #      aida:confidence          [ a                     aida:Confidence ;
              #                                 aida:confidenceValue  "1.0"^^<http://www.w3.org/2001/XMLSchema#double> ;
              #                                 aida:system           ldc:testSystem
              #                               ] ;
              #      aida:endOffsetInclusive  "286"^^<http://www.w3.org/2001/XMLSchema#int> ;
              #      aida:privateData         [ a                 aida:PrivateData ;
              #                                 aida:jsonContent  "{\"mention\":\"M000721\"}" ;
              #                                 aida:system       ldc:testSystem
              #                               ] ;
              #      aida:source              "DE005" ;
              #      aida:sourceDocument      "D0100" ;
              #      aida:startOffset         "260"^^<http://www.w3.org/2001/XMLSchema#int> ;
              #      aida:system              ldc:testSystem .
              #
              # _:b11 a              aida:LinkAssertion ;
              #      aida:confidence [ a                     aida:Confidence ;
              #                        aida:confidenceValue  "0.498"^^xsd:double ;
              #                        aida:system           ldc:testSystem
              #                      ] ;
              #      aida:linkTarget "ldc:E0137" ;
              #      aida:system     ldc:testSystem .
              #
              # _:c12 a               aida:InformativeJustificationAssertion ;
              #       aida:confidence [ a                     aida:Confidence ;
              #                         aida:confidenceValue  "0.498"^^xsd:double ;
              #                         aida:system           ldc:testSystem
              #                       ] ;
              #      aida:informativeJustification _:b12 ;
              #      aida:system     ldc:testSystem .
              #
              # ldc:cluster-E0137     a                             aida:SameAsCluster ;
              #                       aida:informativeJustification _:c12 ;
              #                       aida:link                     _:b11 ;
              #                       aida:system                   ldc:testSystem .
              
              
              SELECT DISTINCT
                     ?docid             # sourceDocument
                     ?query_link_target # link target as part of the query
                     ?link_target       # link target in the KB matching ?query_link_target
                     ?cluster           # the ?cluster linked to ?link_target
                     ?infj_span         # informativeJustification span taken from the ?cluster
                     ?j_cv              # confidenceValue of informativeJustification
                     ?link_target       # query reference KB node linked to a ?cluster
                     ?link_cv           # confidenceValue of asserting that ?cluster is the same as reference KB node ?link_target
              
              WHERE {
                  BIND ("LDC2019E43:80000011" AS ?query_link_target)
              
                  # Find ?cluster linked to "LDC2019E43:80000011"
                  # Find the ?link_cv: confidenceValue of linking to external KB entity
                  ?cluster              a                             aida:SameAsCluster .
                  ?cluster              aida:informativeJustification ?inf_justification .
                  ?cluster              aida:link                     ?ref_kb_link .
                  ?ref_kb_link          a                             aida:LinkAssertion .
                  ?ref_kb_link          aida:linkTarget               ?link_target .
                  ?ref_kb_link          aida:confidence               ?link_confidence .
                  ?link_confidence      aida:confidenceValue          ?link_cv .
                  
                  FILTER(cfn:memberOf(str(?link_target), str(?query_link_target))) .
              
                  # Find mention spans for ?inf_justification
                  ?inf_justification    aida:source          ?doceid .
                  ?inf_justification    aida:sourceDocument  ?docid .
                  ?inf_justification    aida:confidence      ?j_confidence .
                  ?j_confidence         aida:confidenceValue ?j_cv .
              
                  OPTIONAL {
                         ?inf_justification a                           aida:TextJustification .
                         ?inf_justification aida:startOffset            ?so .
                         ?inf_justification aida:endOffsetInclusive     ?eo
                  }
                  OPTIONAL {
                         ?inf_justification a                           aida:ImageJustification .
                         ?inf_justification aida:boundingBox            ?bb1  .
                         ?bb1               aida:boundingBoxUpperLeftX  ?ulx1 .
                         ?bb1               aida:boundingBoxUpperLeftY  ?uly1 .
                         ?bb1               aida:boundingBoxLowerRightX ?lrx1 .
                         ?bb1               aida:boundingBoxLowerRightY ?lry1
                  }
                  OPTIONAL {
                         ?inf_justification a                           aida:KeyFrameVideoJustification .
                         ?inf_justification aida:keyFrame               ?kfid .
                         ?inf_justification aida:boundingBox            ?bb2  .
                         ?bb2               aida:boundingBoxUpperLeftX  ?ulx2 .
                         ?bb2               aida:boundingBoxUpperLeftY  ?uly2 .
                         ?bb2               aida:boundingBoxLowerRightX ?lrx2 .
                         ?bb2               aida:boundingBoxLowerRightY ?lry2
                  }
                  OPTIONAL {
                         ?inf_justification a                           aida:ShotVideoJustification .
                         ?inf_justification aida:shot                   ?sid
                  }
                  OPTIONAL {
                         ?inf_justification a                           aida:AudioJustification .
                         ?inf_justification aida:startTimestamp         ?st .
                         ?inf_justification aida:endTimestamp           ?et
                  }
              
                  BIND( IF( BOUND(?sid), ?sid, "__NULL__") AS ?_sid) .
                  BIND( IF( BOUND(?kfid), ?kfid, "__NULL__") AS ?_kfid) .
                  BIND( IF( BOUND(?so), ?so, "__NULL__") AS ?_so) .
                  BIND( IF( BOUND(?eo), ?eo, "__NULL__") AS ?_eo) .
                  BIND( IF( BOUND(?st), ?st, "__NULL__") AS ?_st) .
                  BIND( IF( BOUND(?et), ?et, "__NULL__") AS ?_et) .
                  BIND( COALESCE(?ulx1, ?ulx2, "__NULL__") AS ?_ulx) .
                  BIND( COALESCE(?uly1, ?uly2, "__NULL__") AS ?_uly) .
                  BIND( COALESCE(?lrx1, ?lrx2, "__NULL__") AS ?_lrx) .
                  BIND( COALESCE(?lry1, ?lry2, "__NULL__") AS ?_lry) .
              
                  BIND( cfn:getSpan(str(?docid), str(?doceid), str(?_sid), str(?_kfid), str(?_so), str(?_eo), str(?_ulx), str(?_uly), str(?_lrx), str(?_lry), str(?_st), str(?_et) ) AS ?infj_span ) .
              }
	]]>
     </sparql>
  </zerohop_query>
</zerohop_queries>
